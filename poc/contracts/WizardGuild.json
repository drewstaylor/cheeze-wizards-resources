{"contractName":"WizardGuild","abi":[{"constant":true,"inputs":[],"name":"cfoAddress","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"wizardId","type":"uint256"}],"name":"getApproved","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"to","type":"address"},{"name":"wizardId","type":"uint256"}],"name":"approve","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"ceoAddress","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"from","type":"address"},{"name":"to","type":"address"},{"name":"wizardId","type":"uint256"}],"name":"transferFrom","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"newCfo","type":"address"}],"name":"setCfo","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"from","type":"address"},{"name":"to","type":"address"},{"name":"wizardId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"wizardsById","outputs":[{"name":"affinity","type":"uint8"},{"name":"innatePower","type":"uint88"},{"name":"owner","type":"address"},{"name":"metadata","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"_INTERFACE_ID_ERC165","outputs":[{"name":"","type":"bytes4"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"wizardId","type":"uint256"}],"name":"ownerOf","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"newCeo","type":"address"}],"name":"setCeo","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"newCoo","type":"address"}],"name":"setCoo","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"to","type":"address"},{"name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"cooAddress","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"from","type":"address"},{"name":"to","type":"address"},{"name":"wizardId","type":"uint256"},{"name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"_INTERFACE_ID_INVALID","outputs":[{"name":"","type":"bytes4"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"owner","type":"address"},{"name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_contract","type":"address"},{"name":"_interfaceId","type":"bytes4"}],"name":"doesContractImplementInterface","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_cooAddress","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"seriesIndex","type":"uint64"},{"indexed":false,"name":"reservedIds","type":"uint256"}],"name":"SeriesOpen","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"seriesIndex","type":"uint64"}],"name":"SeriesClose","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"wizardId","type":"uint256"},{"indexed":false,"name":"metadata","type":"bytes32"}],"name":"MetadataSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"from","type":"address"},{"indexed":false,"name":"to","type":"address"},{"indexed":false,"name":"wizardId","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"owner","type":"address"},{"indexed":false,"name":"approved","type":"address"},{"indexed":false,"name":"wizardId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"owner","type":"address"},{"indexed":false,"name":"operator","type":"address"},{"indexed":false,"name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"wizardId","type":"uint256"},{"indexed":false,"name":"affinity","type":"uint8"},{"indexed":false,"name":"innatePower","type":"uint256"}],"name":"WizardConjured","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"wizardId","type":"uint256"},{"indexed":false,"name":"affinity","type":"uint8"}],"name":"WizardAffinityAssigned","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"previousCeo","type":"address"},{"indexed":false,"name":"newCeo","type":"address"}],"name":"CEOTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"previousCoo","type":"address"},{"indexed":false,"name":"newCoo","type":"address"}],"name":"COOTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"previousCfo","type":"address"},{"indexed":false,"name":"newCfo","type":"address"}],"name":"CFOTransferred","type":"event"},{"constant":false,"inputs":[{"name":"minter","type":"address"},{"name":"reservedIds","type":"uint256"}],"name":"openSeries","outputs":[{"name":"seriesId","type":"uint64"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"closeSeries","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"id","type":"uint256"}],"name":"getWizard","outputs":[{"name":"owner","type":"address"},{"name":"innatePower","type":"uint88"},{"name":"affinity","type":"uint8"},{"name":"metadata","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"powers","type":"uint88[]"},{"name":"affinities","type":"uint8[]"},{"name":"owner","type":"address"}],"name":"mintWizards","outputs":[{"name":"wizardIds","type":"uint256[]"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"wizardIds","type":"uint256[]"},{"name":"powers","type":"uint88[]"},{"name":"affinities","type":"uint8[]"},{"name":"owner","type":"address"}],"name":"mintReservedWizards","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"wizardIds","type":"uint256[]"},{"name":"metadata","type":"bytes32[]"}],"name":"setMetadata","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"wizardId","type":"uint256"},{"name":"newAffinity","type":"uint8"}],"name":"setAffinity","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"spender","type":"address"},{"name":"tokenId","type":"uint256"}],"name":"isApprovedOrOwner","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"wizardId","type":"uint256"},{"name":"hash","type":"bytes32"},{"name":"sig","type":"bytes"}],"name":"verifySignature","outputs":[],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"wizardId1","type":"uint256"},{"name":"wizardId2","type":"uint256"},{"name":"hash1","type":"bytes32"},{"name":"hash2","type":"bytes32"},{"name":"sig1","type":"bytes"},{"name":"sig2","type":"bytes"}],"name":"verifySignatures","outputs":[],"payable":false,"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cfoAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"wizardId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"wizardId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ceoAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"wizardId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wizardIds\",\"type\":\"uint256[]\"},{\"name\":\"metadata\",\"type\":\"bytes32[]\"}],\"name\":\"setMetadata\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newCfo\",\"type\":\"address\"}],\"name\":\"setCfo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"wizardId\",\"type\":\"uint256\"},{\"name\":\"hash\",\"type\":\"bytes32\"},{\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"verifySignature\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"closeSeries\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"wizardId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"isApprovedOrOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"minter\",\"type\":\"address\"},{\"name\":\"reservedIds\",\"type\":\"uint256\"}],\"name\":\"openSeries\",\"outputs\":[{\"name\":\"seriesId\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"powers\",\"type\":\"uint88[]\"},{\"name\":\"affinities\",\"type\":\"uint8[]\"},{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mintWizards\",\"outputs\":[{\"name\":\"wizardIds\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"wizardsById\",\"outputs\":[{\"name\":\"affinity\",\"type\":\"uint8\"},{\"name\":\"innatePower\",\"type\":\"uint88\"},{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"metadata\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_INTERFACE_ID_ERC165\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"wizardId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newCeo\",\"type\":\"address\"}],\"name\":\"setCeo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wizardId\",\"type\":\"uint256\"},{\"name\":\"newAffinity\",\"type\":\"uint8\"}],\"name\":\"setAffinity\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newCoo\",\"type\":\"address\"}],\"name\":\"setCoo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wizardIds\",\"type\":\"uint256[]\"},{\"name\":\"powers\",\"type\":\"uint88[]\"},{\"name\":\"affinities\",\"type\":\"uint8[]\"},{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mintReservedWizards\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"wizardId1\",\"type\":\"uint256\"},{\"name\":\"wizardId2\",\"type\":\"uint256\"},{\"name\":\"hash1\",\"type\":\"bytes32\"},{\"name\":\"hash2\",\"type\":\"bytes32\"},{\"name\":\"sig1\",\"type\":\"bytes\"},{\"name\":\"sig2\",\"type\":\"bytes\"}],\"name\":\"verifySignatures\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cooAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"wizardId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_INTERFACE_ID_INVALID\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_contract\",\"type\":\"address\"},{\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"doesContractImplementInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getWizard\",\"outputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"innatePower\",\"type\":\"uint88\"},{\"name\":\"affinity\",\"type\":\"uint8\"},{\"name\":\"metadata\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_cooAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"seriesIndex\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"reservedIds\",\"type\":\"uint256\"}],\"name\":\"SeriesOpen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"seriesIndex\",\"type\":\"uint64\"}],\"name\":\"SeriesClose\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"wizardId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"metadata\",\"type\":\"bytes32\"}],\"name\":\"MetadataSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wizardId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wizardId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"wizardId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"affinity\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"innatePower\",\"type\":\"uint256\"}],\"name\":\"WizardConjured\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"wizardId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"affinity\",\"type\":\"uint8\"}],\"name\":\"WizardAffinityAssigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"previousCeo\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newCeo\",\"type\":\"address\"}],\"name\":\"CEOTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"previousCoo\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newCoo\",\"type\":\"address\"}],\"name\":\"COOTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"previousCfo\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newCfo\",\"type\":\"address\"}],\"name\":\"CFOTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"params\":{\"to\":\"address to be approved for the given Wizard\",\"wizardId\":\"ID of the Wizard to be approved\"}},\"balanceOf(address)\":{\"params\":{\"owner\":\"Address to query the balance of.\"},\"return\":\"uint256 representing the amount of Wizards owned by the address.\"},\"constructor\":{\"params\":{\"_cooAddress\":\"The COO has the ability to create new Series and to update         the metadata on the currently open Series (if any). It has no other special         abilities, and (in particular), ALL Wizards in a closed series can never be         modified or deleted. If the CEO and COO values are ever set to invalid addresses        (such as address(1)), then no new Series can ever be created, either.\"}},\"getApproved(uint256)\":{\"params\":{\"wizardId\":\"ID of the Wizard to query the approval of\"},\"return\":\"address currently approved for the given Wizard\"},\"isApprovedForAll(address,address)\":{\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"mintReservedWizards(uint256[],uint88[],uint8[],address)\":{\"details\":\"This function DOES NOT CALL onERC721Received() as required by the ERC-721 standard. It is         REQUIRED that the Minter calls onERC721Received() after calling this function. See the note         above on mintWizards() for more info.\",\"params\":{\"affinities\":\"the Elements of the Wizards to create.\",\"owner\":\"the address that will own the newly created Wizards.\",\"powers\":\"the power level of each Wizard.\",\"wizardIds\":\"the ID values to use for each Wizard, must be in the reserved range of the current Series.\"}},\"mintWizards(uint88[],uint8[],address)\":{\"details\":\"This function DOES NOT CALL onERC721Received() as required by the ERC-721 standard. It is         REQUIRED that the Minter calls onERC721Received() after calling this function. The following         code snippet should suffice:                 // Ensure the Wizard is being assigned to an ERC-721 aware address (either an external address,                 // or a smart contract that implements onERC721Received()). We must call onERC721Recieved for                 // each token created because it's allowed for an ERC-721 receiving contract to reject the                 // transfer based on the properties of the token.                 if (isContract(owner)) {                     for (uint256 i = 0; i < wizardIds.length; i++) {                         bytes4 retval = IERC721Receiver(owner).onERC721Received(owner, address(0), wizardIds[i], \\\"\\\");                         require(retval == _ERC721_RECEIVED, \\\"Contract owner didn't accept ERC721 transfer\\\");                     }                 }        Although it would be convenient for mintWizards to call onERC721Recieved, it opens us up to potential        reentrancy attacks if the Minter needs to do more state updates after mintWizards() returns.\",\"params\":{\"affinities\":\"the Elements of the wizards to create\",\"owner\":\"the address that will own the newly created Wizards\",\"powers\":\"the power level of each wizard\"}},\"openSeries(address,uint256)\":{\"params\":{\"minter\":\"The address which is allowed to mint Wizards in this series. This contract does not         assume that the minter is a smart contract, but it will presumably be in the vast majority         of the cases. A minter has absolute control over the creation of new Wizards in an open         Series, but CAN NOT manipulate a Series after it has been close, and CAN NOT mainpulate         any Wizards that don't belong to its own Series. (Even if the same minting address is used         for multiple Series, the Minter only has power over the currently open Series.)\",\"reservedIds\":\"The number of IDs (from 1 to reservedIds, inclusive) that are reserved for minting         reserved Wizards. (We use the term \\\"reserved\\\" here, instead of Exclusive, because there         are times -- such as during the importation of the PreSale -- when we need to reserve a         block of IDs for Wizards that aren't what a user would think of as \\\"exclusive\\\". In Series         0, the reserved IDs will include all Exclusive Wizards and Presale Wizards. In other Series         it might also be the case that the set of \\\"reserved IDs\\\" doesn't exactly match the set of         \\\"exclusive\\\" IDs.)\"}},\"ownerOf(uint256)\":{\"params\":{\"wizardId\":\"ID of the Wizard to query the owner of\"},\"return\":\"address currently marked as the owner of the given Wizard\"},\"safeTransferFrom(address,address,uint256)\":{\"params\":{\"from\":\"current owner of the Wizard.\",\"to\":\"address to receive the ownership of the given Wizard.\",\"wizardId\":\"ID of the Wizard to be transferred.\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the Wizard.\",\"to\":\"address to receive the ownership of the given Wizard.\",\"wizardId\":\"ID of the Wizard to be transferred.\"}},\"setAffinity(uint256,uint8)\":{\"params\":{\"newAffinity\":\"The new affinity of the Wizard.\",\"wizardId\":\"The ID of the Wizard to update affinity of.\"}},\"setApprovalForAll(address,bool)\":{\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"setCeo(address)\":{\"params\":{\"newCeo\":\"The address of the new CEO\"}},\"setCfo(address)\":{\"params\":{\"newCfo\":\"The address of the new CFO\"}},\"setCoo(address)\":{\"params\":{\"newCoo\":\"The address of the new COO\"}},\"setMetadata(uint256[],bytes32[])\":{\"params\":{\"metadata\":\"the raw metadata values for each Wizard. This contract does not define how metadata         should be interpreted, but it is likely to be a 256-bit hash of a complete metadata package         accessible via IPFS or similar.\",\"wizardIds\":\"the ID values of the Wizards to apply metadata changes to.\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"from\":\"current owner of the Wizard.\",\"to\":\"address to receive the ownership of the given Wizard.\",\"wizardId\":\"ID of the Wizard to be transferred.\"}},\"verifySignature(uint256,bytes32,bytes)\":{\"params\":{\"hash\":\"The message hash we are authenticating against\",\"sig\":\"the signature data; can be longer than 65 bytes for ERC-1654\",\"wizardId\":\"The Wizard ID whose control is in question\"}},\"verifySignatures(uint256,uint256,bytes32,bytes32,bytes,bytes)\":{\"params\":{\"hash1\":\"The message hash we are authenticating against for the first Wizard\",\"hash2\":\"The message hash we are authenticating against for the first Wizard\",\"sig1\":\"the signature data corresponding to the first Wizard; can be longer than 65 bytes for ERC-1654\",\"sig2\":\"the signature data corresponding to the second Wizard; can be longer than 65 bytes for ERC-1654\",\"wizardId1\":\"The first Wizard ID whose control is in question\",\"wizardId2\":\"The second Wizard ID whose control is in question\"}}},\"title\":\"The master organization behind all Cheeze Wizardry. The source of all them Wiz.\"},\"userdoc\":{\"methods\":{\"approve(address,uint256)\":{\"notice\":\"Approves another address to transfer the given Wizard The zero address indicates there is no approved address. There can only be one approved address per Wizard at a given time. Can only be called by the Wizard owner or an approved operator.\"},\"balanceOf(address)\":{\"notice\":\"Gets the number of Wizards owned by the specified address.\"},\"closeSeries()\":{\"notice\":\"Closes the current Wizard Series. Once a Series has been closed, it is forever sealed and         no more Wizards in that Series can ever be minted! Can only be called by the COO when a Series         is open.     ///    NOTE: A series can be closed by the COO or the Minter. (It's assumed that some minters will          know when they are done, and others will need to be shut off manually by the COO.)\"},\"constructor\":\"The Guild constructor.\",\"getApproved(uint256)\":{\"notice\":\"Gets the approved address for a Wizard, or zero if no address set Reverts if the Wizard does not exist.\"},\"getWizard(uint256)\":{\"notice\":\"Returns the information associated with the given Wizard         owner - The address that owns this Wizard         innatePower - The innate power level of this Wizard, set when minted and entirely               immutable         affinity - The Elemental Affinity of this Wizard. For most Wizards, this is set               when they are minted, but some exclusive Wizards are minted with an affinity               of 0 (ELEMENT_NOTSET). A Wizard with an NOTSET affinity should NOT be able               to participate in Tournaments. Once the affinity of a Wizard is set to a non-zero               value, it can never be changed again.         metadata - A 256-bit hash of the Wizard's metadata, which is stored off chain. This               contract doesn't specify format of this hash, nor the off-chain storage mechanism               but, let's be honest, it's probably an IPFS SHA-256 hash.     ///         NOTE: Series zero Wizards have one of four Affinities:  Neutral (1), Fire (2), Water (3)               or Air (4, sometimes called \\\"Wind\\\" in the code). Future Wizard Series may have               additional Affinities, and clients of this API should be prepared for that               eventuality.\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Tells whether an operator is approved by a given owner.\"},\"isApprovedOrOwner(address,uint256)\":{\"notice\":\"Returns true if the given \\\"spender\\\" address is allowed to manipulate the given token         (either because it is the owner of that token, has been given approval to manage that token)\"},\"mintReservedWizards(uint256[],uint88[],uint8[],address)\":{\"notice\":\"A function to be called that mints a Series of Wizards in the reserved ID range, can only         be called by the Minter for this Series.\"},\"mintWizards(uint88[],uint8[],address)\":{\"notice\":\"A function to be called that conjures a whole bunch of Wizards at once! You know how         there's \\\"a pride of lions\\\", \\\"a murder of crows\\\", and \\\"a parliament of owls\\\"? Well, with this         here function you can conjure yourself \\\"a stench of Cheeze Wizards\\\"!     ///         Unsurprisingly, this method can only be called by the registered minter for a Series.\"},\"openSeries(address,uint256)\":{\"notice\":\"Open a new Series of Cheeze Wizards! Can only be called by the COO when no Series is open.\"},\"ownerOf(uint256)\":{\"notice\":\"Gets the owner of the specified Wizard\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Safely transfers the ownership of a given Wizard to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Safely transfers the ownership of a given Wizard to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\"},\"setAffinity(uint256,uint8)\":{\"notice\":\"Sets the affinity for a Wizard that doesn't already have its elemental affinity chosen.         Only usable for Exclusive Wizards (all non-Exclusives must have their affinity chosen when         conjured.) Even Exclusives can't change their affinity once it's been chosen.     ///         NOTE: This function can only be called by the Series minter, and (therefore) only while the         Series is open. A Wizard that has no affinity when a Series is closed will NEVER have an Affinity.\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Sets or unsets the approval of a given operator. An operator is allowed to transfer all Wizards of the sender on their behalf.\"},\"setCeo(address)\":{\"notice\":\"Assigns a new address to act as the CEO. Only available to the current CEO.\"},\"setCfo(address)\":{\"notice\":\"Assigns a new address to act as the CFO. Only available to the current CEO.\"},\"setCoo(address)\":{\"notice\":\"Assigns a new address to act as the COO. Only available to the current CEO.\"},\"setMetadata(uint256[],bytes32[])\":{\"notice\":\"Sets the metadata values for a list of Wizards. The metadata for a Wizard can only be set once,         can only be set by the COO or Minter, and can only be set while the Series is still open. Once         a Series is closed, the metadata is locked forever!\"},\"supportsInterface(bytes4)\":{\"notice\":\"ERC-165 Query Function.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfers the ownership of a given Wizard to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.\"},\"verifySignature(uint256,bytes32,bytes)\":{\"notice\":\"Verifies that a given signature represents authority to control the given Wizard ID,         reverting otherwise. It handles three cases:             - The simplest case: The signature was signed with the private key associated with               an external address that is the owner of this Wizard.             - The signature was generated with the private key associated with an external address               that is \\\"approved\\\" for working with this Wizard ID. (See the Wizard Guild and/or               the ERC-721 spec for more information on \\\"approval\\\".)             - The owner or approval address (as in cases one or two) is a smart contract               that conforms to ERC-1654, and accepts the given signature as being valid               using its own internal logic.     ///        NOTE: This function DOES NOT accept a signature created by an address that was given \\\"operator               status\\\" (as granted by ERC-721's setApprovalForAll() functionality). Doing so is               considered an extreme edge case that can be worked around where necessary.\"},\"verifySignatures(uint256,uint256,bytes32,bytes32,bytes,bytes)\":{\"notice\":\"Convienence function that verifies signatures for two wizards using equivalent logic to         verifySignature(). Included to save on cross-contract calls in the common case where we         are verifying the signatures of two Wizards who wish to enter into a Duel.\"}}}},\"settings\":{\"compilationTarget\":{\"/data/contracts/WizardGuild.sol\":\"WizardGuild\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/data/contracts/AccessControl.sol\":{\"keccak256\":\"0xf6d1211fbd10cfce5cfc503786d679f20dbe143cbcef94a22ea00f397fd6be82\",\"urls\":[\"bzzr://d6aa2118f4cc418188ef305ee9f9e82f6640e05207da564cb0700abc29156a84\"]},\"/data/contracts/Address.sol\":{\"keccak256\":\"0xdbe6fad0b72558b020078e680f1d15631c2ded98c643856ce192af4757658c5c\",\"urls\":[\"bzzr://91e69bdc2dbed47b2ed1e13c5ad4681ebdeec600015c52ef2bb37f4a495b83d6\"]},\"/data/contracts/ERC165/ERC165Interface.sol\":{\"keccak256\":\"0x8a8b9ea4b75a38de449cafcaf8ff8fbf26f81886a4e58ab3c1ba83798dfb4df8\",\"urls\":[\"bzzr://b6dc6d65360b8fd94b56e68b000fe9a8906b4cda5c99a5a2b23d37f0372fff8a\"]},\"/data/contracts/ERC165/ERC165Query.sol\":{\"keccak256\":\"0x9a208e43e2067156c0facc254a93abadb43ec2bd2bab2963cd2d70482c63e0fd\",\"urls\":[\"bzzr://3e67dd5203d8bf8f8fd7153bf5e2a311034a7facc4098449d3c5d05c2ca627a0\"]},\"/data/contracts/ERC1654/ERC1654.sol\":{\"keccak256\":\"0xd02dd58d98f1454098f80b53c72fa90952ee95f0b1465c8f4e3262a042ba5942\",\"urls\":[\"bzzr://cbfcec6e7c3006426c2f6985d359a4eb5f5cb11d2d1ed65ad025f0588d000332\"]},\"/data/contracts/SigTools.sol\":{\"keccak256\":\"0xc88c7f18790199f459e565e0ff346e8285288f95f45b3fee796b5e430be9d3ec\",\"urls\":[\"bzzr://96d5618747badee0cde237df01c5dee9df3df042c594e6e3fa17b8a0c51fd613\"]},\"/data/contracts/WizardConstants.sol\":{\"keccak256\":\"0x0f9d902d1a47d5545c0ad259297a1c260f1ae1aca775bee2d188065a12eeb0bd\",\"urls\":[\"bzzr://a390b901110b73b9d1673bd8abf9dd581b0ca71749720d9da3c345c739ea188f\"]},\"/data/contracts/WizardGuild.sol\":{\"keccak256\":\"0x577edf195bde0a99b99e05501b329292ef7d8744d48ffacd08e9c05a4f7c141f\",\"urls\":[\"bzzr://98cd14114ac4a7340366d42c51ed049d6a6a57dc223d64d174a76c95288a030c\"]},\"/data/contracts/WizardGuildInterface.sol\":{\"keccak256\":\"0x914868c68db6e906baf845bc456cc37f98c3461de9414596a46dbf07ff84b658\",\"urls\":[\"bzzr://433c4831c046f29d2c2f270f0ed1d9dfaad044c4096480a0243e11da2352540a\"]},\"/data/contracts/WizardNFT.sol\":{\"keccak256\":\"0x2ad1f8b5b7ff64092fbb031f448f7bb9b09f1190740127f096c5e240156718e7\",\"urls\":[\"bzzr://5bba8e218b2c2f05da766f2432a328ef8c5446a6fd1cfa53870801d567ba643f\"]},\"openzeppelin-solidity/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xc48ee580d20820cc0ef122b2acc9bf8836731dd8b9671cc03d21a12e3ab14976\",\"urls\":[\"bzzr://744cf3b8280d4a050ad0771e2ed0d7d41bbddfa40a541933d46bb31007a2e4a9\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x44fd7c58fc1323f8481f160f2fd4c34b1653d0cc5def45c2381898d32bcc023e\",\"urls\":[\"bzzr://b7c59c72ede9ca492a5606cbbfaa4ba84e9869d9bdcdac2183655baae8b64026\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xeb8a266ef2da0aa60eea704031902ffd28b2d13dd0e8f5b69bcfb8415f2dad85\",\"urls\":[\"bzzr://393e9843d41c0652f115378cc58083c4acc4d83f7999fe22932d5e237c215d3f\"]}},\"version\":1}","bytecode":"","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106101da5760003560e01c806359931a4811610104578063a096d9f0116100a2578063c8acad6f11610071578063c8acad6f14610a4f578063e985e9c514610a57578063e9c5438414610a85578063fac8eafc14610abb576101da565b8063a096d9f01461087f578063a22cb46514610955578063b047fb5014610983578063b88d4fde1461098b576101da565b806388975198116100de57806388975198146106f657806398d7a4141461071c5780639986a0c6146107425780639d15802314610768576101da565b806359931a481461067c5780636352211e146106a157806370a08231146106be576101da565b80632d46ed561161017c578063430c20811161014b578063430c2081146104995780634616c514146104c557806355fdbeec1461050e5780635938d97a14610625576101da565b80632d46ed56146103855780632f81b15d146103ab5780634094099a1461045b57806342842e0e14610463576101da565b8063095ea7b3116101b8578063095ea7b31461025b5780630a0f81681461028957806323b872dd146102915780632738ec3c146102c7576101da565b806301ffc9a7146101df5780630519ce791461021a578063081812fc1461023e575b600080fd5b610206600480360360208110156101f557600080fd5b50356001600160e01b031916610b12565b604080519115158252519081900360200190f35b610222610b40565b604080516001600160a01b039092168252519081900360200190f35b6102226004803603602081101561025457600080fd5b5035610b4f565b6102876004803603604081101561027157600080fd5b506001600160a01b038135169060200135610bb4565b005b610222610ce4565b610287600480360360608110156102a757600080fd5b506001600160a01b03813581169160208101359091169060400135610cf3565b610287600480360360408110156102dd57600080fd5b810190602081018135600160201b8111156102f757600080fd5b82018360208201111561030957600080fd5b803590602001918460208302840111600160201b8311171561032a57600080fd5b919390929091602081019035600160201b81111561034757600080fd5b82018360208201111561035957600080fd5b803590602001918460208302840111600160201b8311171561037a57600080fd5b509092509050610d4b565b6102876004803603602081101561039b57600080fd5b50356001600160a01b0316611036565b610287600480360360608110156103c157600080fd5b813591602081013591810190606081016040820135600160201b8111156103e757600080fd5b8201836020820111156103f957600080fd5b803590602001918460018302840111600160201b8311171561041a57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506110f9945050505050565b610287611190565b6102876004803603606081101561047957600080fd5b506001600160a01b038135811691602081013590911690604001356112dc565b610206600480360360408110156104af57600080fd5b506001600160a01b0381351690602001356112f7565b6104f1600480360360408110156104db57600080fd5b506001600160a01b03813516906020013561130a565b6040805167ffffffffffffffff9092168252519081900360200190f35b6105d56004803603606081101561052457600080fd5b810190602081018135600160201b81111561053e57600080fd5b82018360208201111561055057600080fd5b803590602001918460208302840111600160201b8311171561057157600080fd5b919390929091602081019035600160201b81111561058e57600080fd5b8201836020820111156105a057600080fd5b803590602001918460208302840111600160201b831117156105c157600080fd5b9193509150356001600160a01b03166114a9565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156106115781810151838201526020016105f9565b505050509050019250505060405180910390f35b6106426004803603602081101561063b57600080fd5b5035611648565b6040805160ff90951685526001600160581b0390931660208501526001600160a01b03909116838301526060830152519081900360800190f35b610684611687565b604080516001600160e01b03199092168252519081900360200190f35b610222600480360360208110156106b757600080fd5b5035611695565b6106e4600480360360208110156106d457600080fd5b50356001600160a01b03166116f3565b60408051918252519081900360200190f35b6102876004803603602081101561070c57600080fd5b50356001600160a01b0316611759565b6102876004803603604081101561073257600080fd5b508035906020013560ff166117be565b6102876004803603602081101561075857600080fd5b50356001600160a01b031661194e565b6102876004803603608081101561077e57600080fd5b810190602081018135600160201b81111561079857600080fd5b8201836020820111156107aa57600080fd5b803590602001918460208302840111600160201b831117156107cb57600080fd5b919390929091602081019035600160201b8111156107e857600080fd5b8201836020820111156107fa57600080fd5b803590602001918460208302840111600160201b8311171561081b57600080fd5b919390929091602081019035600160201b81111561083857600080fd5b82018360208201111561084a57600080fd5b803590602001918460208302840111600160201b8311171561086b57600080fd5b9193509150356001600160a01b0316611a11565b610287600480360360c081101561089557600080fd5b81359160208101359160408201359160608101359181019060a081016080820135600160201b8111156108c757600080fd5b8201836020820111156108d957600080fd5b803590602001918460018302840111600160201b831117156108fa57600080fd5b919390929091602081019035600160201b81111561091757600080fd5b82018360208201111561092957600080fd5b803590602001918460018302840111600160201b8311171561094a57600080fd5b509092509050611c15565b6102876004803603604081101561096b57600080fd5b506001600160a01b0381351690602001351515611c97565b610222611d6d565b610287600480360360808110156109a157600080fd5b6001600160a01b03823581169260208101359091169160408201359190810190608081016060820135600160201b8111156109db57600080fd5b8201836020820111156109ed57600080fd5b803590602001918460018302840111600160201b83111715610a0e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611d7c945050505050565b610684611dd7565b61020660048036036040811015610a6d57600080fd5b506001600160a01b0381358116916020013516611de3565b61020660048036036040811015610a9b57600080fd5b5080356001600160a01b031690602001356001600160e01b031916611e11565b610ad860048036036020811015610ad157600080fd5b5035611eb6565b604080516001600160a01b0390951685526001600160581b03909316602085015260ff909116838301526060830152519081900360800190f35b60006001600160e01b03198216600160e01b6341d4d437021480610b3a5750610b3a82611f92565b92915050565b6002546001600160a01b031681565b6000610b5a82611fcb565b610b9857604051600160e51b62461bcd02815260040180806020018281038252602c815260200180612b48602c913960400191505060405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610bbf82611695565b9050806001600160a01b0316836001600160a01b03161415610c1557604051600160e51b62461bcd028152600401808060200182810382526021815260200180612bc26021913960400191505060405180910390fd5b336001600160a01b0382161480610c315750610c318133611de3565b610c6f57604051600160e51b62461bcd028152600401808060200182810382526038815260200180612abd6038913960400191505060405180910390fd5b60008281526004602090815260409182902080546001600160a01b038088166001600160a01b03199092168217909255835191851682529181019190915280820184905290517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259181900360600190a1505050565b6000546001600160a01b031681565b610cfd3382611fef565b610d3b57604051600160e51b62461bcd028152600401808060200182810382526031815260200180612be36031913960400191505060405180910390fd5b610d46838383612096565b505050565b600754600160401b90046001600160a01b0316610db25760408051600160e51b62461bcd02815260206004820152601b60248201527f4e6f207365726965732069732063757272656e746c79206f70656e0000000000604482015290519081900360640190fd5b600754600160401b90046001600160a01b0316331480610ddc57506001546001600160a01b031633145b610e1a57604051600160e51b62461bcd028152600401808060200182810382526023815260200180612c146023913960400191505060405180910390fd5b828114610e715760408051600160e51b62461bcd02815260206004820152601e60248201527f496e636f6e73697374656e7420706172616d65746572206c656e677468730000604482015290519081900360640190fd5b60005b8381101561102f576000858583818110610e8a57fe5b9050602002013590506000848484818110610ea157fe5b600754602091909102929092013592505067ffffffffffffffff1660c01b6001600160c01b0319831614610f1f5760408051600160e51b62461bcd02815260206004820152601d60248201527f57697a61726473206e6f7420696e2063757272656e7420736572696573000000604482015290519081900360640190fd5b60008281526003602052604090206001015415610f865760408051600160e51b62461bcd02815260206004820152601460248201527f4d6574616461746120616c726561647920736574000000000000000000000000604482015290519081900360640190fd5b80610fdb5760408051600160e51b62461bcd02815260206004820152601060248201527f496e76616c6964206d6574616461746100000000000000000000000000000000604482015290519081900360640190fd5b6000828152600360209081526040918290206001018390558151838152915184927ff6812173c9728bd3bab2f1a94129341e47af8b8b78e2da481f8c45659d2d59eb92908290030190a25050600101610e74565b5050505050565b6000546001600160a01b031633146110865760408051600160e51b62461bcd0281526020600482015260086024820152600160c01b674f6e6c792043454f02604482015290519081900360640190fd5b61108f816121db565b600254604080516001600160a01b039283168152918316602083015280517fe1033d3cc535efc343c53636bdc05c52a44d9e70b089d4ad6e974379f2c651d69281900390910190a1600280546001600160a01b0319166001600160a01b0392909216919091179055565b600061110484611695565b905061111181848461229f565b1561111c5750610d46565b600061112785610b4f565b905061113481858561229f565b15611140575050610d46565b60408051600160e51b62461bcd02815260206004820152601160248201527f496e76616c6964207369676e6174757265000000000000000000000000000000604482015290519081900360640190fd5b600754600160401b90046001600160a01b03166111f75760408051600160e51b62461bcd02815260206004820152601b60248201527f4e6f207365726965732069732063757272656e746c79206f70656e0000000000604482015290519081900360640190fd5b600754600160401b90046001600160a01b031633148061122157506001546001600160a01b031633145b61125f57604051600160e51b62461bcd028152600401808060200182810382526025815260200180612b9d6025913960400191505060405180910390fd5b60078054600160401b600160e01b031981169091556040805167ffffffffffffffff9092168252517f05ba38dc3f1ba4a8bd95dbf51dd0f0141267df538cdd31a01819e9929acdce0d9181900360200190a16007805467ffffffffffffffff8082166001011667ffffffffffffffff199091161790556000600855565b610d4683838360405180602001604052806000815250611d7c565b60006113038383611fef565b9392505050565b6001546000906001600160a01b0316331461135d5760408051600160e51b62461bcd0281526020600482015260086024820152600160c01b674f6e6c7920434f4f02604482015290519081900360640190fd5b600754600160401b90046001600160a01b0316156113c55760408051600160e51b62461bcd02815260206004820152601860248201527f412073657269657320697320616c7265616479206f70656e0000000000000000604482015290519081900360640190fd5b6001600160a01b0383166114235760408051600160e51b62461bcd02815260206004820152601a60248201527f4d696e74657220616464726573732063616e6e6f742062652030000000000000604482015290519081900360640190fd5b60078054600160401b600160e01b031916600160401b6001600160a01b038616021790819055600183016008556040805167ffffffffffffffff90921682526020820184905280517f5be5961d909b3736a7b784a2d25cea0eb131c6c34ccdf94b2a376819c258ec8a9281900390910190a15060075467ffffffffffffffff1692915050565b600754606090600160401b90046001600160a01b031633146115155760408051600160e51b62461bcd02815260206004820152601760248201527f4f6e6c792063616c6c61626c65206279206d696e746572000000000000000000604482015290519081900360640190fd5b82851461156c5760408051600160e51b62461bcd02815260206004820152601e60248201527f496e636f6e73697374656e7420706172616d65746572206c656e677468730000604482015290519081900360640190fd5b604080518481526020808602820101909152838015611595578160200160208202803883390190505b5060085460075491925067ffffffffffffffff90911660c01b0160005b8481101561163257818382815181106115c757fe5b602002602001018181525050818060010192505061162a8382815181106115ea57fe5b6020026020010151858a8a858181106115ff57fe5b905060200201356001600160581b031689898681811061161b57fe5b9050602002013560ff1661248e565b6001016115b2565b506001600160c01b031660085595945050505050565b6003602052600090815260409020805460019091015460ff82169161010081046001600160581b031691600160601b9091046001600160a01b03169084565b600160e01b6301ffc9a70281565b600081815260036020526040812054600160601b90046001600160a01b031680610b3a57604051600160e51b62461bcd028152600401808060200182810382526029815260200180612b1f6029913960400191505060405180910390fd5b60006001600160a01b03821661173d57604051600160e51b62461bcd02815260040180806020018281038252602a815260200180612af5602a913960400191505060405180910390fd5b506001600160a01b031660009081526005602052604090205490565b6000546001600160a01b031633146117a95760408051600160e51b62461bcd0281526020600482015260086024820152600160c01b674f6e6c792043454f02604482015290519081900360640190fd5b6117b2816121db565b6117bb81612742565b50565b600754600160401b90046001600160a01b031633146118275760408051600160e51b62461bcd02815260206004820152601760248201527f4f6e6c792063616c6c61626c65206279206d696e746572000000000000000000604482015290519081900360640190fd5b60075467ffffffffffffffff1660c01b6001600160c01b03198316146118975760408051600160e51b62461bcd02815260206004820152601c60248201527f57697a617264206e6f7420696e2063757272656e742073657269657300000000604482015290519081900360640190fd5b6000828152600360205260409020805460ff16156118ff5760408051600160e51b62461bcd02815260206004820181905260248201527f416666696e6974792063616e206f6e6c792062652063686f73656e206f6e6365604482015290519081900360640190fd5b805460ff191660ff8316908117825560408051858152602081019290925280517fef597ca22f25aec904866c3228f39dd59d3bc8345b8fd3cbea7ce568c5b1b22a9281900390910190a1505050565b6000546001600160a01b0316331461199e5760408051600160e51b62461bcd0281526020600482015260086024820152600160c01b674f6e6c792043454f02604482015290519081900360640190fd5b6119a7816121db565b600154604080516001600160a01b039283168152918316602083015280517f1cd3afc04e6ae479d2b9f74533351b52218c5b2ae4f847f681a5eac514fe11849281900390910190a1600180546001600160a01b0319166001600160a01b0392909216919091179055565b600754600160401b90046001600160a01b03163314611a7a5760408051600160e51b62461bcd02815260206004820152601760248201527f4f6e6c792063616c6c61626c65206279206d696e746572000000000000000000604482015290519081900360640190fd5b8582148015611a8857508584145b611adc5760408051600160e51b62461bcd02815260206004820152601e60248201527f496e636f6e73697374656e7420706172616d65746572206c656e677468730000604482015290519081900360640190fd5b60005b86811015611c0b576000888883818110611af557fe5b600754602091909102929092013592505067ffffffffffffffff1660c01b6001600160c01b0319821614611b735760408051600160e51b62461bcd02815260206004820152601d60248201527f57697a61726473206e6f7420696e2063757272656e7420736572696573000000604482015290519081900360640190fd5b6008546001600160c01b03821610611bd55760408051600160e51b62461bcd02815260206004820152601d60248201527f57697a61726473206e6f7420696e2072657365727665642072616e6765000000604482015290519081900360640190fd5b611c028184898986818110611be657fe5b905060200201356001600160581b031688888781811061161b57fe5b50600101611adf565b5050505050505050565b611c56888786868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506110f992505050565b611c0b878684848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506110f992505050565b6001600160a01b038216331415611cf85760408051600160e51b62461bcd02815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b3360008181526006602090815260408083206001600160a01b03871680855290835292819020805486151560ff19909116811790915581519485529184019290925282820152517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360600190a15050565b6001546001600160a01b031681565b611d87848484610cf3565b611d93848484846127ac565b611dd157604051600160e51b62461bcd028152600401808060200182810382526032815260200180612a3b6032913960400191505060405180910390fd5b50505050565b6001600160e01b031981565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b60008080611e2985600160e01b6301ffc9a7026128dc565b9092509050811580611e39575080155b15611e4957600092505050610b3a565b611e5b856001600160e01b03196128dc565b9092509050811580611e6c57508015155b15611e7c57600092505050610b3a565b611e8685856128dc565b9092509050600182148015611e9b5750806001145b15611eab57600192505050610b3a565b506000949350505050565b600080600080611ec4612a13565b506000858152600360209081526040918290208251608081018452815460ff8116825261010081046001600160581b031693820193909352600160601b9092046001600160a01b031692820183905260010154606082015290611f715760408051600160e51b62461bcd02815260206004820152601560248201527f57697a61726420646f6573206e6f742065786973740000000000000000000000604482015290519081900360640190fd5b60408101516020820151825160609093015191989097509195509350915050565b60006001600160e01b03198216600160e01b6301ffc9a7021480610b3a5750506001600160e01b031916600160e01b6380ac58cd021490565b600090815260036020526040902054600160601b90046001600160a01b0316151590565b6000611ffa82611fcb565b61203857604051600160e51b62461bcd02815260040180806020018281038252602c815260200180612a91602c913960400191505060405180910390fd5b600061204383611695565b9050806001600160a01b0316846001600160a01b0316148061207e5750836001600160a01b031661207384610b4f565b6001600160a01b0316145b8061208e575061208e8185611de3565b949350505050565b826001600160a01b03166120a982611695565b6001600160a01b0316146120f157604051600160e51b62461bcd028152600401808060200182810382526029815260200180612b746029913960400191505060405180910390fd5b6001600160a01b03821661213957604051600160e51b62461bcd028152600401808060200182810382526024815260200180612a6d6024913960400191505060405180910390fd5b6121428161294b565b6001600160a01b038381166000818152600560209081526040808320805460001901905593861680835284832080546001019055858352600382529184902080546bffffffffffffffffffffffff16600160601b8402179055835192835282015280820183905290517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef916060908290030190a1505050565b6001600160a01b0381166122395760408051600160e51b62461bcd02815260206004820152601b60248201527f5a65726f2061636365737320636f6e74726f6c20616464726573730000000000604482015290519081900360640190fd5b6000546001600160a01b03828116911614156117bb5760408051600160e51b62461bcd02815260206004820152601c60248201527f43454f20616464726573732063616e6e6f742062652072657573656400000000604482015290519081900360640190fd5b60006001600160a01b0384166122b757506000611303565b6122c084612986565b156123f5576122d984600160e11b630b135d3f02611e11565b156123ed5760408051600160e11b630b135d3f028152600481018581526024820192835284516044830152845187936000936001600160a01b03861693631626ba7e938a938a93909160649091019060208501908083838c5b8381101561234a578181015183820152602001612332565b50505050905090810190601f1680156123775780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b15801561239557600080fd5b505afa1580156123a9573d6000803e3d6000fd5b505050506040513d60208110156123bf57600080fd5b505190506001600160e01b03198116600160e11b630b135d3f0214156123ea57600192505050611303565b50505b506000611303565b60008060006124038561298c565b925092509250600060018783868660405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015612468573d6000803e3d6000fd5b5050604051601f1901516001600160a01b038a8116911614955050505050509392505050565b6001600160a01b0383166124ec5760408051600160e51b62461bcd02815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b6124f584611fcb565b1561254a5760408051600160e51b62461bcd02815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b600084116125a25760408051600160e51b62461bcd02815260206004820152601260248201527f4e6f203020746f6b656e20616c6c6f7765640000000000000000000000000000604482015290519081900360640190fd5b6000826001600160581b0316116126035760408051600160e51b62461bcd02815260206004820152601d60248201527f57697a61726420706f776572206d757374206265206e6f6e2d7a65726f000000604482015290519081900360640190fd5b6040805160808101825260ff80841682526001600160581b0380861660208085019182526001600160a01b03808a1686880181815260006060808a018281528f8352600387528b83209a518b5498519451909616600160601b026bffffffffffffffffffffffff94909916610100026bffffffffffffffffffffff001996909a1660ff1990981697909717949094169790971716949094178655915160019586015582845260058152858420805490950190945584519283529282015280830187905291517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a16040805185815260ff831660208201526001600160581b0384168183015290517f3b7fcf44666972972487f1ac302bef03ee0d35027387ba8a897207466a0817259181900360600190a150505050565b600054604080516001600160a01b039283168152918316602083015280517f9d05f170f1d545b1aa21c4a4f79f17ff737f5f020ea1b333d88f29f0bbfa9fc69281900390910190a1600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006127b784612986565b6127c35750600161208e565b604051600160e11b630a85bd0102815233600482018181526001600160a01b03888116602485015260448401879052608060648501908152865160848601528651600095928a169463150b7a029490938c938b938b939260a4019060208501908083838e5b83811015612840578181015183820152602001612828565b50505050905090810190601f16801561286d5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561288f57600080fd5b505af11580156128a3573d6000803e3d6000fd5b505050506040513d60208110156128b957600080fd5b50516001600160e01b031916600160e11b630a85bd010214915050949350505050565b604080516001600160e01b031983166024808301919091528251808303909101815260449091018252602081810180516001600160e01b0316600160e01b6301ffc9a702178152825193516000808252948594939091908183858b617530fa9051909890975095505050505050565b6000818152600460205260409020546001600160a01b0316156117bb57600090815260046020526040902080546001600160a01b0319169055565b3b151590565b600080600083516041146129ea5760408051600160e51b62461bcd02815260206004820152601860248201527f496e76616c6964207369676e6174757265206c656e6774680000000000000000604482015290519081900360640190fd5b50505060208101516040820151604183015160ff16601b811015612a0c57601b015b9193909250565b6040805160808101825260008082526020820181905291810182905260608101919091529056fe4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4f6e6c79204d696e746572206f7220434f4f2063616e20636c6f73652061205365726965734552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665644f6e6c79204d696e746572206f7220434f4f2063616e20736574206d65746164617461a165627a7a72305820d2ccbd0219b4f7784433b47d405f1f0766f4a3419238672dafa68610f71745490029","sourceMap":"311:22306:21:-;;;3268:86;8:9:-1;5:2;;;30:1;27;20:12;5:2;3268:86:21;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3268:86:21;;3343:1;1836:19:0;1844:10;1836:7;3268:86:21;1836:7:0;;;:19;;:::i;:::-;1865:21;1872:13;1865:6;;;:21;;:::i;:::-;-1:-1:-1;;;;;1901:27:0;;;1897:79;;1944:21;1951:13;1944:6;;;:21;;:::i;:::-;1753:229;;3268:86:21;311:22306;;3140:126:0;3211:10;;3196:34;;;-1:-1:-1;;;;;3211:10:0;;;3196:34;;;;;;;;;;;;;;;;;;;;;3240:10;:19;;-1:-1:-1;;;;;;3240:19:0;-1:-1:-1;;;;;3240:19:0;;;;;;;;;;3140:126::o;3413:169::-;2098:10;;-1:-1:-1;;;;;2098:10:0;2084;:24;2076:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3470:27;3490:6;3470:19;;;:27;;:::i;:::-;3527:10;;3512:34;;;-1:-1:-1;;;;;3527:10:0;;;3512:34;;;;;;;;;;;;;;;;;;;;;3556:10;:19;;-1:-1:-1;;;;;;3556:19:0;-1:-1:-1;;;;;3556:19:0;;;;;;;;;;3413:169::o;3729:177::-;2098:10;;-1:-1:-1;;;;;2098:10:0;2084;:24;2076:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3794:27;3814:6;3794:19;;;:27;;:::i;:::-;3851:10;;3836:34;;;-1:-1:-1;;;;;3851:10:0;;;3836:34;;;;;;;;;;;;;;;;;;;;;3880:10;:19;;-1:-1:-1;;;;;;3880:19:0;-1:-1:-1;;;;;3880:19:0;;;;;;;;;;3729:177::o;2463:228::-;-1:-1:-1;;;;;2547:27:0;;2539:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2641:10;;-1:-1:-1;;;;;2624:27:0;;;2641:10;;2624:27;;2616:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2463:228;:::o;311:22306:21:-;;;;;;;","deployedSourceMap":"311:22306:21:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;311:22306:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7334:178;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7334:178:21;-1:-1:-1;;;;;;7334:178:21;;:::i;:::-;;;;;;;;;;;;;;;;;;1130:33:0;;;:::i;:::-;;;;-1:-1:-1;;;;;1130:33:0;;;;;;;;;;;;;;5601:202:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5601:202:23;;:::i;4910:427::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4910:427:23;;;;;;;;:::i;:::-;;523:25:0;;;:::i;7213:236:23:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;7213:236:23;;;;;;;;;;;;;;;;;:::i;15173:886:21:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15173:886:21;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;15173:886:21;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15173:886:21;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;15173:886:21;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;15173:886:21;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15173:886:21;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;-1:-1;15173:886:21;;-1:-1:-1;15173:886:21;-1:-1:-1;15173:886:21;:::i;3729:177:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3729:177:0;-1:-1:-1;;;;;3729:177:0;;:::i;19037:562:21:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;19037:562:21;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;19037:562:21;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;19037:562:21;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;19037:562:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;19037:562:21;;-1:-1:-1;19037:562:21;;-1:-1:-1;;;;;19037:562:21:i;6931:357::-;;;:::i;8073:134:23:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;8073:134:23;;;;;;;;;;;;;;;;;:::i;17479:148:21:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;17479:148:21;;;;;;;;:::i;5868:604::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5868:604:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11167:869;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11167:869:21;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;11167:869:21;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;11167:869:21;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;11167:869:21;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;11167:869:21;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;11167:869:21;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;11167:869:21;;-1:-1:-1;11167:869:21;-1:-1:-1;11167:869:21;-1:-1:-1;;;;;11167:869:21;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;11167:869:21;;;;;;;;;;;;;;;;;2082:46:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2082:46:23;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;2082:46:23;;;;;;;-1:-1:-1;;;;;2082:46:23;;;;;;;;;;;;;;;;;;;;232:56:7;;;:::i;:::-;;;;-1:-1:-1;;;;;;232:56:7;;;;;;;;;;;;;;4274:230:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4274:230:23;;:::i;3880:196::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3880:196:23;-1:-1:-1;;;;;3880:196:23;;:::i;:::-;;;;;;;;;;;;;;;;2838:118:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2838:118:0;-1:-1:-1;;;;;2838:118:0;;:::i;16728:535:21:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;16728:535:21;;;;;;;;;:::i;3413:169:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3413:169:0;-1:-1:-1;;;;;3413:169:0;;:::i;12779:1749:21:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;12779:1749:21;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;12779:1749:21;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;12779:1749:21;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;12779:1749:21;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;12779:1749:21;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;12779:1749:21;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;12779:1749:21;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;12779:1749:21;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;12779:1749:21;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;12779:1749:21;;-1:-1:-1;12779:1749:21;-1:-1:-1;12779:1749:21;-1:-1:-1;;;;;12779:1749:21;;:::i;20462:308::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;20462:308:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;20462:308:21;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;20462:308:21;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;20462:308:21;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;20462:308:21;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;20462:308:21;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;20462:308:21;;-1:-1:-1;20462:308:21;-1:-1:-1;20462:308:21;:::i;6089:242:23:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6089:242:23;;;;;;;;;;:::i;907:25:0:-;;;:::i;8903:268:23:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;8903:268:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;8903:268:23;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8903:268:23;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8903:268:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;8903:268:23;;-1:-1:-1;8903:268:23;;-1:-1:-1;;;;;8903:268:23:i;169:57:7:-;;;:::i;6644:145:23:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6644:145:23;;;;;;;;;;:::i;295:701:7:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;295:701:7;;-1:-1:-1;;;;;295:701:7;;;;;-1:-1:-1;;;;;;295:701:7;;:::i;8865:367:21:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8865:367:21;;:::i;:::-;;;;-1:-1:-1;;;;;8865:367:21;;;;;-1:-1:-1;;;;;8865:367:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;7334:178;7402:4;-1:-1:-1;;;;;;7425:40:21;;-1:-1:-1;;;;;7425:40:21;;:80;;;7469:36;7493:11;7469:23;:36::i;:::-;7418:87;7334:178;-1:-1:-1;;7334:178:21:o;1130:33:0:-;;;-1:-1:-1;;;;;1130:33:0;;:::o;5601:202:23:-;5661:7;5688:17;5696:8;5688:7;:17::i;:::-;5680:74;;;;-1:-1:-1;;;;;5680:74:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5771:25:23;;;;:15;:25;;;;;;-1:-1:-1;;;;;5771:25:23;;5601:202::o;4910:427::-;4974:13;4990:17;4998:8;4990:7;:17::i;:::-;4974:33;;5031:5;-1:-1:-1;;;;;5025:11:23;:2;-1:-1:-1;;;;;5025:11:23;;;5017:57;;;;-1:-1:-1;;;;;5017:57:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5105:10;-1:-1:-1;;;;;5105:19:23;;;;:58;;;5128:35;5145:5;5152:10;5128:16;:35::i;:::-;5084:161;;;;-1:-1:-1;;;;;5084:161:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5256:25;;;;:15;:25;;;;;;;;;:30;;-1:-1:-1;;;;;5256:30:23;;;-1:-1:-1;;;;;;5256:30:23;;;;;;;;5301:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4910:427;;;:::o;523:25:0:-;;;-1:-1:-1;;;;;523:25:0;;:::o;7213:236:23:-;7304:40;7323:10;7335:8;7304:18;:40::i;:::-;7296:102;;;;-1:-1:-1;;;;;7296:102:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7409:33;7423:4;7429:2;7433:8;7409:13;:33::i;:::-;7213:236;;;:::o;15173:886:21:-;3798:12;;-1:-1:-1;;;3798:12:21;;-1:-1:-1;;;;;3798:12:21;3790:66;;;;;-1:-1:-1;;;;;3790:66:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;15307:12;;-1:-1:-1;;;15307:12:21;;-1:-1:-1;;;;;15307:12:21;15293:10;:26;;:54;;-1:-1:-1;15337:10:21;;-1:-1:-1;;;;;15337:10:21;15323;:24;15293:54;15285:102;;;;-1:-1:-1;;;;;15285:102:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15405:35;;;15397:78;;;;;-1:-1:-1;;;;;15397:78:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;15491:9;15486:567;15506:20;;;15486:567;;;15547:17;15567:9;;15577:1;15567:12;;;;;;;;;;;;;15547:32;;15593:23;15619:8;;15628:1;15619:11;;;;;;;15690;;15619;;;;;;;;;;;-1:-1:-1;;15690:11:21;;2524:3;15682:36;-1:-1:-1;;;;;;15654:22:21;;15653:66;15645:108;;;;;-1:-1:-1;;;;;15645:108:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;15819:1;15776:22;;;:11;:22;;;;;:31;;;:45;15768:78;;;;;-1:-1:-1;;;;;15768:78:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;15869:29;15861:58;;;;;-1:-1:-1;;;;;15861:58:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;15934:22;;;;:11;:22;;;;;;;;;:31;;:49;;;16003:39;;;;;;;15946:9;;16003:39;;;;;;;;;-1:-1:-1;;15528:3:21;;15486:567;;;;15173:886;;;;:::o;3729:177:0:-;2098:10;;-1:-1:-1;;;;;2098:10:0;2084;:24;2076:45;;;;;-1:-1:-1;;;;;2076:45:0;;;;;;;;;;;;-1:-1:-1;;;;;2076:45:0;;;;;;;;;;;;;;;3794:27;3814:6;3794:19;:27::i;:::-;3851:10;;3836:34;;;-1:-1:-1;;;;;3851:10:0;;;3836:34;;;;;;;;;;;;;;;;;;;;;3880:10;:19;;-1:-1:-1;;;;;;3880:19:0;-1:-1:-1;;;;;3880:19:0;;;;;;;;;;3729:177::o;19037:562:21:-;19216:13;19232:17;19240:8;19232:7;:17::i;:::-;19216:33;;19264:43;19290:5;19297:4;19303:3;19264:25;:43::i;:::-;19260:80;;;19323:7;;;19260:80;19421:16;19440:21;19452:8;19440:11;:21::i;:::-;19421:40;;19476:46;19502:8;19512:4;19518:3;19476:25;:46::i;:::-;19472:83;;;19538:7;;;;19472:83;19565:27;;;-1:-1:-1;;;;;19565:27:21;;;;;;;;;;;;;;;;;;;;;;;;;;;6931:357;3798:12;;-1:-1:-1;;;3798:12:21;;-1:-1:-1;;;;;3798:12:21;3790:66;;;;;-1:-1:-1;;;;;3790:66:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;7021:12;;-1:-1:-1;;;7021:12:21;;-1:-1:-1;;;;;7021:12:21;7007:10;:26;;:54;;-1:-1:-1;7051:10:21;;-1:-1:-1;;;;;7051:10:21;7037;:24;7007:54;6986:129;;;;-1:-1:-1;;;;;6986:129:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7126:12;:25;;-1:-1:-1;;;;;;;;7126:25:21;;;;;7166:24;;;7178:11;;;;7166:24;;;;;;;;;;;;7236:11;:16;;;;;;7251:1;7236:16;;-1:-1:-1;;7236:16:21;;;;;;:11;7262:15;:19;6931:357::o;8073:134:23:-;8160:40;8177:4;8183:2;8187:8;8160:40;;;;;;;;;;;;:16;:40::i;17479:148:21:-;17561:4;17584:36;17603:7;17612;17584:18;:36::i;:::-;17577:43;17479:148;-1:-1:-1;;;17479:148:21:o;5868:604::-;2255:10:0;;5951:15:21;;-1:-1:-1;;;;;2255:10:0;2241;:24;2233:45;;;;;-1:-1:-1;;;;;2233:45:0;;;;;;;;;;;;-1:-1:-1;;;;;2233:45:0;;;;;;;;;;;;;;;5986:12:21;;-1:-1:-1;;;5986:12:21;;-1:-1:-1;;;;;5986:12:21;:26;5978:63;;;;;-1:-1:-1;;;;;5978:63:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6059:20:21;;6051:59;;;;;-1:-1:-1;;;;;6051:59:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;6320:12;:21;;-1:-1:-1;;;;;;;;6320:21:21;-1:-1:-1;;;;;;;;6320:21:21;;;;;;;;-1:-1:-1;6369:15:21;;6320:12;6351:33;6400:36;;;6411:11;;;;6400:36;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6454:11:21;;;;5868:604;;;;:::o;11167:869::-;4401:12;;11317:26;;-1:-1:-1;;;4401:12:21;;-1:-1:-1;;;;;4401:12:21;4387:10;:26;4379:62;;;;;-1:-1:-1;;;;;4379:62:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;11367:34;;;11359:77;;;;;-1:-1:-1;;;;;11359:77:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;11492:32;;;;;;;;;;;;;;;;11506:10;11492:32;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;11492:32:21;-1:-1:-1;11748:15:21;;11716:11;;11480:44;;-1:-1:-1;11716:11:21;;;;2524:3;11708:36;11707:56;11684:20;11774:203;11794:21;;;11774:203;;;11851:12;11836:9;11846:1;11836:12;;;;;;;;;;;;;:27;;;;;11877:14;;;;;;;11906:60;11920:9;11930:1;11920:12;;;;;;;;;;;;;;11934:5;11941:6;;11948:1;11941:9;;;;;;;;;;;;;-1:-1:-1;;;;;11941:9:21;11952:10;;11963:1;11952:13;;;;;;;;;;;;;;;11906;:60::i;:::-;11817:3;;11774:203;;;-1:-1:-1;;;;;;12005:24:21;11987:15;:42;11167:869;;-1:-1:-1;;;;;11167:869:21:o;2082:46:23:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2082:46:23;;-1:-1:-1;;;2082:46:23;;;-1:-1:-1;;;;;2082:46:23;;;:::o;232:56:7:-;-1:-1:-1;;;;;232:56:7;:::o;4274:230:23:-;4330:7;4365:21;;;:11;:21;;;;;:27;-1:-1:-1;;;4365:27:23;;-1:-1:-1;;;;;4365:27:23;;4402:73;;;;-1:-1:-1;;;;;4402:73:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3880:196;3935:7;-1:-1:-1;;;;;3962:19:23;;3954:74;;;;-1:-1:-1;;;;;3954:74:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4045:24:23;;;;;:17;:24;;;;;;;3880:196::o;2838:118:0:-;2098:10;;-1:-1:-1;;;;;2098:10:0;2084;:24;2076:45;;;;;-1:-1:-1;;;;;2076:45:0;;;;;;;;;;;;-1:-1:-1;;;;;2076:45:0;;;;;;;;;;;;;;;2897:27;2917:6;2897:19;:27::i;:::-;2934:15;2942:6;2934:7;:15::i;:::-;2838:118;:::o;16728:535:21:-;4401:12;;-1:-1:-1;;;4401:12:21;;-1:-1:-1;;;;;4401:12:21;4387:10;:26;4379:62;;;;;-1:-1:-1;;;;;4379:62:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;16860:11;;;;2524:3;16852:36;-1:-1:-1;;;;;;16825:21:21;;16824:65;16816:106;;;;;-1:-1:-1;;;;;16816:106:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;16933:21;16957;;;:11;:21;;;;;16997:15;;:33;:15;:33;16989:78;;;;;-1:-1:-1;;;;;16989:78:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17106:29;;-1:-1:-1;;17106:29:21;;;;;;;;;17211:45;;;;;;;;;;;;;;;;;;;;;;;;;4451:1;16728:535;;:::o;3413:169:0:-;2098:10;;-1:-1:-1;;;;;2098:10:0;2084;:24;2076:45;;;;;-1:-1:-1;;;;;2076:45:0;;;;;;;;;;;;-1:-1:-1;;;;;2076:45:0;;;;;;;;;;;;;;;3470:27;3490:6;3470:19;:27::i;:::-;3527:10;;3512:34;;;-1:-1:-1;;;;;3527:10:0;;;3512:34;;;;;;;;;;;;;;;;;;;;;3556:10;:19;;-1:-1:-1;;;;;;3556:19:0;-1:-1:-1;;;;;3556:19:0;;;;;;;;;;3413:169::o;12779:1749:21:-;4401:12;;-1:-1:-1;;;4401:12:21;;-1:-1:-1;;;;;4401:12:21;4387:10;:26;4379:62;;;;;-1:-1:-1;;;;;4379:62:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;13005:37;;;:86;;;;-1:-1:-1;13058:33:21;;;13005:86;12984:142;;;;;-1:-1:-1;;;;;12984:142:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;13142:9;13137:1385;13157:20;;;13137:1385;;;13198:17;13218:9;;13228:1;13218:12;;;;;;;13290:11;;13218:12;;;;;;;;;;;-1:-1:-1;;13290:11:21;;2524:3;13282:36;-1:-1:-1;;;;;;13254:22:21;;13253:66;13245:108;;;;;-1:-1:-1;;;;;13245:108:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;14390:15;;-1:-1:-1;;;;;14365:21:21;;14364:41;14356:83;;;;;-1:-1:-1;;;;;14356:83:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;14454:57;14468:9;14479:5;14486:6;;14493:1;14486:9;;;;;;;;;;;;;-1:-1:-1;;;;;14486:9:21;14497:10;;14508:1;14497:13;;;;;;14454:57;-1:-1:-1;13179:3:21;;13137:1385;;;;12779:1749;;;;;;;:::o;20462:308::-;20675:39;20691:9;20702:5;20709:4;;20675:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;20675:15:21;;-1:-1:-1;;;20675:39:21:i;:::-;20724;20740:9;20751:5;20758:4;;20724:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;20724:15:21;;-1:-1:-1;;;20724:39:21:i;6089:242:23:-;-1:-1:-1;;;;;6168:16:23;;6174:10;6168:16;;6160:54;;;;;-1:-1:-1;;;;;6160:54:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;6243:10;6224:30;;;;:18;:30;;;;;;;;-1:-1:-1;;;;;6224:34:23;;;;;;;;;;;;:45;;;;;-1:-1:-1;;6224:45:23;;;;;;;;6284:40;;;;;;;;;;;;;;;;;;;;;;;;;;6089:242;;:::o;907:25:0:-;;;-1:-1:-1;;;;;907:25:0;;:::o;8903:268:23:-;9010:32;9023:4;9029:2;9033:8;9010:12;:32::i;:::-;9060:49;9083:4;9089:2;9093:8;9103:5;9060:22;:49::i;:::-;9052:112;;;;-1:-1:-1;;;;;9052:112:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8903:268;;;;:::o;169:57:7:-;-1:-1:-1;;;;;;169:57:7;:::o;6644:145:23:-;-1:-1:-1;;;;;6747:25:23;;;6724:4;6747:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;6644:145::o;295:701:7:-;442:4;;;532:44;544:9;-1:-1:-1;;;;;532:11:7;:44::i;:::-;512:64;;-1:-1:-1;512:64:7;-1:-1:-1;591:12:7;;;590:31;;-1:-1:-1;609:11:7;;590:31;586:74;;;644:5;637:12;;;;;;586:74;690:45;702:9;-1:-1:-1;;;;;;690:11:7;:45::i;:::-;670:65;;-1:-1:-1;670:65:7;-1:-1:-1;750:12:7;;;749:31;;-1:-1:-1;768:11:7;;;749:31;745:74;;;803:5;796:12;;;;;;745:74;849:36;861:9;872:12;849:11;:36::i;:::-;829:56;;-1:-1:-1;829:56:7;-1:-1:-1;911:1:7;900:12;;899:31;;;;;918:6;928:1;918:11;899:31;895:73;;;953:4;946:11;;;;;;895:73;-1:-1:-1;984:5:7;;295:701;-1:-1:-1;;;;295:701:7:o;8865:367:21:-;8917:13;8932:18;8952:14;8968:16;8996:20;;:::i;:::-;-1:-1:-1;9019:15:21;;;;:11;:15;;;;;;;;;8996:38;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8996:38:21;;;;;;;;-1:-1:-1;;;8996:38:21;;;-1:-1:-1;;;;;8996:38:21;;;;;;;;;;;;;;;9044:60;;;;;-1:-1:-1;;;;;9044:60:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;9158:12;;;;9172:18;;;;9192:15;;9209;;;;;9158:12;;9172:18;;-1:-1:-1;9192:15:21;;-1:-1:-1;9209:15:21;-1:-1:-1;8865:367:21;-1:-1:-1;;8865:367:21:o;3437:227:23:-;3505:4;-1:-1:-1;;;;;;3540:46:23;;-1:-1:-1;;;;;3540:46:23;;:107;;-1:-1:-1;;;;;;;;3612:35:23;-1:-1:-1;;;;;3612:35:23;;3437:227::o;9355:160::-;9413:4;9445:21;;;:11;:21;;;;;:27;-1:-1:-1;;;9445:27:23;;-1:-1:-1;;;;;9445:27:23;9489:19;;;9355:160::o;9860:333::-;9946:4;9970:17;9978:8;9970:7;:17::i;:::-;9962:74;;;;-1:-1:-1;;;;;9962:74:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10046:13;10062:17;10070:8;10062:7;:17::i;:::-;10046:33;;10108:5;-1:-1:-1;;;;;10097:16:23;:7;-1:-1:-1;;;;;10097:16:23;;:52;;;;10142:7;-1:-1:-1;;;;;10117:32:23;:21;10129:8;10117:11;:21::i;:::-;-1:-1:-1;;;;;10117:32:23;;10097:52;:88;;;;10153:32;10170:5;10177:7;10153:16;:32::i;:::-;10089:97;9860:333;-1:-1:-1;;;;9860:333:23:o;12802:438::-;12917:4;-1:-1:-1;;;;;12896:25:23;:17;12904:8;12896:7;:17::i;:::-;-1:-1:-1;;;;;12896:25:23;;12888:79;;;;-1:-1:-1;;;;;12888:79:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12985:16:23;;12977:65;;;;-1:-1:-1;;;;;12977:65:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13053:24;13068:8;13053:14;:24::i;:::-;-1:-1:-1;;;;;13088:23:23;;;;;;;:17;:23;;;;;;;;:25;;-1:-1:-1;;13088:25:23;;;13123:21;;;;;;;;;:23;;-1:-1:-1;13123:23:23;;;13157:21;;;:11;:21;;;;;;:32;;;;-1:-1:-1;;;13157:32:23;;;;;13205:28;;;;;;;;;;;;;;;;;;;;;;;;;;12802:438;;;:::o;2463:228:0:-;-1:-1:-1;;;;;2547:27:0;;2539:67;;;;;-1:-1:-1;;;;;2539:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;2641:10;;-1:-1:-1;;;;;2624:27:0;;;2641:10;;2624:27;;2616:68;;;;;-1:-1:-1;;;;;2616:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;21139:1475:21;21266:4;-1:-1:-1;;;;;21290:28:21;;21286:1322;;-1:-1:-1;21429:5:21;21422:12;;21286:1322;21455:34;21474:14;21455:18;:34::i;:::-;21451:1157;;;21828:70;21859:14;-1:-1:-1;;;;;21828:30:21;:70::i;:::-;21824:359;;;22024:37;;;-1:-1:-1;;;;;22024:37:21;;;;;;;;;;;;;;;;;;;;;;21975:14;;21953:11;;-1:-1:-1;;;;;22024:20:21;;;;;22045:4;;22051:9;;22024:37;;;;;;;;;;;;;;21953:11;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;22024:37:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22024:37:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;22024:37:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;22024:37:21;;-1:-1:-1;;;;;;;22083:32:21;;-1:-1:-1;;;;;22083:32:21;22079:90;;;22146:4;22139:11;;;;;;22079:90;21824:359;;;-1:-1:-1;22204:5:21;22197:12;;21451:1157;22318:9;22329;22340:7;22351:35;22376:9;22351:24;:35::i;:::-;22317:69;;;;;;22400:14;22417:24;22427:4;22433:1;22436;22439;22417:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;22417:24:21;;-1:-1:-1;;22417:24:21;;-1:-1:-1;;;;;22572:24:21;;;;;;;-1:-1:-1;;;;;;21139:1475:21;;;;;:::o;10738:762:23:-;-1:-1:-1;;;;;10857:19:23;;10849:64;;;;;-1:-1:-1;;;;;10849:64:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10932:17;10940:8;10932:7;:17::i;:::-;10931:18;10923:59;;;;;-1:-1:-1;;;;;10923:59:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;11011:1;11000:8;:12;10992:43;;;;;-1:-1:-1;;;;;10992:43:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;11067:1;11053:11;-1:-1:-1;;;;;11053:15:23;;11045:57;;;;;-1:-1:-1;;;;;11045:57:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;11167:147;;;;;;;;;;;;;;-1:-1:-1;;;;;11167:147:23;;;;;;;;;;-1:-1:-1;;;;;11167:147:23;;;;;;;;;-1:-1:-1;11167:147:23;;;;;;;11143:21;;;:11;:21;;;;;:171;;;;;;;;;;;-1:-1:-1;;;11143:171:23;;;;;;;;-1:-1:-1;;11143:171:23;;;;-1:-1:-1;;11143:171:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11325:24;;;:17;:24;;;;;:26;;;;;;;;11394:37;;;;;;;;;;;;;;;;;;;;;;;;;;;11446:47;;;;;;;;;;;;;-1:-1:-1;;;;;11446:47:23;;;;;;;;;;;;;;;;;10738:762;;;;:::o;3140:126:0:-;3211:10;;3196:34;;;-1:-1:-1;;;;;3211:10:0;;;3196:34;;;;;;;;;;;;;;;;;;;;;3240:10;:19;;-1:-1:-1;;;;;;3240:19:0;-1:-1:-1;;;;;3240:19:0;;;;;;;;;;3140:126::o;13757:348:23:-;13879:4;13904:14;13915:2;13904:10;:14::i;:::-;13899:57;;-1:-1:-1;13941:4:23;13934:11;;13899:57;13982:71;;-1:-1:-1;;;;;13982:71:23;;14019:10;13982:71;;;;;;-1:-1:-1;;;;;13982:71:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;13966:13;;13982:36;;;;;;14019:10;;14031:4;;14037:8;;14047:5;;13982:71;;;;;;;;;;;13966:13;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;13982:71:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13982:71:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13982:71:23;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13982:71:23;-1:-1:-1;;;;;;14071:26:23;-1:-1:-1;;;;;14071:26:23;;-1:-1:-1;;13757:348:23;;;;;;:::o;1002:1078:7:-;1242:58;;;-1:-1:-1;;;;;;1242:58:7;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1242:58:7;;;;;;;25:18:-1;;;61:17;;-1:-1;;;;;182:15;-1:-1;;;;;179:29;160:49;;1530:20:7;;1578:11;;1145:15;1664:19;;;1145:15;;;1242:58;1530:20;;1578:11;;1530:20;25:18:-1;1788:9:7;1736:5;1708:295;2027:13;;1697:306;;2027:13;;-1:-1:-1;1376:698:7;-1:-1:-1;;;;;;1376:698:7:o;14248:174:23:-;14349:1;14312:25;;;:15;:25;;;;;;-1:-1:-1;;;;;14312:25:23;:39;14308:108;;14403:1;14367:25;;;:15;:25;;;;;:38;;-1:-1:-1;;;;;;14367:38:23;;;14248:174::o;515:667:1:-;1078:20;1167:8;;;515:667::o;330:880:11:-;402:9;413;424:7;485:9;:16;505:2;485:22;477:59;;;;;-1:-1:-1;;;;;477:59:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;759:2:11;744:18;;738:25;802:2;787:18;;781:25;849:2;834:18;;828:25;855:3;824:35;887:2;883:6;;879:139;;;910:2;905:7;879:139;330:880;;;;;:::o;311:22306:21:-;;;;;;;;;-1:-1:-1;311:22306:21;;;;;;;;;;;;;;;;;;;;;;;:::o","source":"pragma solidity >=0.5.6 <0.6.0;\n\nimport \"./WizardNFT.sol\";\nimport \"./WizardGuildInterface.sol\";\nimport \"./AccessControl.sol\";\nimport \"./ERC165/ERC165Query.sol\";\nimport \"./SigTools.sol\";\nimport \"./ERC1654/ERC1654.sol\";\n\n\n/// @title The master organization behind all Cheeze Wizardry. The source of all them Wiz.\ncontract WizardGuild is AccessControl, WizardNFT, WizardGuildInterface, ERC165Query {\n\n    /// @notice Emitted when a new Series is opened or closed.\n    event SeriesOpen(uint64 seriesIndex, uint256 reservedIds);\n    event SeriesClose(uint64 seriesIndex);\n\n    /// @notice Emitted when metadata is associated with a Wizard\n    event MetadataSet(uint256 indexed wizardId, bytes32 metadata);\n\n    /// @notice The index of the current Series (zero-based). When no Series is open, this value\n    ///         indicates the index of the _upcoming_ Series. (i.e. it is incremented when the\n    ///         Series is closed. This makes it easier to bootstrap the first Series.)\n    uint64 internal seriesIndex;\n\n    /// @notice The address which is allowed to mint new Wizards in the current Series. When this\n    ///         is set to address(0), there is no open Series.\n    address internal seriesMinter;\n\n    /// @notice The index number of the next Wizard to be created (Neutral or Elemental).\n    ///         NOTE: There is a subtle distinction between a Wizard \"ID\" and a Wizard \"index\".\n    ///               We use the term \"ID\" to refer to a value that includes the Series number in the\n    ///               top 64 bits, while the term \"index\" refers to the Wizard number _within_ its\n    ///               Series. This is especially confusing when talking about Wizards in the first\n    ///               Series (Series 0), because the two values are identical in that case!\n    ///\n    ///               |---------------|--------------------------|\n    ///               |           Wizard ID (256 bits)           |\n    ///               |---------------|--------------------------|\n    ///               |  Series Index |      Wizard Index        |\n    ///               |   (64 bits)   |       (192 bits)         |\n    ///               |---------------|--------------------------|\n    uint256 internal nextWizardIndex;\n\n    // NOTE: uint256(-1) maps to a value with all bits set, both the << and >> operators will fill\n    // in with zeros when acting on an unsigned value. So, \"uint256(-1) << 192\" resovles to \"a bunch\n    /// of ones, followed by 192 zeros\"\n    uint256 internal constant seriesOffset = 192;\n    uint256 internal constant seriesMask = uint256(-1) << seriesOffset;\n    uint256 internal constant indexMask = uint256(-1) >> 64;\n\n    // The ERC1654 function selector value\n    bytes4 internal constant ERC1654_VALIDSIGNATURE = 0x1626ba7e;\n\n    /// @notice The Guild constructor.\n    /// @param _cooAddress The COO has the ability to create new Series and to update\n    ///         the metadata on the currently open Series (if any). It has no other special\n    ///         abilities, and (in particular), ALL Wizards in a closed series can never be\n    ///         modified or deleted. If the CEO and COO values are ever set to invalid addresses\n    ///        (such as address(1)), then no new Series can ever be created, either.\n    constructor(address _cooAddress) public AccessControl(_cooAddress, address(0)) {\n    }\n\n    /// @notice Require that a Tournament Series is currently open. For example closing\n    ///         a Series does not make sense if none is open.\n    /// @dev While in other contracts we use separate checking functions to avoid having the same\n    ///      string inlined in multiple places, given this modifier is scarcely used it doesn't seem\n    ///      worth the per-call gas cost here.\n    modifier duringSeries() {\n        require(seriesMinter != address(0), \"No series is currently open\");\n        _;\n    }\n\n    /// @notice Require that the caller is the minter of the current series. This implicitely\n    ///         requires that a Series is open, or the minter address would be invalid (can never\n    ///         be matched).\n    /// @dev While in other contracts we use separate checking functions to avoid having the same\n    ///      string inlined in multiple places, given this modifier is scarcely used it doesn't seem\n    ///      worth the per-call gas cost here.\n    modifier onlyMinter() {\n        require(msg.sender == seriesMinter, \"Only callable by minter\");\n        _;\n    }\n\n    /// @notice Open a new Series of Cheeze Wizards! Can only be called by the COO when no Series is open.\n    /// @param minter The address which is allowed to mint Wizards in this series. This contract does not\n    ///         assume that the minter is a smart contract, but it will presumably be in the vast majority\n    ///         of the cases. A minter has absolute control over the creation of new Wizards in an open\n    ///         Series, but CAN NOT manipulate a Series after it has been close, and CAN NOT mainpulate\n    ///         any Wizards that don't belong to its own Series. (Even if the same minting address is used\n    ///         for multiple Series, the Minter only has power over the currently open Series.)\n    /// @param reservedIds The number of IDs (from 1 to reservedIds, inclusive) that are reserved for minting\n    ///         reserved Wizards. (We use the term \"reserved\" here, instead of Exclusive, because there\n    ///         are times -- such as during the importation of the PreSale -- when we need to reserve a\n    ///         block of IDs for Wizards that aren't what a user would think of as \"exclusive\". In Series\n    ///         0, the reserved IDs will include all Exclusive Wizards and Presale Wizards. In other Series\n    ///         it might also be the case that the set of \"reserved IDs\" doesn't exactly match the set of\n    ///         \"exclusive\" IDs.)\n    function openSeries(address minter, uint256 reservedIds) external onlyCOO returns (uint64 seriesId) {\n        require(seriesMinter == address(0), \"A series is already open\");\n        require(minter != address(0), \"Minter address cannot be 0\");\n\n        // NOTE: The seriesIndex is updated when the Series is _closed_, not when it's opened.\n        //  (The first Series is Series #0.) So in this function, we just leave the seriesIndex alone.\n\n        seriesMinter = minter;\n        nextWizardIndex = reservedIds + 1;\n\n        emit SeriesOpen(seriesIndex, reservedIds);\n\n        return seriesIndex;\n    }\n\n    /// @notice Closes the current Wizard Series. Once a Series has been closed, it is forever sealed and\n    ///         no more Wizards in that Series can ever be minted! Can only be called by the COO when a Series\n    ///         is open.\n    ///\n    ///    NOTE: A series can be closed by the COO or the Minter. (It's assumed that some minters will\n    ///          know when they are done, and others will need to be shut off manually by the COO.)\n    function closeSeries() external duringSeries {\n        require(\n            msg.sender == seriesMinter || msg.sender == cooAddress,\n            \"Only Minter or COO can close a Series\");\n\n        seriesMinter = address(0);\n        emit SeriesClose(seriesIndex);\n\n        // Set up the next series.\n        seriesIndex += 1;\n        nextWizardIndex = 0;\n    }\n\n    /// @notice ERC-165 Query Function.\n    function supportsInterface(bytes4 interfaceId) public view returns (bool) {\n        return interfaceId == _INTERFACE_ID_WIZARDGUILD || super.supportsInterface(interfaceId);\n    }\n\n    /// @notice Returns the information associated with the given Wizard\n    ///         owner - The address that owns this Wizard\n    ///         innatePower - The innate power level of this Wizard, set when minted and entirely\n    ///               immutable\n    ///         affinity - The Elemental Affinity of this Wizard. For most Wizards, this is set\n    ///               when they are minted, but some exclusive Wizards are minted with an affinity\n    ///               of 0 (ELEMENT_NOTSET). A Wizard with an NOTSET affinity should NOT be able\n    ///               to participate in Tournaments. Once the affinity of a Wizard is set to a non-zero\n    ///               value, it can never be changed again.\n    ///         metadata - A 256-bit hash of the Wizard's metadata, which is stored off chain. This\n    ///               contract doesn't specify format of this hash, nor the off-chain storage mechanism\n    ///               but, let's be honest, it's probably an IPFS SHA-256 hash.\n    ///\n    ///         NOTE: Series zero Wizards have one of four Affinities:  Neutral (1), Fire (2), Water (3)\n    ///               or Air (4, sometimes called \"Wind\" in the code). Future Wizard Series may have\n    ///               additional Affinities, and clients of this API should be prepared for that\n    ///               eventuality.\n    function getWizard(uint256 id) public view returns (address owner, uint88 innatePower, uint8 affinity, bytes32 metadata) {\n        Wizard memory wizard = wizardsById[id];\n        require(wizard.owner != address(0), \"Wizard does not exist\");\n        (owner, innatePower, affinity, metadata) = (wizard.owner, wizard.innatePower, wizard.affinity, wizard.metadata);\n    }\n\n    /// @notice A function to be called that conjures a whole bunch of Wizards at once! You know how\n    ///         there's \"a pride of lions\", \"a murder of crows\", and \"a parliament of owls\"? Well, with this\n    ///         here function you can conjure yourself \"a stench of Cheeze Wizards\"!\n    ///\n    ///         Unsurprisingly, this method can only be called by the registered minter for a Series.\n    /// @dev This function DOES NOT CALL onERC721Received() as required by the ERC-721 standard. It is\n    ///         REQUIRED that the Minter calls onERC721Received() after calling this function. The following\n    ///         code snippet should suffice:\n    ///                 // Ensure the Wizard is being assigned to an ERC-721 aware address (either an external address,\n    ///                 // or a smart contract that implements onERC721Received()). We must call onERC721Recieved for\n    ///                 // each token created because it's allowed for an ERC-721 receiving contract to reject the\n    ///                 // transfer based on the properties of the token.\n    ///                 if (isContract(owner)) {\n    ///                     for (uint256 i = 0; i < wizardIds.length; i++) {\n    ///                         bytes4 retval = IERC721Receiver(owner).onERC721Received(owner, address(0), wizardIds[i], \"\");\n    ///                         require(retval == _ERC721_RECEIVED, \"Contract owner didn't accept ERC721 transfer\");\n    ///                     }\n    ///                 }\n    ///        Although it would be convenient for mintWizards to call onERC721Recieved, it opens us up to potential\n    ///        reentrancy attacks if the Minter needs to do more state updates after mintWizards() returns.\n    /// @param powers the power level of each wizard\n    /// @param affinities the Elements of the wizards to create\n    /// @param owner the address that will own the newly created Wizards\n    function mintWizards(\n        uint88[] calldata powers,\n        uint8[] calldata affinities,\n        address owner\n    ) external onlyMinter returns (uint256[] memory wizardIds)\n    {\n        require(affinities.length == powers.length, \"Inconsistent parameter lengths\");\n\n        // allocate result array\n        wizardIds = new uint256[](affinities.length);\n\n        // We take this storage variables, and turn it into a local variable for the course\n        // of this loop to save about 5k gas per wizard.\n        uint256 tempWizardId = (uint256(seriesIndex) << seriesOffset) + nextWizardIndex;\n\n        for (uint256 i = 0; i < affinities.length; i++) {\n            wizardIds[i] = tempWizardId;\n            tempWizardId++;\n\n            _createWizard(wizardIds[i], owner, powers[i], affinities[i]);\n        }\n\n        nextWizardIndex = tempWizardId & indexMask;\n    }\n\n    /// @notice A function to be called that mints a Series of Wizards in the reserved ID range, can only\n    ///         be called by the Minter for this Series.\n    /// @dev This function DOES NOT CALL onERC721Received() as required by the ERC-721 standard. It is\n    ///         REQUIRED that the Minter calls onERC721Received() after calling this function. See the note\n    ///         above on mintWizards() for more info.\n    /// @param wizardIds the ID values to use for each Wizard, must be in the reserved range of the current Series.\n    /// @param powers the power level of each Wizard.\n    /// @param affinities the Elements of the Wizards to create.\n    /// @param owner the address that will own the newly created Wizards.\n    function mintReservedWizards(\n        uint256[] calldata wizardIds,\n        uint88[] calldata powers,\n        uint8[] calldata affinities,\n        address owner\n    )\n    external onlyMinter\n    {\n        require(\n            wizardIds.length == affinities.length &&\n            wizardIds.length == powers.length, \"Inconsistent parameter lengths\");\n\n        for (uint256 i = 0; i < wizardIds.length; i++) {\n            uint256 currentId = wizardIds[i];\n\n            require((currentId & seriesMask) == (uint256(seriesIndex) << seriesOffset), \"Wizards not in current series\");\n\n            // Ideally, we would compare the requested Wizard index against the reserved range directly. However,\n            // it's a bit wasteful to spend storage on a reserved range variable when we can combine some known\n            // true facts instead:\n            //         - nextWizardIndex is initialized to reservedRange + 1 when the Series was opend\n            //         - nextWizardIndex is only incremented when a new Wizard is created\n            //         - therefore, the only empty Wizard IDs less than nextWizardIndex are in the reserved range.\n            //         - _conjureWizard() will abort if we try to reuse an ID.\n            // Combining all of the above, we know that, if the requested index is less than the next index, it\n            // either points to a reserved slot or an occupied slot. Trying to reuse an occupied slot will fail,\n            // so just checking against nextWizardIndex is sufficient to ensure we're pointing at a reserved slot.\n            require((currentId & indexMask) < nextWizardIndex, \"Wizards not in reserved range\");\n\n            _createWizard(currentId, owner, powers[i], affinities[i]);\n        }\n    }\n\n    /// @notice Sets the metadata values for a list of Wizards. The metadata for a Wizard can only be set once,\n    ///         can only be set by the COO or Minter, and can only be set while the Series is still open. Once\n    ///         a Series is closed, the metadata is locked forever!\n    /// @param wizardIds the ID values of the Wizards to apply metadata changes to.\n    /// @param metadata the raw metadata values for each Wizard. This contract does not define how metadata\n    ///         should be interpreted, but it is likely to be a 256-bit hash of a complete metadata package\n    ///         accessible via IPFS or similar.\n    function setMetadata(uint256[] calldata wizardIds, bytes32[] calldata metadata) external duringSeries {\n        require(msg.sender == seriesMinter || msg.sender == cooAddress, \"Only Minter or COO can set metadata\");\n        require(wizardIds.length == metadata.length, \"Inconsistent parameter lengths\");\n\n        for (uint256 i = 0; i < wizardIds.length; i++) {\n            uint256 currentId = wizardIds[i];\n            bytes32 currentMetadata = metadata[i];\n\n            require((currentId & seriesMask) == (uint256(seriesIndex) << seriesOffset), \"Wizards not in current series\");\n\n            require(wizardsById[currentId].metadata == bytes32(0), \"Metadata already set\");\n\n            require(currentMetadata != bytes32(0), \"Invalid metadata\");\n\n            wizardsById[currentId].metadata = currentMetadata;\n\n            emit MetadataSet(currentId, currentMetadata);\n        }\n    }\n\n    /// @notice Sets the affinity for a Wizard that doesn't already have its elemental affinity chosen.\n    ///         Only usable for Exclusive Wizards (all non-Exclusives must have their affinity chosen when\n    ///         conjured.) Even Exclusives can't change their affinity once it's been chosen.\n    ///\n    ///         NOTE: This function can only be called by the Series minter, and (therefore) only while the\n    ///         Series is open. A Wizard that has no affinity when a Series is closed will NEVER have an Affinity.\n    /// @param wizardId The ID of the Wizard to update affinity of.\n    /// @param newAffinity The new affinity of the Wizard.\n    function setAffinity(uint256 wizardId, uint8 newAffinity) external onlyMinter {\n        require((wizardId & seriesMask) == (uint256(seriesIndex) << seriesOffset), \"Wizard not in current series\");\n\n        Wizard storage wizard = wizardsById[wizardId];\n\n        require(wizard.affinity == ELEMENT_NOTSET, \"Affinity can only be chosen once\");\n\n        // set the affinity\n        wizard.affinity = newAffinity;\n\n        // Tell the world this wizards now has an affinity!\n        emit WizardAffinityAssigned(wizardId, newAffinity);\n    }\n\n    /// @notice Returns true if the given \"spender\" address is allowed to manipulate the given token\n    ///         (either because it is the owner of that token, has been given approval to manage that token)\n    function isApprovedOrOwner(address spender, uint256 tokenId) public view returns (bool) {\n        return _isApprovedOrOwner(spender, tokenId);\n    }\n\n    /// @notice Verifies that a given signature represents authority to control the given Wizard ID,\n    ///         reverting otherwise. It handles three cases:\n    ///             - The simplest case: The signature was signed with the private key associated with\n    ///               an external address that is the owner of this Wizard.\n    ///             - The signature was generated with the private key associated with an external address\n    ///               that is \"approved\" for working with this Wizard ID. (See the Wizard Guild and/or\n    ///               the ERC-721 spec for more information on \"approval\".)\n    ///             - The owner or approval address (as in cases one or two) is a smart contract\n    ///               that conforms to ERC-1654, and accepts the given signature as being valid\n    ///               using its own internal logic.\n    ///\n    ///        NOTE: This function DOES NOT accept a signature created by an address that was given \"operator\n    ///               status\" (as granted by ERC-721's setApprovalForAll() functionality). Doing so is\n    ///               considered an extreme edge case that can be worked around where necessary.\n    /// @param wizardId The Wizard ID whose control is in question\n    /// @param hash The message hash we are authenticating against\n    /// @param sig the signature data; can be longer than 65 bytes for ERC-1654\n    function verifySignature(uint256 wizardId, bytes32 hash, bytes memory sig) public view {\n        // First see if the signature belongs to the owner (the most common case)\n        address owner = ownerOf(wizardId);\n\n        if (_validSignatureForAddress(owner, hash, sig)) {\n            return;\n        }\n\n        // Next check if the signature belongs to the approved address\n        address approved = getApproved(wizardId);\n\n        if (_validSignatureForAddress(approved, hash, sig)) {\n            return;\n        }\n\n        revert(\"Invalid signature\");\n    }\n\n    /// @notice Convienence function that verifies signatures for two wizards using equivalent logic to\n    ///         verifySignature(). Included to save on cross-contract calls in the common case where we\n    ///         are verifying the signatures of two Wizards who wish to enter into a Duel.\n    /// @param wizardId1 The first Wizard ID whose control is in question\n    /// @param wizardId2 The second Wizard ID whose control is in question\n    /// @param hash1 The message hash we are authenticating against for the first Wizard\n    /// @param hash2 The message hash we are authenticating against for the first Wizard\n    /// @param sig1 the signature data corresponding to the first Wizard; can be longer than 65 bytes for ERC-1654\n    /// @param sig2 the signature data corresponding to the second Wizard; can be longer than 65 bytes for ERC-1654\n    function verifySignatures(\n        uint256 wizardId1,\n        uint256 wizardId2,\n        bytes32 hash1,\n        bytes32 hash2,\n        bytes calldata sig1,\n        bytes calldata sig2) external view\n    {\n        verifySignature(wizardId1, hash1, sig1);\n        verifySignature(wizardId2, hash2, sig2);\n    }\n\n    /// @notice An internal function that checks if a given signature is a valid signature for a\n    ///         specific address on a particular hash value. Checks for ERC-1654 compatibilty\n    ///         first (where the possibleSigner is a smart contract that implements its own\n    ///         signature validation), and falls back to ecrecover() otherwise.\n    function _validSignatureForAddress(address possibleSigner, bytes32 hash, bytes memory signature)\n        internal view returns(bool)\n    {\n        if (possibleSigner == address(0)) {\n            // The most basic Bozo check: The zero address can never be a valid signer!\n            return false;\n        } else if (Address.isContract(possibleSigner)) {\n            // If the address is a contract, it either implements ERC-1654 (and will validate the signature\n            // itself), or we have no way of confirming that this signature matches this address. In other words,\n            // if this address is a contract, there's no point in \"falling back\" to ecrecover().\n            if (doesContractImplementInterface(possibleSigner, ERC1654_VALIDSIGNATURE)) {\n                // cast to ERC1654\n                ERC1654 tso = ERC1654(possibleSigner);\n                bytes4 result = tso.isValidSignature(hash, signature);\n                if (result == ERC1654_VALIDSIGNATURE) {\n                    return true;\n                }\n            }\n\n            return false;\n        } else {\n            // Not a contract, check for a match against an external address\n            (bytes32 r, bytes32 s, uint8 v) = SigTools._splitSignature(signature);\n            address signer = ecrecover(hash, v, r, s);\n\n            // Note: Signer could be address(0) here, but we already checked that possibleSigner isn't zero\n            return (signer == possibleSigner);\n        }\n    }\n\n}\n","sourcePath":"/data/contracts/WizardGuild.sol","ast":{"absolutePath":"/data/contracts/WizardGuild.sol","exportedSymbols":{"WizardGuild":[10607]},"id":10608,"nodeType":"SourceUnit","nodes":[{"id":9866,"literals":["solidity",">=","0.5",".6","<","0.6",".0"],"nodeType":"PragmaDirective","src":"0:31:21"},{"absolutePath":"/data/contracts/WizardNFT.sol","file":"./WizardNFT.sol","id":9867,"nodeType":"ImportDirective","scope":10608,"sourceUnit":11351,"src":"33:25:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"/data/contracts/WizardGuildInterface.sol","file":"./WizardGuildInterface.sol","id":9868,"nodeType":"ImportDirective","scope":10608,"sourceUnit":10710,"src":"59:36:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"/data/contracts/AccessControl.sol","file":"./AccessControl.sol","id":9869,"nodeType":"ImportDirective","scope":10608,"sourceUnit":186,"src":"96:29:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"/data/contracts/ERC165/ERC165Query.sol","file":"./ERC165/ERC165Query.sol","id":9870,"nodeType":"ImportDirective","scope":10608,"sourceUnit":3434,"src":"126:34:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"/data/contracts/SigTools.sol","file":"./SigTools.sol","id":9871,"nodeType":"ImportDirective","scope":10608,"sourceUnit":4458,"src":"161:24:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"/data/contracts/ERC1654/ERC1654.sol","file":"./ERC1654/ERC1654.sol","id":9872,"nodeType":"ImportDirective","scope":10608,"sourceUnit":3449,"src":"186:31:21","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":9873,"name":"AccessControl","nodeType":"UserDefinedTypeName","referencedDeclaration":185,"src":"335:13:21","typeDescriptions":{"typeIdentifier":"t_contract$_AccessControl_$185","typeString":"contract AccessControl"}},"id":9874,"nodeType":"InheritanceSpecifier","src":"335:13:21"},{"arguments":null,"baseName":{"contractScope":null,"id":9875,"name":"WizardNFT","nodeType":"UserDefinedTypeName","referencedDeclaration":11350,"src":"350:9:21","typeDescriptions":{"typeIdentifier":"t_contract$_WizardNFT_$11350","typeString":"contract WizardNFT"}},"id":9876,"nodeType":"InheritanceSpecifier","src":"350:9:21"},{"arguments":null,"baseName":{"contractScope":null,"id":9877,"name":"WizardGuildInterface","nodeType":"UserDefinedTypeName","referencedDeclaration":10709,"src":"361:20:21","typeDescriptions":{"typeIdentifier":"t_contract$_WizardGuildInterface_$10709","typeString":"contract WizardGuildInterface"}},"id":9878,"nodeType":"InheritanceSpecifier","src":"361:20:21"},{"arguments":null,"baseName":{"contractScope":null,"id":9879,"name":"ERC165Query","nodeType":"UserDefinedTypeName","referencedDeclaration":3433,"src":"383:11:21","typeDescriptions":{"typeIdentifier":"t_contract$_ERC165Query_$3433","typeString":"contract ERC165Query"}},"id":9880,"nodeType":"InheritanceSpecifier","src":"383:11:21"}],"contractDependencies":[185,204,3319,3433,9864,10614,10709,11350,14417,14588],"contractKind":"contract","documentation":"@title The master organization behind all Cheeze Wizardry. The source of all them Wiz.","fullyImplemented":true,"id":10607,"linearizedBaseContracts":[10607,3433,10709,10614,11350,204,9864,14588,14417,3319,185],"name":"WizardGuild","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":"@notice Emitted when a new Series is opened or closed.","id":9886,"name":"SeriesOpen","nodeType":"EventDefinition","parameters":{"id":9885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9882,"indexed":false,"name":"seriesIndex","nodeType":"VariableDeclaration","scope":9886,"src":"482:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":9881,"name":"uint64","nodeType":"ElementaryTypeName","src":"482:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":9884,"indexed":false,"name":"reservedIds","nodeType":"VariableDeclaration","scope":9886,"src":"502:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9883,"name":"uint256","nodeType":"ElementaryTypeName","src":"502:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"481:41:21"},"src":"465:58:21"},{"anonymous":false,"documentation":null,"id":9890,"name":"SeriesClose","nodeType":"EventDefinition","parameters":{"id":9889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9888,"indexed":false,"name":"seriesIndex","nodeType":"VariableDeclaration","scope":9890,"src":"546:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":9887,"name":"uint64","nodeType":"ElementaryTypeName","src":"546:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"}],"src":"545:20:21"},"src":"528:38:21"},{"anonymous":false,"documentation":"@notice Emitted when metadata is associated with a Wizard","id":9896,"name":"MetadataSet","nodeType":"EventDefinition","parameters":{"id":9895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9892,"indexed":true,"name":"wizardId","nodeType":"VariableDeclaration","scope":9896,"src":"656:24:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9891,"name":"uint256","nodeType":"ElementaryTypeName","src":"656:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":9894,"indexed":false,"name":"metadata","nodeType":"VariableDeclaration","scope":9896,"src":"682:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9893,"name":"bytes32","nodeType":"ElementaryTypeName","src":"682:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"655:44:21"},"src":"638:62:21"},{"constant":false,"id":9898,"name":"seriesIndex","nodeType":"VariableDeclaration","scope":10607,"src":"985:27:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":9897,"name":"uint64","nodeType":"ElementaryTypeName","src":"985:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":9900,"name":"seriesMinter","nodeType":"VariableDeclaration","scope":10607,"src":"1180:29:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9899,"name":"address","nodeType":"ElementaryTypeName","src":"1180:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":9902,"name":"nextWizardIndex","nodeType":"VariableDeclaration","scope":10607,"src":"2204:32:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9901,"name":"uint256","nodeType":"ElementaryTypeName","src":"2204:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":true,"id":9905,"name":"seriesOffset","nodeType":"VariableDeclaration","scope":10607,"src":"2483:44:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9903,"name":"uint256","nodeType":"ElementaryTypeName","src":"2483:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"hexValue":"313932","id":9904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2524:3:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},"visibility":"internal"},{"constant":true,"id":9913,"name":"seriesMask","nodeType":"VariableDeclaration","scope":10607,"src":"2533:66:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9906,"name":"uint256","nodeType":"ElementaryTypeName","src":"2533:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":9909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"2580:2:21","subExpression":{"argumentTypes":null,"hexValue":"31","id":9908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2581:1:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}],"id":9907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2572:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":"uint256"},"id":9910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2572:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"argumentTypes":null,"id":9911,"name":"seriesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9905,"src":"2587:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2572:27:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":true,"id":9921,"name":"indexMask","nodeType":"VariableDeclaration","scope":10607,"src":"2605:55:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9914,"name":"uint256","nodeType":"ElementaryTypeName","src":"2605:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":9917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"2651:2:21","subExpression":{"argumentTypes":null,"hexValue":"31","id":9916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2652:1:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}],"id":9915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2643:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":"uint256"},"id":9918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2643:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"argumentTypes":null,"hexValue":"3634","id":9919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2658:2:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"2643:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":true,"id":9924,"name":"ERC1654_VALIDSIGNATURE","nodeType":"VariableDeclaration","scope":10607,"src":"2710:60:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":9922,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2710:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"argumentTypes":null,"hexValue":"30783136323662613765","id":9923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2760:10:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_371636862_by_1","typeString":"int_const 371636862"},"value":"0x1626ba7e"},"visibility":"internal"},{"body":{"id":9935,"nodeType":"Block","src":"3347:7:21","statements":[]},"documentation":"@notice The Guild constructor.\n @param _cooAddress The COO has the ability to create new Series and to update\n         the metadata on the currently open Series (if any). It has no other special\n         abilities, and (in particular), ALL Wizards in a closed series can never be\n         modified or deleted. If the CEO and COO values are ever set to invalid addresses\n        (such as address(1)), then no new Series can ever be created, either.","id":9936,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"argumentTypes":null,"id":9929,"name":"_cooAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9926,"src":"3322:11:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":9931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3343:1:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3335:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":9932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3335:10:21","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":9933,"modifierName":{"argumentTypes":null,"id":9928,"name":"AccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"3308:13:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AccessControl_$185_$","typeString":"type(contract AccessControl)"}},"nodeType":"ModifierInvocation","src":"3308:38:21"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":9927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9926,"name":"_cooAddress","nodeType":"VariableDeclaration","scope":9936,"src":"3280:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9925,"name":"address","nodeType":"ElementaryTypeName","src":"3280:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3279:21:21"},"returnParameters":{"id":9934,"nodeType":"ParameterList","parameters":[],"src":"3347:0:21"},"scope":10607,"src":"3268:86:21","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":9948,"nodeType":"Block","src":"3780:94:21","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":9939,"name":"seriesMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9900,"src":"3798:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":9941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3822:1:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3814:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":9942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3814:10:21","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"3798:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f207365726965732069732063757272656e746c79206f70656e","id":9944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3826:29:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_1e6a9f5c81141728623a142d87a81c7da1f3565a738533604517f2797921b53c","typeString":"literal_string \"No series is currently open\""},"value":"No series is currently open"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e6a9f5c81141728623a142d87a81c7da1f3565a738533604517f2797921b53c","typeString":"literal_string \"No series is currently open\""}],"id":9938,"name":"require","nodeType":"Identifier","overloadedDeclarations":[14622,14623],"referencedDeclaration":14623,"src":"3790:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3790:66:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9946,"nodeType":"ExpressionStatement","src":"3790:66:21"},{"id":9947,"nodeType":"PlaceholderStatement","src":"3866:1:21"}]},"documentation":"@notice Require that a Tournament Series is currently open. For example closing\n         a Series does not make sense if none is open.\n @dev While in other contracts we use separate checking functions to avoid having the same\n      string inlined in multiple places, given this modifier is scarcely used it doesn't seem\n      worth the per-call gas cost here.","id":9949,"name":"duringSeries","nodeType":"ModifierDefinition","parameters":{"id":9937,"nodeType":"ParameterList","parameters":[],"src":"3777:2:21"},"src":"3756:118:21","visibility":"internal"},{"body":{"id":9960,"nodeType":"Block","src":"4369:90:21","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":9952,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14619,"src":"4387:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4387:10:21","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":9954,"name":"seriesMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9900,"src":"4401:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4387:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4f6e6c792063616c6c61626c65206279206d696e746572","id":9956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4415:25:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_3a0f8c3e93de22f1dd5c4284a5811a3adb4e45b89f75d63d6f6e433826d0f10b","typeString":"literal_string \"Only callable by minter\""},"value":"Only callable by minter"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3a0f8c3e93de22f1dd5c4284a5811a3adb4e45b89f75d63d6f6e433826d0f10b","typeString":"literal_string \"Only callable by minter\""}],"id":9951,"name":"require","nodeType":"Identifier","overloadedDeclarations":[14622,14623],"referencedDeclaration":14623,"src":"4379:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4379:62:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9958,"nodeType":"ExpressionStatement","src":"4379:62:21"},{"id":9959,"nodeType":"PlaceholderStatement","src":"4451:1:21"}]},"documentation":"@notice Require that the caller is the minter of the current series. This implicitely\n         requires that a Series is open, or the minter address would be invalid (can never\n         be matched).\n @dev While in other contracts we use separate checking functions to avoid having the same\n      string inlined in multiple places, given this modifier is scarcely used it doesn't seem\n      worth the per-call gas cost here.","id":9961,"name":"onlyMinter","nodeType":"ModifierDefinition","parameters":{"id":9950,"nodeType":"ParameterList","parameters":[],"src":"4366:2:21"},"src":"4347:112:21","visibility":"internal"},{"body":{"id":10007,"nodeType":"Block","src":"5968:504:21","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":9973,"name":"seriesMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9900,"src":"5986:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":9975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6010:1:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6002:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":9976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6002:10:21","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"5986:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"412073657269657320697320616c7265616479206f70656e","id":9978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6014:26:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_26bee89b0c4b7b48f26c650c71e83c95fb2c63de5147be7559c763a8abc092db","typeString":"literal_string \"A series is already open\""},"value":"A series is already open"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_26bee89b0c4b7b48f26c650c71e83c95fb2c63de5147be7559c763a8abc092db","typeString":"literal_string \"A series is already open\""}],"id":9972,"name":"require","nodeType":"Identifier","overloadedDeclarations":[14622,14623],"referencedDeclaration":14623,"src":"5978:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5978:63:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9980,"nodeType":"ExpressionStatement","src":"5978:63:21"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":9982,"name":"minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9963,"src":"6059:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":9984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6077:1:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6069:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":9985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6069:10:21","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"6059:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4d696e74657220616464726573732063616e6e6f742062652030","id":9987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6081:28:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_804d8f53f1425ff314b40fd9767b02b1179c16c973994c37e035d28659b4e685","typeString":"literal_string \"Minter address cannot be 0\""},"value":"Minter address cannot be 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_804d8f53f1425ff314b40fd9767b02b1179c16c973994c37e035d28659b4e685","typeString":"literal_string \"Minter address cannot be 0\""}],"id":9981,"name":"require","nodeType":"Identifier","overloadedDeclarations":[14622,14623],"referencedDeclaration":14623,"src":"6051:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6051:59:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9989,"nodeType":"ExpressionStatement","src":"6051:59:21"},{"expression":{"argumentTypes":null,"id":9992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":9990,"name":"seriesMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9900,"src":"6320:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":9991,"name":"minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9963,"src":"6335:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6320:21:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9993,"nodeType":"ExpressionStatement","src":"6320:21:21"},{"expression":{"argumentTypes":null,"id":9998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":9994,"name":"nextWizardIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9902,"src":"6351:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":9995,"name":"reservedIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9965,"src":"6369:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"hexValue":"31","id":9996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6383:1:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6369:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6351:33:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9999,"nodeType":"ExpressionStatement","src":"6351:33:21"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10001,"name":"seriesIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9898,"src":"6411:11:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":10002,"name":"reservedIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9965,"src":"6424:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10000,"name":"SeriesOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9886,"src":"6400:10:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_uint256_$returns$__$","typeString":"function (uint64,uint256)"}},"id":10003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6400:36:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10004,"nodeType":"EmitStatement","src":"6395:41:21"},{"expression":{"argumentTypes":null,"id":10005,"name":"seriesIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9898,"src":"6454:11:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":9971,"id":10006,"nodeType":"Return","src":"6447:18:21"}]},"documentation":"@notice Open a new Series of Cheeze Wizards! Can only be called by the COO when no Series is open.\n @param minter The address which is allowed to mint Wizards in this series. This contract does not\n         assume that the minter is a smart contract, but it will presumably be in the vast majority\n         of the cases. A minter has absolute control over the creation of new Wizards in an open\n         Series, but CAN NOT manipulate a Series after it has been close, and CAN NOT mainpulate\n         any Wizards that don't belong to its own Series. (Even if the same minting address is used\n         for multiple Series, the Minter only has power over the currently open Series.)\n @param reservedIds The number of IDs (from 1 to reservedIds, inclusive) that are reserved for minting\n         reserved Wizards. (We use the term \"reserved\" here, instead of Exclusive, because there\n         are times -- such as during the importation of the PreSale -- when we need to reserve a\n         block of IDs for Wizards that aren't what a user would think of as \"exclusive\". In Series\n         0, the reserved IDs will include all Exclusive Wizards and Presale Wizards. In other Series\n         it might also be the case that the set of \"reserved IDs\" doesn't exactly match the set of\n         \"exclusive\" IDs.)","id":10008,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":9968,"modifierName":{"argumentTypes":null,"id":9967,"name":"onlyCOO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"5934:7:21","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"5934:7:21"}],"name":"openSeries","nodeType":"FunctionDefinition","parameters":{"id":9966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9963,"name":"minter","nodeType":"VariableDeclaration","scope":10008,"src":"5888:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9962,"name":"address","nodeType":"ElementaryTypeName","src":"5888:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":9965,"name":"reservedIds","nodeType":"VariableDeclaration","scope":10008,"src":"5904:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9964,"name":"uint256","nodeType":"ElementaryTypeName","src":"5904:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"5887:37:21"},"returnParameters":{"id":9971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9970,"name":"seriesId","nodeType":"VariableDeclaration","scope":10008,"src":"5951:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":9969,"name":"uint64","nodeType":"ElementaryTypeName","src":"5951:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"}],"src":"5950:17:21"},"scope":10607,"src":"5868:604:21","stateMutability":"nonpayable","superFunction":null,"visibility":"external"},{"body":{"id":10044,"nodeType":"Block","src":"6976:312:21","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10014,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14619,"src":"7007:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7007:10:21","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":10016,"name":"seriesMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9900,"src":"7021:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7007:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10018,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14619,"src":"7037:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7037:10:21","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":10020,"name":"cooAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"7051:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7037:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7007:54:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4f6e6c79204d696e746572206f7220434f4f2063616e20636c6f7365206120536572696573","id":10023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7075:39:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_b107913f7afa2f3c0b4431bf383c558bd233134ffacddfccac0d78128b13317c","typeString":"literal_string \"Only Minter or COO can close a Series\""},"value":"Only Minter or COO can close a Series"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b107913f7afa2f3c0b4431bf383c558bd233134ffacddfccac0d78128b13317c","typeString":"literal_string \"Only Minter or COO can close a Series\""}],"id":10013,"name":"require","nodeType":"Identifier","overloadedDeclarations":[14622,14623],"referencedDeclaration":14623,"src":"6986:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6986:129:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10025,"nodeType":"ExpressionStatement","src":"6986:129:21"},{"expression":{"argumentTypes":null,"id":10030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":10026,"name":"seriesMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9900,"src":"7126:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":10028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7149:1:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7141:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":10029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7141:10:21","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"7126:25:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10031,"nodeType":"ExpressionStatement","src":"7126:25:21"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10033,"name":"seriesIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9898,"src":"7178:11:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":10032,"name":"SeriesClose","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9890,"src":"7166:11:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":10034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7166:24:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10035,"nodeType":"EmitStatement","src":"7161:29:21"},{"expression":{"argumentTypes":null,"id":10038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":10036,"name":"seriesIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9898,"src":"7236:11:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":10037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7236:16:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":10039,"nodeType":"ExpressionStatement","src":"7236:16:21"},{"expression":{"argumentTypes":null,"id":10042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":10040,"name":"nextWizardIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9902,"src":"7262:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"30","id":10041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7280:1:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7262:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10043,"nodeType":"ExpressionStatement","src":"7262:19:21"}]},"documentation":"@notice Closes the current Wizard Series. Once a Series has been closed, it is forever sealed and\n         no more Wizards in that Series can ever be minted! Can only be called by the COO when a Series\n         is open.\n\n    ///    NOTE: A series can be closed by the COO or the Minter. (It's assumed that some minters will\n          know when they are done, and others will need to be shut off manually by the COO.)","id":10045,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":10011,"modifierName":{"argumentTypes":null,"id":10010,"name":"duringSeries","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9949,"src":"6963:12:21","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"6963:12:21"}],"name":"closeSeries","nodeType":"FunctionDefinition","parameters":{"id":10009,"nodeType":"ParameterList","parameters":[],"src":"6951:2:21"},"returnParameters":{"id":10012,"nodeType":"ParameterList","parameters":[],"src":"6976:0:21"},"scope":10607,"src":"6931:357:21","stateMutability":"nonpayable","superFunction":null,"visibility":"external"},{"body":{"id":10061,"nodeType":"Block","src":"7408:104:21","statements":[{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":10054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":10052,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10047,"src":"7425:11:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":10053,"name":"_INTERFACE_ID_WIZARDGUILD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10613,"src":"7440:25:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"7425:40:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10057,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10047,"src":"7493:11:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"argumentTypes":null,"id":10055,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14700,"src":"7469:5:21","typeDescriptions":{"typeIdentifier":"t_super$_WizardGuild_$10607","typeString":"contract super WizardGuild"}},"id":10056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":10813,"src":"7469:23:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":10058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7469:36:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7425:80:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10051,"id":10060,"nodeType":"Return","src":"7418:87:21"}]},"documentation":"@notice ERC-165 Query Function.","id":10062,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nodeType":"FunctionDefinition","parameters":{"id":10048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10047,"name":"interfaceId","nodeType":"VariableDeclaration","scope":10062,"src":"7361:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":10046,"name":"bytes4","nodeType":"ElementaryTypeName","src":"7361:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":null,"visibility":"internal"}],"src":"7360:20:21"},"returnParameters":{"id":10051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10050,"name":"","nodeType":"VariableDeclaration","scope":10062,"src":"7402:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10049,"name":"bool","nodeType":"ElementaryTypeName","src":"7402:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"7401:6:21"},"scope":10607,"src":"7334:178:21","stateMutability":"view","superFunction":10813,"visibility":"public"},{"body":{"id":10107,"nodeType":"Block","src":"8986:246:21","statements":[{"assignments":[10076],"declarations":[{"constant":false,"id":10076,"name":"wizard","nodeType":"VariableDeclaration","scope":10107,"src":"8996:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wizard_$10774_memory_ptr","typeString":"struct WizardNFT.Wizard"},"typeName":{"contractScope":null,"id":10075,"name":"Wizard","nodeType":"UserDefinedTypeName","referencedDeclaration":10774,"src":"8996:6:21","typeDescriptions":{"typeIdentifier":"t_struct$_Wizard_$10774_storage_ptr","typeString":"struct WizardNFT.Wizard"}},"value":null,"visibility":"internal"}],"id":10080,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":10077,"name":"wizardsById","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10778,"src":"9019:11:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Wizard_$10774_storage_$","typeString":"mapping(uint256 => struct WizardNFT.Wizard storage ref)"}},"id":10079,"indexExpression":{"argumentTypes":null,"id":10078,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10064,"src":"9031:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9019:15:21","typeDescriptions":{"typeIdentifier":"t_struct$_Wizard_$10774_storage","typeString":"struct WizardNFT.Wizard storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8996:38:21"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10082,"name":"wizard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10076,"src":"9052:6:21","typeDescriptions":{"typeIdentifier":"t_struct$_Wizard_$10774_memory_ptr","typeString":"struct WizardNFT.Wizard memory"}},"id":10083,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":10771,"src":"9052:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":10085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9076:1:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9068:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":10086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9068:10:21","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"9052:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"57697a61726420646f6573206e6f74206578697374","id":10088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9080:23:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_a347450397f59f15f0b553a74dc226e713ebf05551e06aa3d2023e4dc8423c23","typeString":"literal_string \"Wizard does not exist\""},"value":"Wizard does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a347450397f59f15f0b553a74dc226e713ebf05551e06aa3d2023e4dc8423c23","typeString":"literal_string \"Wizard does not exist\""}],"id":10081,"name":"require","nodeType":"Identifier","overloadedDeclarations":[14622,14623],"referencedDeclaration":14623,"src":"9044:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9044:60:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10090,"nodeType":"ExpressionStatement","src":"9044:60:21"},{"expression":{"argumentTypes":null,"id":10105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"components":[{"argumentTypes":null,"id":10091,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10067,"src":"9115:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":10092,"name":"innatePower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10069,"src":"9122:11:21","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},{"argumentTypes":null,"id":10093,"name":"affinity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10071,"src":"9135:8:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"argumentTypes":null,"id":10094,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10073,"src":"9145:8:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":10095,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"9114:40:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint88_$_t_uint8_$_t_bytes32_$","typeString":"tuple(address,uint88,uint8,bytes32)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"components":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10096,"name":"wizard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10076,"src":"9158:6:21","typeDescriptions":{"typeIdentifier":"t_struct$_Wizard_$10774_memory_ptr","typeString":"struct WizardNFT.Wizard memory"}},"id":10097,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":10771,"src":"9158:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10098,"name":"wizard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10076,"src":"9172:6:21","typeDescriptions":{"typeIdentifier":"t_struct$_Wizard_$10774_memory_ptr","typeString":"struct WizardNFT.Wizard memory"}},"id":10099,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"innatePower","nodeType":"MemberAccess","referencedDeclaration":10769,"src":"9172:18:21","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10100,"name":"wizard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10076,"src":"9192:6:21","typeDescriptions":{"typeIdentifier":"t_struct$_Wizard_$10774_memory_ptr","typeString":"struct WizardNFT.Wizard memory"}},"id":10101,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"affinity","nodeType":"MemberAccess","referencedDeclaration":10767,"src":"9192:15:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10102,"name":"wizard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10076,"src":"9209:6:21","typeDescriptions":{"typeIdentifier":"t_struct$_Wizard_$10774_memory_ptr","typeString":"struct WizardNFT.Wizard memory"}},"id":10103,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"metadata","nodeType":"MemberAccess","referencedDeclaration":10773,"src":"9209:15:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":10104,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9157:68:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint88_$_t_uint8_$_t_bytes32_$","typeString":"tuple(address,uint88,uint8,bytes32)"}},"src":"9114:111:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10106,"nodeType":"ExpressionStatement","src":"9114:111:21"}]},"documentation":"@notice Returns the information associated with the given Wizard\n         owner - The address that owns this Wizard\n         innatePower - The innate power level of this Wizard, set when minted and entirely\n               immutable\n         affinity - The Elemental Affinity of this Wizard. For most Wizards, this is set\n               when they are minted, but some exclusive Wizards are minted with an affinity\n               of 0 (ELEMENT_NOTSET). A Wizard with an NOTSET affinity should NOT be able\n               to participate in Tournaments. Once the affinity of a Wizard is set to a non-zero\n               value, it can never be changed again.\n         metadata - A 256-bit hash of the Wizard's metadata, which is stored off chain. This\n               contract doesn't specify format of this hash, nor the off-chain storage mechanism\n               but, let's be honest, it's probably an IPFS SHA-256 hash.\n\n    ///         NOTE: Series zero Wizards have one of four Affinities:  Neutral (1), Fire (2), Water (3)\n               or Air (4, sometimes called \"Wind\" in the code). Future Wizard Series may have\n               additional Affinities, and clients of this API should be prepared for that\n               eventuality.","id":10108,"implemented":true,"kind":"function","modifiers":[],"name":"getWizard","nodeType":"FunctionDefinition","parameters":{"id":10065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10064,"name":"id","nodeType":"VariableDeclaration","scope":10108,"src":"8884:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10063,"name":"uint256","nodeType":"ElementaryTypeName","src":"8884:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"8883:12:21"},"returnParameters":{"id":10074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10067,"name":"owner","nodeType":"VariableDeclaration","scope":10108,"src":"8917:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10066,"name":"address","nodeType":"ElementaryTypeName","src":"8917:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":10069,"name":"innatePower","nodeType":"VariableDeclaration","scope":10108,"src":"8932:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":10068,"name":"uint88","nodeType":"ElementaryTypeName","src":"8932:6:21","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"value":null,"visibility":"internal"},{"constant":false,"id":10071,"name":"affinity","nodeType":"VariableDeclaration","scope":10108,"src":"8952:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":10070,"name":"uint8","nodeType":"ElementaryTypeName","src":"8952:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":null,"visibility":"internal"},{"constant":false,"id":10073,"name":"metadata","nodeType":"VariableDeclaration","scope":10108,"src":"8968:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10072,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8968:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"8916:69:21"},"scope":10607,"src":"8865:367:21","stateMutability":"view","superFunction":10631,"visibility":"public"},{"body":{"id":10194,"nodeType":"Block","src":"11349:687:21","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10125,"name":"affinities","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10114,"src":"11367:10:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_calldata_ptr","typeString":"uint8[] calldata"}},"id":10126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"11367:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10127,"name":"powers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10111,"src":"11388:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint88_$dyn_calldata_ptr","typeString":"uint88[] calldata"}},"id":10128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"11388:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11367:34:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"496e636f6e73697374656e7420706172616d65746572206c656e67746873","id":10130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11403:32:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_9e1b320c4960e5c2e9369f3c8e6e6477921890e13cb2c0285f23e38baf122c46","typeString":"literal_string \"Inconsistent parameter lengths\""},"value":"Inconsistent parameter lengths"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9e1b320c4960e5c2e9369f3c8e6e6477921890e13cb2c0285f23e38baf122c46","typeString":"literal_string \"Inconsistent parameter lengths\""}],"id":10124,"name":"require","nodeType":"Identifier","overloadedDeclarations":[14622,14623],"referencedDeclaration":14623,"src":"11359:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11359:77:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10132,"nodeType":"ExpressionStatement","src":"11359:77:21"},{"expression":{"argumentTypes":null,"id":10140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":10133,"name":"wizardIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10122,"src":"11480:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10137,"name":"affinities","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10114,"src":"11506:10:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_calldata_ptr","typeString":"uint8[] calldata"}},"id":10138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"11506:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"11492:13:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":10134,"name":"uint256","nodeType":"ElementaryTypeName","src":"11496:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10135,"length":null,"nodeType":"ArrayTypeName","src":"11496:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":10139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11492:32:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory","typeString":"uint256[] memory"}},"src":"11480:44:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":10141,"nodeType":"ExpressionStatement","src":"11480:44:21"},{"assignments":[10143],"declarations":[{"constant":false,"id":10143,"name":"tempWizardId","nodeType":"VariableDeclaration","scope":10194,"src":"11684:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10142,"name":"uint256","nodeType":"ElementaryTypeName","src":"11684:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":10152,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10145,"name":"seriesIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9898,"src":"11716:11:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":10144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11708:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":"uint256"},"id":10146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11708:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"argumentTypes":null,"id":10147,"name":"seriesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9905,"src":"11732:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11708:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10149,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11707:38:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"id":10150,"name":"nextWizardIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9902,"src":"11748:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11707:56:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11684:79:21"},{"body":{"id":10186,"nodeType":"Block","src":"11822:155:21","statements":[{"expression":{"argumentTypes":null,"id":10168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":10164,"name":"wizardIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10122,"src":"11836:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":10166,"indexExpression":{"argumentTypes":null,"id":10165,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10154,"src":"11846:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11836:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":10167,"name":"tempWizardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10143,"src":"11851:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11836:27:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10169,"nodeType":"ExpressionStatement","src":"11836:27:21"},{"expression":{"argumentTypes":null,"id":10171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11877:14:21","subExpression":{"argumentTypes":null,"id":10170,"name":"tempWizardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10143,"src":"11877:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10172,"nodeType":"ExpressionStatement","src":"11877:14:21"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":10174,"name":"wizardIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10122,"src":"11920:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":10176,"indexExpression":{"argumentTypes":null,"id":10175,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10154,"src":"11930:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11920:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":10177,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10116,"src":"11934:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":10178,"name":"powers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10111,"src":"11941:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint88_$dyn_calldata_ptr","typeString":"uint88[] calldata"}},"id":10180,"indexExpression":{"argumentTypes":null,"id":10179,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10154,"src":"11948:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11941:9:21","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":10181,"name":"affinities","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10114,"src":"11952:10:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_calldata_ptr","typeString":"uint8[] calldata"}},"id":10183,"indexExpression":{"argumentTypes":null,"id":10182,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10154,"src":"11963:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11952:13:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint88","typeString":"uint88"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":10173,"name":"_createWizard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11179,"src":"11906:13:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint88_$_t_uint8_$returns$__$","typeString":"function (uint256,address,uint88,uint8)"}},"id":10184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11906:60:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10185,"nodeType":"ExpressionStatement","src":"11906:60:21"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":10157,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10154,"src":"11794:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10158,"name":"affinities","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10114,"src":"11798:10:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_calldata_ptr","typeString":"uint8[] calldata"}},"id":10159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"11798:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11794:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10187,"initializationExpression":{"assignments":[10154],"declarations":[{"constant":false,"id":10154,"name":"i","nodeType":"VariableDeclaration","scope":10187,"src":"11779:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10153,"name":"uint256","nodeType":"ElementaryTypeName","src":"11779:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":10156,"initialValue":{"argumentTypes":null,"hexValue":"30","id":10155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11791:1:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11779:13:21"},"loopExpression":{"expression":{"argumentTypes":null,"id":10162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11817:3:21","subExpression":{"argumentTypes":null,"id":10161,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10154,"src":"11817:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10163,"nodeType":"ExpressionStatement","src":"11817:3:21"},"nodeType":"ForStatement","src":"11774:203:21"},{"expression":{"argumentTypes":null,"id":10192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":10188,"name":"nextWizardIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9902,"src":"11987:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":10189,"name":"tempWizardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10143,"src":"12005:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"argumentTypes":null,"id":10190,"name":"indexMask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9921,"src":"12020:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12005:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11987:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10193,"nodeType":"ExpressionStatement","src":"11987:42:21"}]},"documentation":"@notice A function to be called that conjures a whole bunch of Wizards at once! You know how\n         there's \"a pride of lions\", \"a murder of crows\", and \"a parliament of owls\"? Well, with this\n         here function you can conjure yourself \"a stench of Cheeze Wizards\"!\n\n    ///         Unsurprisingly, this method can only be called by the registered minter for a Series.\n @dev This function DOES NOT CALL onERC721Received() as required by the ERC-721 standard. It is\n         REQUIRED that the Minter calls onERC721Received() after calling this function. The following\n         code snippet should suffice:\n                 // Ensure the Wizard is being assigned to an ERC-721 aware address (either an external address,\n                 // or a smart contract that implements onERC721Received()). We must call onERC721Recieved for\n                 // each token created because it's allowed for an ERC-721 receiving contract to reject the\n                 // transfer based on the properties of the token.\n                 if (isContract(owner)) {\n                     for (uint256 i = 0; i < wizardIds.length; i++) {\n                         bytes4 retval = IERC721Receiver(owner).onERC721Received(owner, address(0), wizardIds[i], \"\");\n                         require(retval == _ERC721_RECEIVED, \"Contract owner didn't accept ERC721 transfer\");\n                     }\n                 }\n        Although it would be convenient for mintWizards to call onERC721Recieved, it opens us up to potential\n        reentrancy attacks if the Minter needs to do more state updates after mintWizards() returns.\n @param powers the power level of each wizard\n @param affinities the Elements of the wizards to create\n @param owner the address that will own the newly created Wizards","id":10195,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":10119,"modifierName":{"argumentTypes":null,"id":10118,"name":"onlyMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9961,"src":"11297:10:21","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"11297:10:21"}],"name":"mintWizards","nodeType":"FunctionDefinition","parameters":{"id":10117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10111,"name":"powers","nodeType":"VariableDeclaration","scope":10195,"src":"11197:24:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint88_$dyn_calldata_ptr","typeString":"uint88[]"},"typeName":{"baseType":{"id":10109,"name":"uint88","nodeType":"ElementaryTypeName","src":"11197:6:21","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"id":10110,"length":null,"nodeType":"ArrayTypeName","src":"11197:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint88_$dyn_storage_ptr","typeString":"uint88[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":10114,"name":"affinities","nodeType":"VariableDeclaration","scope":10195,"src":"11231:27:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_calldata_ptr","typeString":"uint8[]"},"typeName":{"baseType":{"id":10112,"name":"uint8","nodeType":"ElementaryTypeName","src":"11231:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":10113,"length":null,"nodeType":"ArrayTypeName","src":"11231:7:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_storage_ptr","typeString":"uint8[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":10116,"name":"owner","nodeType":"VariableDeclaration","scope":10195,"src":"11268:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10115,"name":"address","nodeType":"ElementaryTypeName","src":"11268:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"11187:100:21"},"returnParameters":{"id":10123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10122,"name":"wizardIds","nodeType":"VariableDeclaration","scope":10195,"src":"11317:26:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10120,"name":"uint256","nodeType":"ElementaryTypeName","src":"11317:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10121,"length":null,"nodeType":"ArrayTypeName","src":"11317:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"11316:28:21"},"scope":10607,"src":"11167:869:21","stateMutability":"nonpayable","superFunction":10652,"visibility":"external"},{"body":{"id":10281,"nodeType":"Block","src":"12974:1554:21","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10212,"name":"wizardIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10198,"src":"13005:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":10213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13005:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10214,"name":"affinities","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10204,"src":"13025:10:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_calldata_ptr","typeString":"uint8[] calldata"}},"id":10215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13025:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13005:37:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10217,"name":"wizardIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10198,"src":"13058:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":10218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13058:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10219,"name":"powers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10201,"src":"13078:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint88_$dyn_calldata_ptr","typeString":"uint88[] calldata"}},"id":10220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13078:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13058:33:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13005:86:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"496e636f6e73697374656e7420706172616d65746572206c656e67746873","id":10223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13093:32:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_9e1b320c4960e5c2e9369f3c8e6e6477921890e13cb2c0285f23e38baf122c46","typeString":"literal_string \"Inconsistent parameter lengths\""},"value":"Inconsistent parameter lengths"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9e1b320c4960e5c2e9369f3c8e6e6477921890e13cb2c0285f23e38baf122c46","typeString":"literal_string \"Inconsistent parameter lengths\""}],"id":10211,"name":"require","nodeType":"Identifier","overloadedDeclarations":[14622,14623],"referencedDeclaration":14623,"src":"12984:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12984:142:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10225,"nodeType":"ExpressionStatement","src":"12984:142:21"},{"body":{"id":10279,"nodeType":"Block","src":"13184:1338:21","statements":[{"assignments":[10238],"declarations":[{"constant":false,"id":10238,"name":"currentId","nodeType":"VariableDeclaration","scope":10279,"src":"13198:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10237,"name":"uint256","nodeType":"ElementaryTypeName","src":"13198:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":10242,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":10239,"name":"wizardIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10198,"src":"13218:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":10241,"indexExpression":{"argumentTypes":null,"id":10240,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10227,"src":"13228:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13218:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13198:32:21"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":10244,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10238,"src":"13254:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"argumentTypes":null,"id":10245,"name":"seriesMask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9913,"src":"13266:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13254:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10247,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13253:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10249,"name":"seriesIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9898,"src":"13290:11:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":10248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13282:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":"uint256"},"id":10250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13282:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"argumentTypes":null,"id":10251,"name":"seriesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9905,"src":"13306:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13282:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10253,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13281:38:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13253:66:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"57697a61726473206e6f7420696e2063757272656e7420736572696573","id":10255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13321:31:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_fc7ef6c4860b5282fd696d294060a45778365f0166817c5d0b0c92eea9f93ff0","typeString":"literal_string \"Wizards not in current series\""},"value":"Wizards not in current series"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc7ef6c4860b5282fd696d294060a45778365f0166817c5d0b0c92eea9f93ff0","typeString":"literal_string \"Wizards not in current series\""}],"id":10243,"name":"require","nodeType":"Identifier","overloadedDeclarations":[14622,14623],"referencedDeclaration":14623,"src":"13245:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13245:108:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10257,"nodeType":"ExpressionStatement","src":"13245:108:21"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":10259,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10238,"src":"14365:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"argumentTypes":null,"id":10260,"name":"indexMask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9921,"src":"14377:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14365:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10262,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14364:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"id":10263,"name":"nextWizardIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9902,"src":"14390:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14364:41:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"57697a61726473206e6f7420696e2072657365727665642072616e6765","id":10265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14407:31:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_49dd95ccd2cfdd22cfd05d0e31ecc0dbdbb43443cbfa5a9a36e07989239c1b63","typeString":"literal_string \"Wizards not in reserved range\""},"value":"Wizards not in reserved range"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_49dd95ccd2cfdd22cfd05d0e31ecc0dbdbb43443cbfa5a9a36e07989239c1b63","typeString":"literal_string \"Wizards not in reserved range\""}],"id":10258,"name":"require","nodeType":"Identifier","overloadedDeclarations":[14622,14623],"referencedDeclaration":14623,"src":"14356:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14356:83:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10267,"nodeType":"ExpressionStatement","src":"14356:83:21"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10269,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10238,"src":"14468:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":10270,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10206,"src":"14479:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":10271,"name":"powers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10201,"src":"14486:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint88_$dyn_calldata_ptr","typeString":"uint88[] calldata"}},"id":10273,"indexExpression":{"argumentTypes":null,"id":10272,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10227,"src":"14493:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14486:9:21","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":10274,"name":"affinities","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10204,"src":"14497:10:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_calldata_ptr","typeString":"uint8[] calldata"}},"id":10276,"indexExpression":{"argumentTypes":null,"id":10275,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10227,"src":"14508:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14497:13:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint88","typeString":"uint88"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":10268,"name":"_createWizard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11179,"src":"14454:13:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint88_$_t_uint8_$returns$__$","typeString":"function (uint256,address,uint88,uint8)"}},"id":10277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14454:57:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10278,"nodeType":"ExpressionStatement","src":"14454:57:21"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":10230,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10227,"src":"13157:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10231,"name":"wizardIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10198,"src":"13161:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":10232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13161:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13157:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10280,"initializationExpression":{"assignments":[10227],"declarations":[{"constant":false,"id":10227,"name":"i","nodeType":"VariableDeclaration","scope":10280,"src":"13142:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10226,"name":"uint256","nodeType":"ElementaryTypeName","src":"13142:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":10229,"initialValue":{"argumentTypes":null,"hexValue":"30","id":10228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13154:1:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13142:13:21"},"loopExpression":{"expression":{"argumentTypes":null,"id":10235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13179:3:21","subExpression":{"argumentTypes":null,"id":10234,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10227,"src":"13179:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10236,"nodeType":"ExpressionStatement","src":"13179:3:21"},"nodeType":"ForStatement","src":"13137:1385:21"}]},"documentation":"@notice A function to be called that mints a Series of Wizards in the reserved ID range, can only\n         be called by the Minter for this Series.\n @dev This function DOES NOT CALL onERC721Received() as required by the ERC-721 standard. It is\n         REQUIRED that the Minter calls onERC721Received() after calling this function. See the note\n         above on mintWizards() for more info.\n @param wizardIds the ID values to use for each Wizard, must be in the reserved range of the current Series.\n @param powers the power level of each Wizard.\n @param affinities the Elements of the Wizards to create.\n @param owner the address that will own the newly created Wizards.","id":10282,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":10209,"modifierName":{"argumentTypes":null,"id":10208,"name":"onlyMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9961,"src":"12959:10:21","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"12959:10:21"}],"name":"mintReservedWizards","nodeType":"FunctionDefinition","parameters":{"id":10207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10198,"name":"wizardIds","nodeType":"VariableDeclaration","scope":10282,"src":"12817:28:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10196,"name":"uint256","nodeType":"ElementaryTypeName","src":"12817:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10197,"length":null,"nodeType":"ArrayTypeName","src":"12817:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":10201,"name":"powers","nodeType":"VariableDeclaration","scope":10282,"src":"12855:24:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint88_$dyn_calldata_ptr","typeString":"uint88[]"},"typeName":{"baseType":{"id":10199,"name":"uint88","nodeType":"ElementaryTypeName","src":"12855:6:21","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"id":10200,"length":null,"nodeType":"ArrayTypeName","src":"12855:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint88_$dyn_storage_ptr","typeString":"uint88[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":10204,"name":"affinities","nodeType":"VariableDeclaration","scope":10282,"src":"12889:27:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_calldata_ptr","typeString":"uint8[]"},"typeName":{"baseType":{"id":10202,"name":"uint8","nodeType":"ElementaryTypeName","src":"12889:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":10203,"length":null,"nodeType":"ArrayTypeName","src":"12889:7:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_storage_ptr","typeString":"uint8[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":10206,"name":"owner","nodeType":"VariableDeclaration","scope":10282,"src":"12926:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10205,"name":"address","nodeType":"ElementaryTypeName","src":"12926:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"12807:138:21"},"returnParameters":{"id":10210,"nodeType":"ParameterList","parameters":[],"src":"12974:0:21"},"scope":10607,"src":"12779:1749:21","stateMutability":"nonpayable","superFunction":10666,"visibility":"external"},{"body":{"id":10388,"nodeType":"Block","src":"15275:784:21","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10294,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14619,"src":"15293:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"15293:10:21","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":10296,"name":"seriesMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9900,"src":"15307:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15293:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10298,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14619,"src":"15323:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"15323:10:21","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":10300,"name":"cooAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"15337:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15323:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15293:54:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4f6e6c79204d696e746572206f7220434f4f2063616e20736574206d65746164617461","id":10303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15349:37:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_e5ed3145a245fdd35178aa2c75cd3062858f3deb8e1bb26eb97bb01427826393","typeString":"literal_string \"Only Minter or COO can set metadata\""},"value":"Only Minter or COO can set metadata"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e5ed3145a245fdd35178aa2c75cd3062858f3deb8e1bb26eb97bb01427826393","typeString":"literal_string \"Only Minter or COO can set metadata\""}],"id":10293,"name":"require","nodeType":"Identifier","overloadedDeclarations":[14622,14623],"referencedDeclaration":14623,"src":"15285:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15285:102:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10305,"nodeType":"ExpressionStatement","src":"15285:102:21"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10307,"name":"wizardIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10285,"src":"15405:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":10308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"15405:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10309,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10288,"src":"15425:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":10310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"15425:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15405:35:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"496e636f6e73697374656e7420706172616d65746572206c656e67746873","id":10312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15442:32:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_9e1b320c4960e5c2e9369f3c8e6e6477921890e13cb2c0285f23e38baf122c46","typeString":"literal_string \"Inconsistent parameter lengths\""},"value":"Inconsistent parameter lengths"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9e1b320c4960e5c2e9369f3c8e6e6477921890e13cb2c0285f23e38baf122c46","typeString":"literal_string \"Inconsistent parameter lengths\""}],"id":10306,"name":"require","nodeType":"Identifier","overloadedDeclarations":[14622,14623],"referencedDeclaration":14623,"src":"15397:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15397:78:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10314,"nodeType":"ExpressionStatement","src":"15397:78:21"},{"body":{"id":10386,"nodeType":"Block","src":"15533:520:21","statements":[{"assignments":[10327],"declarations":[{"constant":false,"id":10327,"name":"currentId","nodeType":"VariableDeclaration","scope":10386,"src":"15547:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10326,"name":"uint256","nodeType":"ElementaryTypeName","src":"15547:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":10331,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":10328,"name":"wizardIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10285,"src":"15567:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":10330,"indexExpression":{"argumentTypes":null,"id":10329,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10316,"src":"15577:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15567:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15547:32:21"},{"assignments":[10333],"declarations":[{"constant":false,"id":10333,"name":"currentMetadata","nodeType":"VariableDeclaration","scope":10386,"src":"15593:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10332,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15593:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"id":10337,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":10334,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10288,"src":"15619:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":10336,"indexExpression":{"argumentTypes":null,"id":10335,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10316,"src":"15628:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15619:11:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"15593:37:21"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":10339,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10327,"src":"15654:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"argumentTypes":null,"id":10340,"name":"seriesMask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9913,"src":"15666:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15654:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10342,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15653:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10344,"name":"seriesIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9898,"src":"15690:11:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":10343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15682:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":"uint256"},"id":10345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15682:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"argumentTypes":null,"id":10346,"name":"seriesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9905,"src":"15706:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15682:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10348,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15681:38:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15653:66:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"57697a61726473206e6f7420696e2063757272656e7420736572696573","id":10350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15721:31:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_fc7ef6c4860b5282fd696d294060a45778365f0166817c5d0b0c92eea9f93ff0","typeString":"literal_string \"Wizards not in current series\""},"value":"Wizards not in current series"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc7ef6c4860b5282fd696d294060a45778365f0166817c5d0b0c92eea9f93ff0","typeString":"literal_string \"Wizards not in current series\""}],"id":10338,"name":"require","nodeType":"Identifier","overloadedDeclarations":[14622,14623],"referencedDeclaration":14623,"src":"15645:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15645:108:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10352,"nodeType":"ExpressionStatement","src":"15645:108:21"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":10361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":10354,"name":"wizardsById","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10778,"src":"15776:11:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Wizard_$10774_storage_$","typeString":"mapping(uint256 => struct WizardNFT.Wizard storage ref)"}},"id":10356,"indexExpression":{"argumentTypes":null,"id":10355,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10327,"src":"15788:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15776:22:21","typeDescriptions":{"typeIdentifier":"t_struct$_Wizard_$10774_storage","typeString":"struct WizardNFT.Wizard storage ref"}},"id":10357,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"metadata","nodeType":"MemberAccess","referencedDeclaration":10773,"src":"15776:31:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":10359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15819:1:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15811:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":"bytes32"},"id":10360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15811:10:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"15776:45:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4d6574616461746120616c726561647920736574","id":10362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15823:22:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_23ef84155d1d3473670b76d15927584602e2ac3078fa22037a5ec5e16f18d5b4","typeString":"literal_string \"Metadata already set\""},"value":"Metadata already set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_23ef84155d1d3473670b76d15927584602e2ac3078fa22037a5ec5e16f18d5b4","typeString":"literal_string \"Metadata already set\""}],"id":10353,"name":"require","nodeType":"Identifier","overloadedDeclarations":[14622,14623],"referencedDeclaration":14623,"src":"15768:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15768:78:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10364,"nodeType":"ExpressionStatement","src":"15768:78:21"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":10370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":10366,"name":"currentMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10333,"src":"15869:15:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":10368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15896:1:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15888:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":"bytes32"},"id":10369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15888:10:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"15869:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"496e76616c6964206d65746164617461","id":10371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15900:18:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_1e56872077dc089431c04b9564f0488390927653a16be57eb9528d9433d96726","typeString":"literal_string \"Invalid metadata\""},"value":"Invalid metadata"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e56872077dc089431c04b9564f0488390927653a16be57eb9528d9433d96726","typeString":"literal_string \"Invalid metadata\""}],"id":10365,"name":"require","nodeType":"Identifier","overloadedDeclarations":[14622,14623],"referencedDeclaration":14623,"src":"15861:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15861:58:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10373,"nodeType":"ExpressionStatement","src":"15861:58:21"},{"expression":{"argumentTypes":null,"id":10379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":10374,"name":"wizardsById","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10778,"src":"15934:11:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Wizard_$10774_storage_$","typeString":"mapping(uint256 => struct WizardNFT.Wizard storage ref)"}},"id":10376,"indexExpression":{"argumentTypes":null,"id":10375,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10327,"src":"15946:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15934:22:21","typeDescriptions":{"typeIdentifier":"t_struct$_Wizard_$10774_storage","typeString":"struct WizardNFT.Wizard storage ref"}},"id":10377,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"metadata","nodeType":"MemberAccess","referencedDeclaration":10773,"src":"15934:31:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":10378,"name":"currentMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10333,"src":"15968:15:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"15934:49:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":10380,"nodeType":"ExpressionStatement","src":"15934:49:21"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10382,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10327,"src":"16015:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":10383,"name":"currentMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10333,"src":"16026:15:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":10381,"name":"MetadataSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9896,"src":"16003:11:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (uint256,bytes32)"}},"id":10384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16003:39:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10385,"nodeType":"EmitStatement","src":"15998:44:21"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":10319,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10316,"src":"15506:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10320,"name":"wizardIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10285,"src":"15510:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":10321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"15510:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15506:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10387,"initializationExpression":{"assignments":[10316],"declarations":[{"constant":false,"id":10316,"name":"i","nodeType":"VariableDeclaration","scope":10387,"src":"15491:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10315,"name":"uint256","nodeType":"ElementaryTypeName","src":"15491:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":10318,"initialValue":{"argumentTypes":null,"hexValue":"30","id":10317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15503:1:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"15491:13:21"},"loopExpression":{"expression":{"argumentTypes":null,"id":10324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15528:3:21","subExpression":{"argumentTypes":null,"id":10323,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10316,"src":"15528:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10325,"nodeType":"ExpressionStatement","src":"15528:3:21"},"nodeType":"ForStatement","src":"15486:567:21"}]},"documentation":"@notice Sets the metadata values for a list of Wizards. The metadata for a Wizard can only be set once,\n         can only be set by the COO or Minter, and can only be set while the Series is still open. Once\n         a Series is closed, the metadata is locked forever!\n @param wizardIds the ID values of the Wizards to apply metadata changes to.\n @param metadata the raw metadata values for each Wizard. This contract does not define how metadata\n         should be interpreted, but it is likely to be a 256-bit hash of a complete metadata package\n         accessible via IPFS or similar.","id":10389,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":10291,"modifierName":{"argumentTypes":null,"id":10290,"name":"duringSeries","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9949,"src":"15262:12:21","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"15262:12:21"}],"name":"setMetadata","nodeType":"FunctionDefinition","parameters":{"id":10289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10285,"name":"wizardIds","nodeType":"VariableDeclaration","scope":10389,"src":"15194:28:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10283,"name":"uint256","nodeType":"ElementaryTypeName","src":"15194:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10284,"length":null,"nodeType":"ArrayTypeName","src":"15194:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":10288,"name":"metadata","nodeType":"VariableDeclaration","scope":10389,"src":"15224:27:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":10286,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15224:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":10287,"length":null,"nodeType":"ArrayTypeName","src":"15224:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"15193:59:21"},"returnParameters":{"id":10292,"nodeType":"ParameterList","parameters":[],"src":"15275:0:21"},"scope":10607,"src":"15173:886:21","stateMutability":"nonpayable","superFunction":10675,"visibility":"external"},{"body":{"id":10438,"nodeType":"Block","src":"16806:457:21","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":10399,"name":"wizardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10391,"src":"16825:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"argumentTypes":null,"id":10400,"name":"seriesMask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9913,"src":"16836:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16825:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10402,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16824:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10404,"name":"seriesIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9898,"src":"16860:11:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":10403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16852:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":"uint256"},"id":10405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16852:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"argumentTypes":null,"id":10406,"name":"seriesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9905,"src":"16876:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16852:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10408,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16851:38:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16824:65:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"57697a617264206e6f7420696e2063757272656e7420736572696573","id":10410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16891:30:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_1a3100850cc4cf5f61ac15657176b50886b533acd52240992562198d9374dce1","typeString":"literal_string \"Wizard not in current series\""},"value":"Wizard not in current series"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1a3100850cc4cf5f61ac15657176b50886b533acd52240992562198d9374dce1","typeString":"literal_string \"Wizard not in current series\""}],"id":10398,"name":"require","nodeType":"Identifier","overloadedDeclarations":[14622,14623],"referencedDeclaration":14623,"src":"16816:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16816:106:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10412,"nodeType":"ExpressionStatement","src":"16816:106:21"},{"assignments":[10414],"declarations":[{"constant":false,"id":10414,"name":"wizard","nodeType":"VariableDeclaration","scope":10438,"src":"16933:21:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Wizard_$10774_storage_ptr","typeString":"struct WizardNFT.Wizard"},"typeName":{"contractScope":null,"id":10413,"name":"Wizard","nodeType":"UserDefinedTypeName","referencedDeclaration":10774,"src":"16933:6:21","typeDescriptions":{"typeIdentifier":"t_struct$_Wizard_$10774_storage_ptr","typeString":"struct WizardNFT.Wizard"}},"value":null,"visibility":"internal"}],"id":10418,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":10415,"name":"wizardsById","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10778,"src":"16957:11:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Wizard_$10774_storage_$","typeString":"mapping(uint256 => struct WizardNFT.Wizard storage ref)"}},"id":10417,"indexExpression":{"argumentTypes":null,"id":10416,"name":"wizardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10391,"src":"16969:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16957:21:21","typeDescriptions":{"typeIdentifier":"t_struct$_Wizard_$10774_storage","typeString":"struct WizardNFT.Wizard storage ref"}},"nodeType":"VariableDeclarationStatement","src":"16933:45:21"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":10423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10420,"name":"wizard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10414,"src":"16997:6:21","typeDescriptions":{"typeIdentifier":"t_struct$_Wizard_$10774_storage_ptr","typeString":"struct WizardNFT.Wizard storage pointer"}},"id":10421,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"affinity","nodeType":"MemberAccess","referencedDeclaration":10767,"src":"16997:15:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":10422,"name":"ELEMENT_NOTSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9848,"src":"17016:14:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16997:33:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"416666696e6974792063616e206f6e6c792062652063686f73656e206f6e6365","id":10424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17032:34:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_bf4e40d93bec1de5d21f4603c610e48b09ddf79869ada25e46283a162adcec9a","typeString":"literal_string \"Affinity can only be chosen once\""},"value":"Affinity can only be chosen once"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bf4e40d93bec1de5d21f4603c610e48b09ddf79869ada25e46283a162adcec9a","typeString":"literal_string \"Affinity can only be chosen once\""}],"id":10419,"name":"require","nodeType":"Identifier","overloadedDeclarations":[14622,14623],"referencedDeclaration":14623,"src":"16989:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16989:78:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10426,"nodeType":"ExpressionStatement","src":"16989:78:21"},{"expression":{"argumentTypes":null,"id":10431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10427,"name":"wizard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10414,"src":"17106:6:21","typeDescriptions":{"typeIdentifier":"t_struct$_Wizard_$10774_storage_ptr","typeString":"struct WizardNFT.Wizard storage pointer"}},"id":10429,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"affinity","nodeType":"MemberAccess","referencedDeclaration":10767,"src":"17106:15:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":10430,"name":"newAffinity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10393,"src":"17124:11:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17106:29:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":10432,"nodeType":"ExpressionStatement","src":"17106:29:21"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10434,"name":"wizardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10391,"src":"17234:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":10435,"name":"newAffinity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10393,"src":"17244:11:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":10433,"name":"WizardAffinityAssigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10762,"src":"17211:22:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint8_$returns$__$","typeString":"function (uint256,uint8)"}},"id":10436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17211:45:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10437,"nodeType":"EmitStatement","src":"17206:50:21"}]},"documentation":"@notice Sets the affinity for a Wizard that doesn't already have its elemental affinity chosen.\n         Only usable for Exclusive Wizards (all non-Exclusives must have their affinity chosen when\n         conjured.) Even Exclusives can't change their affinity once it's been chosen.\n\n    ///         NOTE: This function can only be called by the Series minter, and (therefore) only while the\n         Series is open. A Wizard that has no affinity when a Series is closed will NEVER have an Affinity.\n @param wizardId The ID of the Wizard to update affinity of.\n @param newAffinity The new affinity of the Wizard.","id":10439,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":10396,"modifierName":{"argumentTypes":null,"id":10395,"name":"onlyMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9961,"src":"16795:10:21","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"16795:10:21"}],"name":"setAffinity","nodeType":"FunctionDefinition","parameters":{"id":10394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10391,"name":"wizardId","nodeType":"VariableDeclaration","scope":10439,"src":"16749:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10390,"name":"uint256","nodeType":"ElementaryTypeName","src":"16749:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":10393,"name":"newAffinity","nodeType":"VariableDeclaration","scope":10439,"src":"16767:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":10392,"name":"uint8","nodeType":"ElementaryTypeName","src":"16767:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":null,"visibility":"internal"}],"src":"16748:37:21"},"returnParameters":{"id":10397,"nodeType":"ParameterList","parameters":[],"src":"16806:0:21"},"scope":10607,"src":"16728:535:21","stateMutability":"nonpayable","superFunction":10638,"visibility":"external"},{"body":{"id":10453,"nodeType":"Block","src":"17567:60:21","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10449,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10441,"src":"17603:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":10450,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10443,"src":"17612:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10448,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11104,"src":"17584:18:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":10451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17584:36:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10447,"id":10452,"nodeType":"Return","src":"17577:43:21"}]},"documentation":"@notice Returns true if the given \"spender\" address is allowed to manipulate the given token\n         (either because it is the owner of that token, has been given approval to manage that token)","id":10454,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedOrOwner","nodeType":"FunctionDefinition","parameters":{"id":10444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10441,"name":"spender","nodeType":"VariableDeclaration","scope":10454,"src":"17506:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10440,"name":"address","nodeType":"ElementaryTypeName","src":"17506:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":10443,"name":"tokenId","nodeType":"VariableDeclaration","scope":10454,"src":"17523:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10442,"name":"uint256","nodeType":"ElementaryTypeName","src":"17523:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"17505:34:21"},"returnParameters":{"id":10447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10446,"name":"","nodeType":"VariableDeclaration","scope":10454,"src":"17561:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10445,"name":"bool","nodeType":"ElementaryTypeName","src":"17561:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"17560:6:21"},"scope":10607,"src":"17479:148:21","stateMutability":"view","superFunction":10684,"visibility":"public"},{"body":{"id":10495,"nodeType":"Block","src":"19124:475:21","statements":[{"assignments":[10464],"declarations":[{"constant":false,"id":10464,"name":"owner","nodeType":"VariableDeclaration","scope":10495,"src":"19216:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10463,"name":"address","nodeType":"ElementaryTypeName","src":"19216:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"id":10468,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10466,"name":"wizardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10456,"src":"19240:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10465,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[10860],"referencedDeclaration":10860,"src":"19232:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":10467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19232:17:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"19216:33:21"},{"condition":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10470,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10464,"src":"19290:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":10471,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10458,"src":"19297:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":10472,"name":"sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10460,"src":"19303:3:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10469,"name":"_validSignatureForAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10606,"src":"19264:25:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,bytes32,bytes memory) view returns (bool)"}},"id":10473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19264:43:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":10476,"nodeType":"IfStatement","src":"19260:80:21","trueBody":{"id":10475,"nodeType":"Block","src":"19309:31:21","statements":[{"expression":null,"functionReturnParameters":10462,"id":10474,"nodeType":"Return","src":"19323:7:21"}]}},{"assignments":[10478],"declarations":[{"constant":false,"id":10478,"name":"approved","nodeType":"VariableDeclaration","scope":10495,"src":"19421:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10477,"name":"address","nodeType":"ElementaryTypeName","src":"19421:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"id":10482,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10480,"name":"wizardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10456,"src":"19452:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10479,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[10926],"referencedDeclaration":10926,"src":"19440:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":10481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19440:21:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"19421:40:21"},{"condition":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10484,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10478,"src":"19502:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":10485,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10458,"src":"19512:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":10486,"name":"sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10460,"src":"19518:3:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10483,"name":"_validSignatureForAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10606,"src":"19476:25:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,bytes32,bytes memory) view returns (bool)"}},"id":10487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19476:46:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":10490,"nodeType":"IfStatement","src":"19472:83:21","trueBody":{"id":10489,"nodeType":"Block","src":"19524:31:21","statements":[{"expression":null,"functionReturnParameters":10462,"id":10488,"nodeType":"Return","src":"19538:7:21"}]}},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"496e76616c6964207369676e6174757265","id":10492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19572:19:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""},"value":"Invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""}],"id":10491,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[14624,14625],"referencedDeclaration":14625,"src":"19565:6:21","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":10493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19565:27:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10494,"nodeType":"ExpressionStatement","src":"19565:27:21"}]},"documentation":"@notice Verifies that a given signature represents authority to control the given Wizard ID,\n         reverting otherwise. It handles three cases:\n             - The simplest case: The signature was signed with the private key associated with\n               an external address that is the owner of this Wizard.\n             - The signature was generated with the private key associated with an external address\n               that is \"approved\" for working with this Wizard ID. (See the Wizard Guild and/or\n               the ERC-721 spec for more information on \"approval\".)\n             - The owner or approval address (as in cases one or two) is a smart contract\n               that conforms to ERC-1654, and accepts the given signature as being valid\n               using its own internal logic.\n\n    ///        NOTE: This function DOES NOT accept a signature created by an address that was given \"operator\n               status\" (as granted by ERC-721's setApprovalForAll() functionality). Doing so is\n               considered an extreme edge case that can be worked around where necessary.\n @param wizardId The Wizard ID whose control is in question\n @param hash The message hash we are authenticating against\n @param sig the signature data; can be longer than 65 bytes for ERC-1654","id":10496,"implemented":true,"kind":"function","modifiers":[],"name":"verifySignature","nodeType":"FunctionDefinition","parameters":{"id":10461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10456,"name":"wizardId","nodeType":"VariableDeclaration","scope":10496,"src":"19062:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10455,"name":"uint256","nodeType":"ElementaryTypeName","src":"19062:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":10458,"name":"hash","nodeType":"VariableDeclaration","scope":10496,"src":"19080:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10457,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19080:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":10460,"name":"sig","nodeType":"VariableDeclaration","scope":10496,"src":"19094:16:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10459,"name":"bytes","nodeType":"ElementaryTypeName","src":"19094:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"19061:50:21"},"returnParameters":{"id":10462,"nodeType":"ParameterList","parameters":[],"src":"19124:0:21"},"scope":10607,"src":"19037:562:21","stateMutability":"view","superFunction":10693,"visibility":"public"},{"body":{"id":10523,"nodeType":"Block","src":"20665:105:21","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10512,"name":"wizardId1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10498,"src":"20691:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":10513,"name":"hash1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10502,"src":"20702:5:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":10514,"name":"sig1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10506,"src":"20709:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":10511,"name":"verifySignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10496,"src":"20675:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint256,bytes32,bytes memory) view"}},"id":10515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20675:39:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10516,"nodeType":"ExpressionStatement","src":"20675:39:21"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10518,"name":"wizardId2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10500,"src":"20740:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":10519,"name":"hash2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10504,"src":"20751:5:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":10520,"name":"sig2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10508,"src":"20758:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":10517,"name":"verifySignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10496,"src":"20724:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint256,bytes32,bytes memory) view"}},"id":10521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20724:39:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10522,"nodeType":"ExpressionStatement","src":"20724:39:21"}]},"documentation":"@notice Convienence function that verifies signatures for two wizards using equivalent logic to\n         verifySignature(). Included to save on cross-contract calls in the common case where we\n         are verifying the signatures of two Wizards who wish to enter into a Duel.\n @param wizardId1 The first Wizard ID whose control is in question\n @param wizardId2 The second Wizard ID whose control is in question\n @param hash1 The message hash we are authenticating against for the first Wizard\n @param hash2 The message hash we are authenticating against for the first Wizard\n @param sig1 the signature data corresponding to the first Wizard; can be longer than 65 bytes for ERC-1654\n @param sig2 the signature data corresponding to the second Wizard; can be longer than 65 bytes for ERC-1654","id":10524,"implemented":true,"kind":"function","modifiers":[],"name":"verifySignatures","nodeType":"FunctionDefinition","parameters":{"id":10509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10498,"name":"wizardId1","nodeType":"VariableDeclaration","scope":10524,"src":"20497:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10497,"name":"uint256","nodeType":"ElementaryTypeName","src":"20497:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":10500,"name":"wizardId2","nodeType":"VariableDeclaration","scope":10524,"src":"20524:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10499,"name":"uint256","nodeType":"ElementaryTypeName","src":"20524:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":10502,"name":"hash1","nodeType":"VariableDeclaration","scope":10524,"src":"20551:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10501,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20551:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":10504,"name":"hash2","nodeType":"VariableDeclaration","scope":10524,"src":"20574:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10503,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20574:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":10506,"name":"sig1","nodeType":"VariableDeclaration","scope":10524,"src":"20597:19:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":10505,"name":"bytes","nodeType":"ElementaryTypeName","src":"20597:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":10508,"name":"sig2","nodeType":"VariableDeclaration","scope":10524,"src":"20626:19:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":10507,"name":"bytes","nodeType":"ElementaryTypeName","src":"20626:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"20487:159:21"},"returnParameters":{"id":10510,"nodeType":"ParameterList","parameters":[],"src":"20665:0:21"},"scope":10607,"src":"20462:308:21","stateMutability":"view","superFunction":10708,"visibility":"external"},{"body":{"id":10605,"nodeType":"Block","src":"21276:1338:21","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":10535,"name":"possibleSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10526,"src":"21290:14:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":10537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21316:1:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21308:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":10538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21308:10:21","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"21290:28:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10545,"name":"possibleSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10526,"src":"21474:14:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":10543,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"21455:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$204_$","typeString":"type(contract Address)"}},"id":10544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":203,"src":"21455:18:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":10546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21455:34:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":10602,"nodeType":"Block","src":"22226:382:21","statements":[{"assignments":[10578,10580,10582],"declarations":[{"constant":false,"id":10578,"name":"r","nodeType":"VariableDeclaration","scope":10602,"src":"22318:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10577,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22318:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":10580,"name":"s","nodeType":"VariableDeclaration","scope":10602,"src":"22329:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10579,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22329:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":10582,"name":"v","nodeType":"VariableDeclaration","scope":10602,"src":"22340:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":10581,"name":"uint8","nodeType":"ElementaryTypeName","src":"22340:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":null,"visibility":"internal"}],"id":10587,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10585,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10530,"src":"22376:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":10583,"name":"SigTools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4457,"src":"22351:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SigTools_$4457_$","typeString":"type(library SigTools)"}},"id":10584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_splitSignature","nodeType":"MemberAccess","referencedDeclaration":4456,"src":"22351:24:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$_t_bytes32_$_t_uint8_$","typeString":"function (bytes memory) pure returns (bytes32,bytes32,uint8)"}},"id":10586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22351:35:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes32_$_t_uint8_$","typeString":"tuple(bytes32,bytes32,uint8)"}},"nodeType":"VariableDeclarationStatement","src":"22317:69:21"},{"assignments":[10589],"declarations":[{"constant":false,"id":10589,"name":"signer","nodeType":"VariableDeclaration","scope":10602,"src":"22400:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10588,"name":"address","nodeType":"ElementaryTypeName","src":"22400:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"id":10596,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10591,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10528,"src":"22427:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":10592,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10582,"src":"22433:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"argumentTypes":null,"id":10593,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10578,"src":"22436:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":10594,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10580,"src":"22439:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":10590,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14611,"src":"22417:9:21","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":10595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22417:24:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"22400:41:21"},{"expression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":10597,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10589,"src":"22572:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":10598,"name":"possibleSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10526,"src":"22582:14:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"22572:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":10600,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22571:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10534,"id":10601,"nodeType":"Return","src":"22564:33:21"}]},"id":10603,"nodeType":"IfStatement","src":"21451:1157:21","trueBody":{"id":10576,"nodeType":"Block","src":"21491:729:21","statements":[{"condition":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10548,"name":"possibleSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10526,"src":"21859:14:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":10549,"name":"ERC1654_VALIDSIGNATURE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9924,"src":"21875:22:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10547,"name":"doesContractImplementInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"21828:30:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":10550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21828:70:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":10573,"nodeType":"IfStatement","src":"21824:359:21","trueBody":{"id":10572,"nodeType":"Block","src":"21900:283:21","statements":[{"assignments":[10552],"declarations":[{"constant":false,"id":10552,"name":"tso","nodeType":"VariableDeclaration","scope":10572,"src":"21953:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC1654_$3448","typeString":"contract ERC1654"},"typeName":{"contractScope":null,"id":10551,"name":"ERC1654","nodeType":"UserDefinedTypeName","referencedDeclaration":3448,"src":"21953:7:21","typeDescriptions":{"typeIdentifier":"t_contract$_ERC1654_$3448","typeString":"contract ERC1654"}},"value":null,"visibility":"internal"}],"id":10556,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10554,"name":"possibleSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10526,"src":"21975:14:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10553,"name":"ERC1654","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"21967:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1654_$3448_$","typeString":"type(contract ERC1654)"}},"id":10555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21967:23:21","typeDescriptions":{"typeIdentifier":"t_contract$_ERC1654_$3448","typeString":"contract ERC1654"}},"nodeType":"VariableDeclarationStatement","src":"21953:37:21"},{"assignments":[10558],"declarations":[{"constant":false,"id":10558,"name":"result","nodeType":"VariableDeclaration","scope":10572,"src":"22008:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":10557,"name":"bytes4","nodeType":"ElementaryTypeName","src":"22008:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":null,"visibility":"internal"}],"id":10564,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10561,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10528,"src":"22045:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":10562,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10530,"src":"22051:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":10559,"name":"tso","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10552,"src":"22024:3:21","typeDescriptions":{"typeIdentifier":"t_contract$_ERC1654_$3448","typeString":"contract ERC1654"}},"id":10560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isValidSignature","nodeType":"MemberAccess","referencedDeclaration":3447,"src":"22024:20:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (bytes32,bytes memory) view external returns (bytes4)"}},"id":10563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22024:37:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"22008:53:21"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":10567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":10565,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10558,"src":"22083:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":10566,"name":"ERC1654_VALIDSIGNATURE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9924,"src":"22093:22:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"22083:32:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":10571,"nodeType":"IfStatement","src":"22079:90:21","trueBody":{"id":10570,"nodeType":"Block","src":"22117:52:21","statements":[{"expression":{"argumentTypes":null,"hexValue":"74727565","id":10568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22146:4:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":10534,"id":10569,"nodeType":"Return","src":"22139:11:21"}]}}]}},{"expression":{"argumentTypes":null,"hexValue":"66616c7365","id":10574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22204:5:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":10534,"id":10575,"nodeType":"Return","src":"22197:12:21"}]}},"id":10604,"nodeType":"IfStatement","src":"21286:1322:21","trueBody":{"id":10542,"nodeType":"Block","src":"21320:125:21","statements":[{"expression":{"argumentTypes":null,"hexValue":"66616c7365","id":10540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21429:5:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":10534,"id":10541,"nodeType":"Return","src":"21422:12:21"}]}}]},"documentation":"@notice An internal function that checks if a given signature is a valid signature for a\n         specific address on a particular hash value. Checks for ERC-1654 compatibilty\n         first (where the possibleSigner is a smart contract that implements its own\n         signature validation), and falls back to ecrecover() otherwise.","id":10606,"implemented":true,"kind":"function","modifiers":[],"name":"_validSignatureForAddress","nodeType":"FunctionDefinition","parameters":{"id":10531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10526,"name":"possibleSigner","nodeType":"VariableDeclaration","scope":10606,"src":"21174:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10525,"name":"address","nodeType":"ElementaryTypeName","src":"21174:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":10528,"name":"hash","nodeType":"VariableDeclaration","scope":10606,"src":"21198:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10527,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21198:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":10530,"name":"signature","nodeType":"VariableDeclaration","scope":10606,"src":"21212:22:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10529,"name":"bytes","nodeType":"ElementaryTypeName","src":"21212:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"21173:62:21"},"returnParameters":{"id":10534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10533,"name":"","nodeType":"VariableDeclaration","scope":10606,"src":"21266:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10532,"name":"bool","nodeType":"ElementaryTypeName","src":"21266:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"21265:6:21"},"scope":10607,"src":"21139:1475:21","stateMutability":"view","superFunction":null,"visibility":"internal"}],"scope":10608,"src":"311:22306:21"}],"src":"0:22618:21"},"legacyAST":{"absolutePath":"/data/contracts/WizardGuild.sol","exportedSymbols":{"WizardGuild":[10607]},"id":10608,"nodeType":"SourceUnit","nodes":[{"id":9866,"literals":["solidity",">=","0.5",".6","<","0.6",".0"],"nodeType":"PragmaDirective","src":"0:31:21"},{"absolutePath":"/data/contracts/WizardNFT.sol","file":"./WizardNFT.sol","id":9867,"nodeType":"ImportDirective","scope":10608,"sourceUnit":11351,"src":"33:25:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"/data/contracts/WizardGuildInterface.sol","file":"./WizardGuildInterface.sol","id":9868,"nodeType":"ImportDirective","scope":10608,"sourceUnit":10710,"src":"59:36:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"/data/contracts/AccessControl.sol","file":"./AccessControl.sol","id":9869,"nodeType":"ImportDirective","scope":10608,"sourceUnit":186,"src":"96:29:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"/data/contracts/ERC165/ERC165Query.sol","file":"./ERC165/ERC165Query.sol","id":9870,"nodeType":"ImportDirective","scope":10608,"sourceUnit":3434,"src":"126:34:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"/data/contracts/SigTools.sol","file":"./SigTools.sol","id":9871,"nodeType":"ImportDirective","scope":10608,"sourceUnit":4458,"src":"161:24:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"/data/contracts/ERC1654/ERC1654.sol","file":"./ERC1654/ERC1654.sol","id":9872,"nodeType":"ImportDirective","scope":10608,"sourceUnit":3449,"src":"186:31:21","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":9873,"name":"AccessControl","nodeType":"UserDefinedTypeName","referencedDeclaration":185,"src":"335:13:21","typeDescriptions":{"typeIdentifier":"t_contract$_AccessControl_$185","typeString":"contract AccessControl"}},"id":9874,"nodeType":"InheritanceSpecifier","src":"335:13:21"},{"arguments":null,"baseName":{"contractScope":null,"id":9875,"name":"WizardNFT","nodeType":"UserDefinedTypeName","referencedDeclaration":11350,"src":"350:9:21","typeDescriptions":{"typeIdentifier":"t_contract$_WizardNFT_$11350","typeString":"contract WizardNFT"}},"id":9876,"nodeType":"InheritanceSpecifier","src":"350:9:21"},{"arguments":null,"baseName":{"contractScope":null,"id":9877,"name":"WizardGuildInterface","nodeType":"UserDefinedTypeName","referencedDeclaration":10709,"src":"361:20:21","typeDescriptions":{"typeIdentifier":"t_contract$_WizardGuildInterface_$10709","typeString":"contract WizardGuildInterface"}},"id":9878,"nodeType":"InheritanceSpecifier","src":"361:20:21"},{"arguments":null,"baseName":{"contractScope":null,"id":9879,"name":"ERC165Query","nodeType":"UserDefinedTypeName","referencedDeclaration":3433,"src":"383:11:21","typeDescriptions":{"typeIdentifier":"t_contract$_ERC165Query_$3433","typeString":"contract ERC165Query"}},"id":9880,"nodeType":"InheritanceSpecifier","src":"383:11:21"}],"contractDependencies":[185,204,3319,3433,9864,10614,10709,11350,14417,14588],"contractKind":"contract","documentation":"@title The master organization behind all Cheeze Wizardry. The source of all them Wiz.","fullyImplemented":true,"id":10607,"linearizedBaseContracts":[10607,3433,10709,10614,11350,204,9864,14588,14417,3319,185],"name":"WizardGuild","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":"@notice Emitted when a new Series is opened or closed.","id":9886,"name":"SeriesOpen","nodeType":"EventDefinition","parameters":{"id":9885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9882,"indexed":false,"name":"seriesIndex","nodeType":"VariableDeclaration","scope":9886,"src":"482:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":9881,"name":"uint64","nodeType":"ElementaryTypeName","src":"482:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":9884,"indexed":false,"name":"reservedIds","nodeType":"VariableDeclaration","scope":9886,"src":"502:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9883,"name":"uint256","nodeType":"ElementaryTypeName","src":"502:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"481:41:21"},"src":"465:58:21"},{"anonymous":false,"documentation":null,"id":9890,"name":"SeriesClose","nodeType":"EventDefinition","parameters":{"id":9889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9888,"indexed":false,"name":"seriesIndex","nodeType":"VariableDeclaration","scope":9890,"src":"546:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":9887,"name":"uint64","nodeType":"ElementaryTypeName","src":"546:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"}],"src":"545:20:21"},"src":"528:38:21"},{"anonymous":false,"documentation":"@notice Emitted when metadata is associated with a Wizard","id":9896,"name":"MetadataSet","nodeType":"EventDefinition","parameters":{"id":9895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9892,"indexed":true,"name":"wizardId","nodeType":"VariableDeclaration","scope":9896,"src":"656:24:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9891,"name":"uint256","nodeType":"ElementaryTypeName","src":"656:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":9894,"indexed":false,"name":"metadata","nodeType":"VariableDeclaration","scope":9896,"src":"682:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9893,"name":"bytes32","nodeType":"ElementaryTypeName","src":"682:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"655:44:21"},"src":"638:62:21"},{"constant":false,"id":9898,"name":"seriesIndex","nodeType":"VariableDeclaration","scope":10607,"src":"985:27:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":9897,"name":"uint64","nodeType":"ElementaryTypeName","src":"985:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":9900,"name":"seriesMinter","nodeType":"VariableDeclaration","scope":10607,"src":"1180:29:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9899,"name":"address","nodeType":"ElementaryTypeName","src":"1180:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":9902,"name":"nextWizardIndex","nodeType":"VariableDeclaration","scope":10607,"src":"2204:32:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9901,"name":"uint256","nodeType":"ElementaryTypeName","src":"2204:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":true,"id":9905,"name":"seriesOffset","nodeType":"VariableDeclaration","scope":10607,"src":"2483:44:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9903,"name":"uint256","nodeType":"ElementaryTypeName","src":"2483:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"hexValue":"313932","id":9904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2524:3:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},"visibility":"internal"},{"constant":true,"id":9913,"name":"seriesMask","nodeType":"VariableDeclaration","scope":10607,"src":"2533:66:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9906,"name":"uint256","nodeType":"ElementaryTypeName","src":"2533:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":9909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"2580:2:21","subExpression":{"argumentTypes":null,"hexValue":"31","id":9908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2581:1:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}],"id":9907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2572:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":"uint256"},"id":9910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2572:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"argumentTypes":null,"id":9911,"name":"seriesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9905,"src":"2587:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2572:27:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":true,"id":9921,"name":"indexMask","nodeType":"VariableDeclaration","scope":10607,"src":"2605:55:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9914,"name":"uint256","nodeType":"ElementaryTypeName","src":"2605:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":9917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"2651:2:21","subExpression":{"argumentTypes":null,"hexValue":"31","id":9916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2652:1:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}],"id":9915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2643:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":"uint256"},"id":9918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2643:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"argumentTypes":null,"hexValue":"3634","id":9919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2658:2:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"2643:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":true,"id":9924,"name":"ERC1654_VALIDSIGNATURE","nodeType":"VariableDeclaration","scope":10607,"src":"2710:60:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":9922,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2710:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"argumentTypes":null,"hexValue":"30783136323662613765","id":9923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2760:10:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_371636862_by_1","typeString":"int_const 371636862"},"value":"0x1626ba7e"},"visibility":"internal"},{"body":{"id":9935,"nodeType":"Block","src":"3347:7:21","statements":[]},"documentation":"@notice The Guild constructor.\n @param _cooAddress The COO has the ability to create new Series and to update\n         the metadata on the currently open Series (if any). It has no other special\n         abilities, and (in particular), ALL Wizards in a closed series can never be\n         modified or deleted. If the CEO and COO values are ever set to invalid addresses\n        (such as address(1)), then no new Series can ever be created, either.","id":9936,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"argumentTypes":null,"id":9929,"name":"_cooAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9926,"src":"3322:11:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":9931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3343:1:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3335:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":9932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3335:10:21","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":9933,"modifierName":{"argumentTypes":null,"id":9928,"name":"AccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"3308:13:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AccessControl_$185_$","typeString":"type(contract AccessControl)"}},"nodeType":"ModifierInvocation","src":"3308:38:21"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":9927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9926,"name":"_cooAddress","nodeType":"VariableDeclaration","scope":9936,"src":"3280:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9925,"name":"address","nodeType":"ElementaryTypeName","src":"3280:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3279:21:21"},"returnParameters":{"id":9934,"nodeType":"ParameterList","parameters":[],"src":"3347:0:21"},"scope":10607,"src":"3268:86:21","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":9948,"nodeType":"Block","src":"3780:94:21","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":9939,"name":"seriesMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9900,"src":"3798:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":9941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3822:1:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3814:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":9942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3814:10:21","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"3798:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f207365726965732069732063757272656e746c79206f70656e","id":9944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3826:29:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_1e6a9f5c81141728623a142d87a81c7da1f3565a738533604517f2797921b53c","typeString":"literal_string \"No series is currently open\""},"value":"No series is currently open"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e6a9f5c81141728623a142d87a81c7da1f3565a738533604517f2797921b53c","typeString":"literal_string \"No series is currently open\""}],"id":9938,"name":"require","nodeType":"Identifier","overloadedDeclarations":[14622,14623],"referencedDeclaration":14623,"src":"3790:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3790:66:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9946,"nodeType":"ExpressionStatement","src":"3790:66:21"},{"id":9947,"nodeType":"PlaceholderStatement","src":"3866:1:21"}]},"documentation":"@notice Require that a Tournament Series is currently open. For example closing\n         a Series does not make sense if none is open.\n @dev While in other contracts we use separate checking functions to avoid having the same\n      string inlined in multiple places, given this modifier is scarcely used it doesn't seem\n      worth the per-call gas cost here.","id":9949,"name":"duringSeries","nodeType":"ModifierDefinition","parameters":{"id":9937,"nodeType":"ParameterList","parameters":[],"src":"3777:2:21"},"src":"3756:118:21","visibility":"internal"},{"body":{"id":9960,"nodeType":"Block","src":"4369:90:21","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":9952,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14619,"src":"4387:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4387:10:21","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":9954,"name":"seriesMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9900,"src":"4401:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4387:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4f6e6c792063616c6c61626c65206279206d696e746572","id":9956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4415:25:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_3a0f8c3e93de22f1dd5c4284a5811a3adb4e45b89f75d63d6f6e433826d0f10b","typeString":"literal_string \"Only callable by minter\""},"value":"Only callable by minter"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3a0f8c3e93de22f1dd5c4284a5811a3adb4e45b89f75d63d6f6e433826d0f10b","typeString":"literal_string \"Only callable by minter\""}],"id":9951,"name":"require","nodeType":"Identifier","overloadedDeclarations":[14622,14623],"referencedDeclaration":14623,"src":"4379:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4379:62:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9958,"nodeType":"ExpressionStatement","src":"4379:62:21"},{"id":9959,"nodeType":"PlaceholderStatement","src":"4451:1:21"}]},"documentation":"@notice Require that the caller is the minter of the current series. This implicitely\n         requires that a Series is open, or the minter address would be invalid (can never\n         be matched).\n @dev While in other contracts we use separate checking functions to avoid having the same\n      string inlined in multiple places, given this modifier is scarcely used it doesn't seem\n      worth the per-call gas cost here.","id":9961,"name":"onlyMinter","nodeType":"ModifierDefinition","parameters":{"id":9950,"nodeType":"ParameterList","parameters":[],"src":"4366:2:21"},"src":"4347:112:21","visibility":"internal"},{"body":{"id":10007,"nodeType":"Block","src":"5968:504:21","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":9973,"name":"seriesMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9900,"src":"5986:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":9975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6010:1:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6002:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":9976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6002:10:21","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"5986:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"412073657269657320697320616c7265616479206f70656e","id":9978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6014:26:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_26bee89b0c4b7b48f26c650c71e83c95fb2c63de5147be7559c763a8abc092db","typeString":"literal_string \"A series is already open\""},"value":"A series is already open"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_26bee89b0c4b7b48f26c650c71e83c95fb2c63de5147be7559c763a8abc092db","typeString":"literal_string \"A series is already open\""}],"id":9972,"name":"require","nodeType":"Identifier","overloadedDeclarations":[14622,14623],"referencedDeclaration":14623,"src":"5978:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5978:63:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9980,"nodeType":"ExpressionStatement","src":"5978:63:21"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":9982,"name":"minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9963,"src":"6059:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":9984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6077:1:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6069:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":9985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6069:10:21","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"6059:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4d696e74657220616464726573732063616e6e6f742062652030","id":9987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6081:28:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_804d8f53f1425ff314b40fd9767b02b1179c16c973994c37e035d28659b4e685","typeString":"literal_string \"Minter address cannot be 0\""},"value":"Minter address cannot be 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_804d8f53f1425ff314b40fd9767b02b1179c16c973994c37e035d28659b4e685","typeString":"literal_string \"Minter address cannot be 0\""}],"id":9981,"name":"require","nodeType":"Identifier","overloadedDeclarations":[14622,14623],"referencedDeclaration":14623,"src":"6051:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6051:59:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9989,"nodeType":"ExpressionStatement","src":"6051:59:21"},{"expression":{"argumentTypes":null,"id":9992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":9990,"name":"seriesMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9900,"src":"6320:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":9991,"name":"minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9963,"src":"6335:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6320:21:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9993,"nodeType":"ExpressionStatement","src":"6320:21:21"},{"expression":{"argumentTypes":null,"id":9998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":9994,"name":"nextWizardIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9902,"src":"6351:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":9995,"name":"reservedIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9965,"src":"6369:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"hexValue":"31","id":9996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6383:1:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6369:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6351:33:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9999,"nodeType":"ExpressionStatement","src":"6351:33:21"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10001,"name":"seriesIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9898,"src":"6411:11:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":10002,"name":"reservedIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9965,"src":"6424:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10000,"name":"SeriesOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9886,"src":"6400:10:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_uint256_$returns$__$","typeString":"function (uint64,uint256)"}},"id":10003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6400:36:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10004,"nodeType":"EmitStatement","src":"6395:41:21"},{"expression":{"argumentTypes":null,"id":10005,"name":"seriesIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9898,"src":"6454:11:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":9971,"id":10006,"nodeType":"Return","src":"6447:18:21"}]},"documentation":"@notice Open a new Series of Cheeze Wizards! Can only be called by the COO when no Series is open.\n @param minter The address which is allowed to mint Wizards in this series. This contract does not\n         assume that the minter is a smart contract, but it will presumably be in the vast majority\n         of the cases. A minter has absolute control over the creation of new Wizards in an open\n         Series, but CAN NOT manipulate a Series after it has been close, and CAN NOT mainpulate\n         any Wizards that don't belong to its own Series. (Even if the same minting address is used\n         for multiple Series, the Minter only has power over the currently open Series.)\n @param reservedIds The number of IDs (from 1 to reservedIds, inclusive) that are reserved for minting\n         reserved Wizards. (We use the term \"reserved\" here, instead of Exclusive, because there\n         are times -- such as during the importation of the PreSale -- when we need to reserve a\n         block of IDs for Wizards that aren't what a user would think of as \"exclusive\". In Series\n         0, the reserved IDs will include all Exclusive Wizards and Presale Wizards. In other Series\n         it might also be the case that the set of \"reserved IDs\" doesn't exactly match the set of\n         \"exclusive\" IDs.)","id":10008,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":9968,"modifierName":{"argumentTypes":null,"id":9967,"name":"onlyCOO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"5934:7:21","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"5934:7:21"}],"name":"openSeries","nodeType":"FunctionDefinition","parameters":{"id":9966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9963,"name":"minter","nodeType":"VariableDeclaration","scope":10008,"src":"5888:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9962,"name":"address","nodeType":"ElementaryTypeName","src":"5888:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":9965,"name":"reservedIds","nodeType":"VariableDeclaration","scope":10008,"src":"5904:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9964,"name":"uint256","nodeType":"ElementaryTypeName","src":"5904:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"5887:37:21"},"returnParameters":{"id":9971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9970,"name":"seriesId","nodeType":"VariableDeclaration","scope":10008,"src":"5951:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":9969,"name":"uint64","nodeType":"ElementaryTypeName","src":"5951:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"}],"src":"5950:17:21"},"scope":10607,"src":"5868:604:21","stateMutability":"nonpayable","superFunction":null,"visibility":"external"},{"body":{"id":10044,"nodeType":"Block","src":"6976:312:21","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10014,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14619,"src":"7007:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7007:10:21","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":10016,"name":"seriesMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9900,"src":"7021:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7007:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10018,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14619,"src":"7037:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7037:10:21","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":10020,"name":"cooAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"7051:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7037:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7007:54:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4f6e6c79204d696e746572206f7220434f4f2063616e20636c6f7365206120536572696573","id":10023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7075:39:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_b107913f7afa2f3c0b4431bf383c558bd233134ffacddfccac0d78128b13317c","typeString":"literal_string \"Only Minter or COO can close a Series\""},"value":"Only Minter or COO can close a Series"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b107913f7afa2f3c0b4431bf383c558bd233134ffacddfccac0d78128b13317c","typeString":"literal_string \"Only Minter or COO can close a Series\""}],"id":10013,"name":"require","nodeType":"Identifier","overloadedDeclarations":[14622,14623],"referencedDeclaration":14623,"src":"6986:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6986:129:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10025,"nodeType":"ExpressionStatement","src":"6986:129:21"},{"expression":{"argumentTypes":null,"id":10030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":10026,"name":"seriesMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9900,"src":"7126:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":10028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7149:1:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7141:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":10029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7141:10:21","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"7126:25:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10031,"nodeType":"ExpressionStatement","src":"7126:25:21"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10033,"name":"seriesIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9898,"src":"7178:11:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":10032,"name":"SeriesClose","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9890,"src":"7166:11:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":10034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7166:24:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10035,"nodeType":"EmitStatement","src":"7161:29:21"},{"expression":{"argumentTypes":null,"id":10038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":10036,"name":"seriesIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9898,"src":"7236:11:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":10037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7236:16:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":10039,"nodeType":"ExpressionStatement","src":"7236:16:21"},{"expression":{"argumentTypes":null,"id":10042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":10040,"name":"nextWizardIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9902,"src":"7262:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"30","id":10041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7280:1:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7262:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10043,"nodeType":"ExpressionStatement","src":"7262:19:21"}]},"documentation":"@notice Closes the current Wizard Series. Once a Series has been closed, it is forever sealed and\n         no more Wizards in that Series can ever be minted! Can only be called by the COO when a Series\n         is open.\n\n    ///    NOTE: A series can be closed by the COO or the Minter. (It's assumed that some minters will\n          know when they are done, and others will need to be shut off manually by the COO.)","id":10045,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":10011,"modifierName":{"argumentTypes":null,"id":10010,"name":"duringSeries","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9949,"src":"6963:12:21","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"6963:12:21"}],"name":"closeSeries","nodeType":"FunctionDefinition","parameters":{"id":10009,"nodeType":"ParameterList","parameters":[],"src":"6951:2:21"},"returnParameters":{"id":10012,"nodeType":"ParameterList","parameters":[],"src":"6976:0:21"},"scope":10607,"src":"6931:357:21","stateMutability":"nonpayable","superFunction":null,"visibility":"external"},{"body":{"id":10061,"nodeType":"Block","src":"7408:104:21","statements":[{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":10054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":10052,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10047,"src":"7425:11:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":10053,"name":"_INTERFACE_ID_WIZARDGUILD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10613,"src":"7440:25:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"7425:40:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10057,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10047,"src":"7493:11:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"argumentTypes":null,"id":10055,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14700,"src":"7469:5:21","typeDescriptions":{"typeIdentifier":"t_super$_WizardGuild_$10607","typeString":"contract super WizardGuild"}},"id":10056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":10813,"src":"7469:23:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":10058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7469:36:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7425:80:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10051,"id":10060,"nodeType":"Return","src":"7418:87:21"}]},"documentation":"@notice ERC-165 Query Function.","id":10062,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nodeType":"FunctionDefinition","parameters":{"id":10048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10047,"name":"interfaceId","nodeType":"VariableDeclaration","scope":10062,"src":"7361:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":10046,"name":"bytes4","nodeType":"ElementaryTypeName","src":"7361:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":null,"visibility":"internal"}],"src":"7360:20:21"},"returnParameters":{"id":10051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10050,"name":"","nodeType":"VariableDeclaration","scope":10062,"src":"7402:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10049,"name":"bool","nodeType":"ElementaryTypeName","src":"7402:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"7401:6:21"},"scope":10607,"src":"7334:178:21","stateMutability":"view","superFunction":10813,"visibility":"public"},{"body":{"id":10107,"nodeType":"Block","src":"8986:246:21","statements":[{"assignments":[10076],"declarations":[{"constant":false,"id":10076,"name":"wizard","nodeType":"VariableDeclaration","scope":10107,"src":"8996:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wizard_$10774_memory_ptr","typeString":"struct WizardNFT.Wizard"},"typeName":{"contractScope":null,"id":10075,"name":"Wizard","nodeType":"UserDefinedTypeName","referencedDeclaration":10774,"src":"8996:6:21","typeDescriptions":{"typeIdentifier":"t_struct$_Wizard_$10774_storage_ptr","typeString":"struct WizardNFT.Wizard"}},"value":null,"visibility":"internal"}],"id":10080,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":10077,"name":"wizardsById","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10778,"src":"9019:11:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Wizard_$10774_storage_$","typeString":"mapping(uint256 => struct WizardNFT.Wizard storage ref)"}},"id":10079,"indexExpression":{"argumentTypes":null,"id":10078,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10064,"src":"9031:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9019:15:21","typeDescriptions":{"typeIdentifier":"t_struct$_Wizard_$10774_storage","typeString":"struct WizardNFT.Wizard storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8996:38:21"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10082,"name":"wizard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10076,"src":"9052:6:21","typeDescriptions":{"typeIdentifier":"t_struct$_Wizard_$10774_memory_ptr","typeString":"struct WizardNFT.Wizard memory"}},"id":10083,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":10771,"src":"9052:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":10085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9076:1:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9068:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":10086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9068:10:21","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"9052:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"57697a61726420646f6573206e6f74206578697374","id":10088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9080:23:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_a347450397f59f15f0b553a74dc226e713ebf05551e06aa3d2023e4dc8423c23","typeString":"literal_string \"Wizard does not exist\""},"value":"Wizard does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a347450397f59f15f0b553a74dc226e713ebf05551e06aa3d2023e4dc8423c23","typeString":"literal_string \"Wizard does not exist\""}],"id":10081,"name":"require","nodeType":"Identifier","overloadedDeclarations":[14622,14623],"referencedDeclaration":14623,"src":"9044:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9044:60:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10090,"nodeType":"ExpressionStatement","src":"9044:60:21"},{"expression":{"argumentTypes":null,"id":10105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"components":[{"argumentTypes":null,"id":10091,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10067,"src":"9115:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":10092,"name":"innatePower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10069,"src":"9122:11:21","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},{"argumentTypes":null,"id":10093,"name":"affinity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10071,"src":"9135:8:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"argumentTypes":null,"id":10094,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10073,"src":"9145:8:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":10095,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"9114:40:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint88_$_t_uint8_$_t_bytes32_$","typeString":"tuple(address,uint88,uint8,bytes32)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"components":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10096,"name":"wizard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10076,"src":"9158:6:21","typeDescriptions":{"typeIdentifier":"t_struct$_Wizard_$10774_memory_ptr","typeString":"struct WizardNFT.Wizard memory"}},"id":10097,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":10771,"src":"9158:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10098,"name":"wizard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10076,"src":"9172:6:21","typeDescriptions":{"typeIdentifier":"t_struct$_Wizard_$10774_memory_ptr","typeString":"struct WizardNFT.Wizard memory"}},"id":10099,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"innatePower","nodeType":"MemberAccess","referencedDeclaration":10769,"src":"9172:18:21","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10100,"name":"wizard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10076,"src":"9192:6:21","typeDescriptions":{"typeIdentifier":"t_struct$_Wizard_$10774_memory_ptr","typeString":"struct WizardNFT.Wizard memory"}},"id":10101,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"affinity","nodeType":"MemberAccess","referencedDeclaration":10767,"src":"9192:15:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10102,"name":"wizard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10076,"src":"9209:6:21","typeDescriptions":{"typeIdentifier":"t_struct$_Wizard_$10774_memory_ptr","typeString":"struct WizardNFT.Wizard memory"}},"id":10103,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"metadata","nodeType":"MemberAccess","referencedDeclaration":10773,"src":"9209:15:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":10104,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9157:68:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint88_$_t_uint8_$_t_bytes32_$","typeString":"tuple(address,uint88,uint8,bytes32)"}},"src":"9114:111:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10106,"nodeType":"ExpressionStatement","src":"9114:111:21"}]},"documentation":"@notice Returns the information associated with the given Wizard\n         owner - The address that owns this Wizard\n         innatePower - The innate power level of this Wizard, set when minted and entirely\n               immutable\n         affinity - The Elemental Affinity of this Wizard. For most Wizards, this is set\n               when they are minted, but some exclusive Wizards are minted with an affinity\n               of 0 (ELEMENT_NOTSET). A Wizard with an NOTSET affinity should NOT be able\n               to participate in Tournaments. Once the affinity of a Wizard is set to a non-zero\n               value, it can never be changed again.\n         metadata - A 256-bit hash of the Wizard's metadata, which is stored off chain. This\n               contract doesn't specify format of this hash, nor the off-chain storage mechanism\n               but, let's be honest, it's probably an IPFS SHA-256 hash.\n\n    ///         NOTE: Series zero Wizards have one of four Affinities:  Neutral (1), Fire (2), Water (3)\n               or Air (4, sometimes called \"Wind\" in the code). Future Wizard Series may have\n               additional Affinities, and clients of this API should be prepared for that\n               eventuality.","id":10108,"implemented":true,"kind":"function","modifiers":[],"name":"getWizard","nodeType":"FunctionDefinition","parameters":{"id":10065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10064,"name":"id","nodeType":"VariableDeclaration","scope":10108,"src":"8884:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10063,"name":"uint256","nodeType":"ElementaryTypeName","src":"8884:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"8883:12:21"},"returnParameters":{"id":10074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10067,"name":"owner","nodeType":"VariableDeclaration","scope":10108,"src":"8917:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10066,"name":"address","nodeType":"ElementaryTypeName","src":"8917:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":10069,"name":"innatePower","nodeType":"VariableDeclaration","scope":10108,"src":"8932:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":10068,"name":"uint88","nodeType":"ElementaryTypeName","src":"8932:6:21","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"value":null,"visibility":"internal"},{"constant":false,"id":10071,"name":"affinity","nodeType":"VariableDeclaration","scope":10108,"src":"8952:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":10070,"name":"uint8","nodeType":"ElementaryTypeName","src":"8952:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":null,"visibility":"internal"},{"constant":false,"id":10073,"name":"metadata","nodeType":"VariableDeclaration","scope":10108,"src":"8968:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10072,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8968:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"8916:69:21"},"scope":10607,"src":"8865:367:21","stateMutability":"view","superFunction":10631,"visibility":"public"},{"body":{"id":10194,"nodeType":"Block","src":"11349:687:21","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10125,"name":"affinities","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10114,"src":"11367:10:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_calldata_ptr","typeString":"uint8[] calldata"}},"id":10126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"11367:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10127,"name":"powers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10111,"src":"11388:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint88_$dyn_calldata_ptr","typeString":"uint88[] calldata"}},"id":10128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"11388:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11367:34:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"496e636f6e73697374656e7420706172616d65746572206c656e67746873","id":10130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11403:32:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_9e1b320c4960e5c2e9369f3c8e6e6477921890e13cb2c0285f23e38baf122c46","typeString":"literal_string \"Inconsistent parameter lengths\""},"value":"Inconsistent parameter lengths"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9e1b320c4960e5c2e9369f3c8e6e6477921890e13cb2c0285f23e38baf122c46","typeString":"literal_string \"Inconsistent parameter lengths\""}],"id":10124,"name":"require","nodeType":"Identifier","overloadedDeclarations":[14622,14623],"referencedDeclaration":14623,"src":"11359:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11359:77:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10132,"nodeType":"ExpressionStatement","src":"11359:77:21"},{"expression":{"argumentTypes":null,"id":10140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":10133,"name":"wizardIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10122,"src":"11480:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10137,"name":"affinities","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10114,"src":"11506:10:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_calldata_ptr","typeString":"uint8[] calldata"}},"id":10138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"11506:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"11492:13:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":10134,"name":"uint256","nodeType":"ElementaryTypeName","src":"11496:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10135,"length":null,"nodeType":"ArrayTypeName","src":"11496:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":10139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11492:32:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory","typeString":"uint256[] memory"}},"src":"11480:44:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":10141,"nodeType":"ExpressionStatement","src":"11480:44:21"},{"assignments":[10143],"declarations":[{"constant":false,"id":10143,"name":"tempWizardId","nodeType":"VariableDeclaration","scope":10194,"src":"11684:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10142,"name":"uint256","nodeType":"ElementaryTypeName","src":"11684:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":10152,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10145,"name":"seriesIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9898,"src":"11716:11:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":10144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11708:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":"uint256"},"id":10146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11708:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"argumentTypes":null,"id":10147,"name":"seriesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9905,"src":"11732:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11708:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10149,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11707:38:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"id":10150,"name":"nextWizardIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9902,"src":"11748:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11707:56:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11684:79:21"},{"body":{"id":10186,"nodeType":"Block","src":"11822:155:21","statements":[{"expression":{"argumentTypes":null,"id":10168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":10164,"name":"wizardIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10122,"src":"11836:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":10166,"indexExpression":{"argumentTypes":null,"id":10165,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10154,"src":"11846:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11836:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":10167,"name":"tempWizardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10143,"src":"11851:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11836:27:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10169,"nodeType":"ExpressionStatement","src":"11836:27:21"},{"expression":{"argumentTypes":null,"id":10171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11877:14:21","subExpression":{"argumentTypes":null,"id":10170,"name":"tempWizardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10143,"src":"11877:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10172,"nodeType":"ExpressionStatement","src":"11877:14:21"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":10174,"name":"wizardIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10122,"src":"11920:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":10176,"indexExpression":{"argumentTypes":null,"id":10175,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10154,"src":"11930:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11920:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":10177,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10116,"src":"11934:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":10178,"name":"powers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10111,"src":"11941:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint88_$dyn_calldata_ptr","typeString":"uint88[] calldata"}},"id":10180,"indexExpression":{"argumentTypes":null,"id":10179,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10154,"src":"11948:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11941:9:21","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":10181,"name":"affinities","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10114,"src":"11952:10:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_calldata_ptr","typeString":"uint8[] calldata"}},"id":10183,"indexExpression":{"argumentTypes":null,"id":10182,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10154,"src":"11963:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11952:13:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint88","typeString":"uint88"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":10173,"name":"_createWizard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11179,"src":"11906:13:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint88_$_t_uint8_$returns$__$","typeString":"function (uint256,address,uint88,uint8)"}},"id":10184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11906:60:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10185,"nodeType":"ExpressionStatement","src":"11906:60:21"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":10157,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10154,"src":"11794:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10158,"name":"affinities","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10114,"src":"11798:10:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_calldata_ptr","typeString":"uint8[] calldata"}},"id":10159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"11798:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11794:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10187,"initializationExpression":{"assignments":[10154],"declarations":[{"constant":false,"id":10154,"name":"i","nodeType":"VariableDeclaration","scope":10187,"src":"11779:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10153,"name":"uint256","nodeType":"ElementaryTypeName","src":"11779:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":10156,"initialValue":{"argumentTypes":null,"hexValue":"30","id":10155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11791:1:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11779:13:21"},"loopExpression":{"expression":{"argumentTypes":null,"id":10162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11817:3:21","subExpression":{"argumentTypes":null,"id":10161,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10154,"src":"11817:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10163,"nodeType":"ExpressionStatement","src":"11817:3:21"},"nodeType":"ForStatement","src":"11774:203:21"},{"expression":{"argumentTypes":null,"id":10192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":10188,"name":"nextWizardIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9902,"src":"11987:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":10189,"name":"tempWizardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10143,"src":"12005:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"argumentTypes":null,"id":10190,"name":"indexMask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9921,"src":"12020:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12005:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11987:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10193,"nodeType":"ExpressionStatement","src":"11987:42:21"}]},"documentation":"@notice A function to be called that conjures a whole bunch of Wizards at once! You know how\n         there's \"a pride of lions\", \"a murder of crows\", and \"a parliament of owls\"? Well, with this\n         here function you can conjure yourself \"a stench of Cheeze Wizards\"!\n\n    ///         Unsurprisingly, this method can only be called by the registered minter for a Series.\n @dev This function DOES NOT CALL onERC721Received() as required by the ERC-721 standard. It is\n         REQUIRED that the Minter calls onERC721Received() after calling this function. The following\n         code snippet should suffice:\n                 // Ensure the Wizard is being assigned to an ERC-721 aware address (either an external address,\n                 // or a smart contract that implements onERC721Received()). We must call onERC721Recieved for\n                 // each token created because it's allowed for an ERC-721 receiving contract to reject the\n                 // transfer based on the properties of the token.\n                 if (isContract(owner)) {\n                     for (uint256 i = 0; i < wizardIds.length; i++) {\n                         bytes4 retval = IERC721Receiver(owner).onERC721Received(owner, address(0), wizardIds[i], \"\");\n                         require(retval == _ERC721_RECEIVED, \"Contract owner didn't accept ERC721 transfer\");\n                     }\n                 }\n        Although it would be convenient for mintWizards to call onERC721Recieved, it opens us up to potential\n        reentrancy attacks if the Minter needs to do more state updates after mintWizards() returns.\n @param powers the power level of each wizard\n @param affinities the Elements of the wizards to create\n @param owner the address that will own the newly created Wizards","id":10195,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":10119,"modifierName":{"argumentTypes":null,"id":10118,"name":"onlyMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9961,"src":"11297:10:21","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"11297:10:21"}],"name":"mintWizards","nodeType":"FunctionDefinition","parameters":{"id":10117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10111,"name":"powers","nodeType":"VariableDeclaration","scope":10195,"src":"11197:24:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint88_$dyn_calldata_ptr","typeString":"uint88[]"},"typeName":{"baseType":{"id":10109,"name":"uint88","nodeType":"ElementaryTypeName","src":"11197:6:21","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"id":10110,"length":null,"nodeType":"ArrayTypeName","src":"11197:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint88_$dyn_storage_ptr","typeString":"uint88[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":10114,"name":"affinities","nodeType":"VariableDeclaration","scope":10195,"src":"11231:27:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_calldata_ptr","typeString":"uint8[]"},"typeName":{"baseType":{"id":10112,"name":"uint8","nodeType":"ElementaryTypeName","src":"11231:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":10113,"length":null,"nodeType":"ArrayTypeName","src":"11231:7:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_storage_ptr","typeString":"uint8[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":10116,"name":"owner","nodeType":"VariableDeclaration","scope":10195,"src":"11268:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10115,"name":"address","nodeType":"ElementaryTypeName","src":"11268:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"11187:100:21"},"returnParameters":{"id":10123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10122,"name":"wizardIds","nodeType":"VariableDeclaration","scope":10195,"src":"11317:26:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10120,"name":"uint256","nodeType":"ElementaryTypeName","src":"11317:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10121,"length":null,"nodeType":"ArrayTypeName","src":"11317:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"11316:28:21"},"scope":10607,"src":"11167:869:21","stateMutability":"nonpayable","superFunction":10652,"visibility":"external"},{"body":{"id":10281,"nodeType":"Block","src":"12974:1554:21","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10212,"name":"wizardIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10198,"src":"13005:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":10213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13005:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10214,"name":"affinities","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10204,"src":"13025:10:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_calldata_ptr","typeString":"uint8[] calldata"}},"id":10215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13025:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13005:37:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10217,"name":"wizardIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10198,"src":"13058:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":10218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13058:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10219,"name":"powers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10201,"src":"13078:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint88_$dyn_calldata_ptr","typeString":"uint88[] calldata"}},"id":10220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13078:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13058:33:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13005:86:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"496e636f6e73697374656e7420706172616d65746572206c656e67746873","id":10223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13093:32:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_9e1b320c4960e5c2e9369f3c8e6e6477921890e13cb2c0285f23e38baf122c46","typeString":"literal_string \"Inconsistent parameter lengths\""},"value":"Inconsistent parameter lengths"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9e1b320c4960e5c2e9369f3c8e6e6477921890e13cb2c0285f23e38baf122c46","typeString":"literal_string \"Inconsistent parameter lengths\""}],"id":10211,"name":"require","nodeType":"Identifier","overloadedDeclarations":[14622,14623],"referencedDeclaration":14623,"src":"12984:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12984:142:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10225,"nodeType":"ExpressionStatement","src":"12984:142:21"},{"body":{"id":10279,"nodeType":"Block","src":"13184:1338:21","statements":[{"assignments":[10238],"declarations":[{"constant":false,"id":10238,"name":"currentId","nodeType":"VariableDeclaration","scope":10279,"src":"13198:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10237,"name":"uint256","nodeType":"ElementaryTypeName","src":"13198:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":10242,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":10239,"name":"wizardIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10198,"src":"13218:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":10241,"indexExpression":{"argumentTypes":null,"id":10240,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10227,"src":"13228:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13218:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13198:32:21"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":10244,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10238,"src":"13254:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"argumentTypes":null,"id":10245,"name":"seriesMask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9913,"src":"13266:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13254:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10247,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13253:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10249,"name":"seriesIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9898,"src":"13290:11:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":10248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13282:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":"uint256"},"id":10250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13282:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"argumentTypes":null,"id":10251,"name":"seriesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9905,"src":"13306:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13282:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10253,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13281:38:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13253:66:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"57697a61726473206e6f7420696e2063757272656e7420736572696573","id":10255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13321:31:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_fc7ef6c4860b5282fd696d294060a45778365f0166817c5d0b0c92eea9f93ff0","typeString":"literal_string \"Wizards not in current series\""},"value":"Wizards not in current series"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc7ef6c4860b5282fd696d294060a45778365f0166817c5d0b0c92eea9f93ff0","typeString":"literal_string \"Wizards not in current series\""}],"id":10243,"name":"require","nodeType":"Identifier","overloadedDeclarations":[14622,14623],"referencedDeclaration":14623,"src":"13245:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13245:108:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10257,"nodeType":"ExpressionStatement","src":"13245:108:21"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":10259,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10238,"src":"14365:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"argumentTypes":null,"id":10260,"name":"indexMask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9921,"src":"14377:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14365:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10262,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14364:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"id":10263,"name":"nextWizardIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9902,"src":"14390:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14364:41:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"57697a61726473206e6f7420696e2072657365727665642072616e6765","id":10265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14407:31:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_49dd95ccd2cfdd22cfd05d0e31ecc0dbdbb43443cbfa5a9a36e07989239c1b63","typeString":"literal_string \"Wizards not in reserved range\""},"value":"Wizards not in reserved range"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_49dd95ccd2cfdd22cfd05d0e31ecc0dbdbb43443cbfa5a9a36e07989239c1b63","typeString":"literal_string \"Wizards not in reserved range\""}],"id":10258,"name":"require","nodeType":"Identifier","overloadedDeclarations":[14622,14623],"referencedDeclaration":14623,"src":"14356:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14356:83:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10267,"nodeType":"ExpressionStatement","src":"14356:83:21"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10269,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10238,"src":"14468:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":10270,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10206,"src":"14479:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":10271,"name":"powers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10201,"src":"14486:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint88_$dyn_calldata_ptr","typeString":"uint88[] calldata"}},"id":10273,"indexExpression":{"argumentTypes":null,"id":10272,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10227,"src":"14493:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14486:9:21","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":10274,"name":"affinities","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10204,"src":"14497:10:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_calldata_ptr","typeString":"uint8[] calldata"}},"id":10276,"indexExpression":{"argumentTypes":null,"id":10275,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10227,"src":"14508:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14497:13:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint88","typeString":"uint88"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":10268,"name":"_createWizard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11179,"src":"14454:13:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint88_$_t_uint8_$returns$__$","typeString":"function (uint256,address,uint88,uint8)"}},"id":10277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14454:57:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10278,"nodeType":"ExpressionStatement","src":"14454:57:21"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":10230,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10227,"src":"13157:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10231,"name":"wizardIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10198,"src":"13161:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":10232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13161:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13157:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10280,"initializationExpression":{"assignments":[10227],"declarations":[{"constant":false,"id":10227,"name":"i","nodeType":"VariableDeclaration","scope":10280,"src":"13142:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10226,"name":"uint256","nodeType":"ElementaryTypeName","src":"13142:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":10229,"initialValue":{"argumentTypes":null,"hexValue":"30","id":10228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13154:1:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13142:13:21"},"loopExpression":{"expression":{"argumentTypes":null,"id":10235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13179:3:21","subExpression":{"argumentTypes":null,"id":10234,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10227,"src":"13179:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10236,"nodeType":"ExpressionStatement","src":"13179:3:21"},"nodeType":"ForStatement","src":"13137:1385:21"}]},"documentation":"@notice A function to be called that mints a Series of Wizards in the reserved ID range, can only\n         be called by the Minter for this Series.\n @dev This function DOES NOT CALL onERC721Received() as required by the ERC-721 standard. It is\n         REQUIRED that the Minter calls onERC721Received() after calling this function. See the note\n         above on mintWizards() for more info.\n @param wizardIds the ID values to use for each Wizard, must be in the reserved range of the current Series.\n @param powers the power level of each Wizard.\n @param affinities the Elements of the Wizards to create.\n @param owner the address that will own the newly created Wizards.","id":10282,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":10209,"modifierName":{"argumentTypes":null,"id":10208,"name":"onlyMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9961,"src":"12959:10:21","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"12959:10:21"}],"name":"mintReservedWizards","nodeType":"FunctionDefinition","parameters":{"id":10207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10198,"name":"wizardIds","nodeType":"VariableDeclaration","scope":10282,"src":"12817:28:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10196,"name":"uint256","nodeType":"ElementaryTypeName","src":"12817:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10197,"length":null,"nodeType":"ArrayTypeName","src":"12817:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":10201,"name":"powers","nodeType":"VariableDeclaration","scope":10282,"src":"12855:24:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint88_$dyn_calldata_ptr","typeString":"uint88[]"},"typeName":{"baseType":{"id":10199,"name":"uint88","nodeType":"ElementaryTypeName","src":"12855:6:21","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"id":10200,"length":null,"nodeType":"ArrayTypeName","src":"12855:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint88_$dyn_storage_ptr","typeString":"uint88[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":10204,"name":"affinities","nodeType":"VariableDeclaration","scope":10282,"src":"12889:27:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_calldata_ptr","typeString":"uint8[]"},"typeName":{"baseType":{"id":10202,"name":"uint8","nodeType":"ElementaryTypeName","src":"12889:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":10203,"length":null,"nodeType":"ArrayTypeName","src":"12889:7:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_storage_ptr","typeString":"uint8[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":10206,"name":"owner","nodeType":"VariableDeclaration","scope":10282,"src":"12926:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10205,"name":"address","nodeType":"ElementaryTypeName","src":"12926:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"12807:138:21"},"returnParameters":{"id":10210,"nodeType":"ParameterList","parameters":[],"src":"12974:0:21"},"scope":10607,"src":"12779:1749:21","stateMutability":"nonpayable","superFunction":10666,"visibility":"external"},{"body":{"id":10388,"nodeType":"Block","src":"15275:784:21","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10294,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14619,"src":"15293:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"15293:10:21","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":10296,"name":"seriesMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9900,"src":"15307:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15293:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10298,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14619,"src":"15323:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"15323:10:21","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":10300,"name":"cooAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"15337:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15323:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15293:54:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4f6e6c79204d696e746572206f7220434f4f2063616e20736574206d65746164617461","id":10303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15349:37:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_e5ed3145a245fdd35178aa2c75cd3062858f3deb8e1bb26eb97bb01427826393","typeString":"literal_string \"Only Minter or COO can set metadata\""},"value":"Only Minter or COO can set metadata"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e5ed3145a245fdd35178aa2c75cd3062858f3deb8e1bb26eb97bb01427826393","typeString":"literal_string \"Only Minter or COO can set metadata\""}],"id":10293,"name":"require","nodeType":"Identifier","overloadedDeclarations":[14622,14623],"referencedDeclaration":14623,"src":"15285:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15285:102:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10305,"nodeType":"ExpressionStatement","src":"15285:102:21"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10307,"name":"wizardIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10285,"src":"15405:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":10308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"15405:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10309,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10288,"src":"15425:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":10310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"15425:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15405:35:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"496e636f6e73697374656e7420706172616d65746572206c656e67746873","id":10312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15442:32:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_9e1b320c4960e5c2e9369f3c8e6e6477921890e13cb2c0285f23e38baf122c46","typeString":"literal_string \"Inconsistent parameter lengths\""},"value":"Inconsistent parameter lengths"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9e1b320c4960e5c2e9369f3c8e6e6477921890e13cb2c0285f23e38baf122c46","typeString":"literal_string \"Inconsistent parameter lengths\""}],"id":10306,"name":"require","nodeType":"Identifier","overloadedDeclarations":[14622,14623],"referencedDeclaration":14623,"src":"15397:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15397:78:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10314,"nodeType":"ExpressionStatement","src":"15397:78:21"},{"body":{"id":10386,"nodeType":"Block","src":"15533:520:21","statements":[{"assignments":[10327],"declarations":[{"constant":false,"id":10327,"name":"currentId","nodeType":"VariableDeclaration","scope":10386,"src":"15547:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10326,"name":"uint256","nodeType":"ElementaryTypeName","src":"15547:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":10331,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":10328,"name":"wizardIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10285,"src":"15567:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":10330,"indexExpression":{"argumentTypes":null,"id":10329,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10316,"src":"15577:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15567:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15547:32:21"},{"assignments":[10333],"declarations":[{"constant":false,"id":10333,"name":"currentMetadata","nodeType":"VariableDeclaration","scope":10386,"src":"15593:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10332,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15593:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"id":10337,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":10334,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10288,"src":"15619:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":10336,"indexExpression":{"argumentTypes":null,"id":10335,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10316,"src":"15628:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15619:11:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"15593:37:21"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":10339,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10327,"src":"15654:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"argumentTypes":null,"id":10340,"name":"seriesMask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9913,"src":"15666:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15654:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10342,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15653:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10344,"name":"seriesIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9898,"src":"15690:11:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":10343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15682:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":"uint256"},"id":10345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15682:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"argumentTypes":null,"id":10346,"name":"seriesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9905,"src":"15706:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15682:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10348,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15681:38:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15653:66:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"57697a61726473206e6f7420696e2063757272656e7420736572696573","id":10350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15721:31:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_fc7ef6c4860b5282fd696d294060a45778365f0166817c5d0b0c92eea9f93ff0","typeString":"literal_string \"Wizards not in current series\""},"value":"Wizards not in current series"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc7ef6c4860b5282fd696d294060a45778365f0166817c5d0b0c92eea9f93ff0","typeString":"literal_string \"Wizards not in current series\""}],"id":10338,"name":"require","nodeType":"Identifier","overloadedDeclarations":[14622,14623],"referencedDeclaration":14623,"src":"15645:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15645:108:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10352,"nodeType":"ExpressionStatement","src":"15645:108:21"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":10361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":10354,"name":"wizardsById","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10778,"src":"15776:11:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Wizard_$10774_storage_$","typeString":"mapping(uint256 => struct WizardNFT.Wizard storage ref)"}},"id":10356,"indexExpression":{"argumentTypes":null,"id":10355,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10327,"src":"15788:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15776:22:21","typeDescriptions":{"typeIdentifier":"t_struct$_Wizard_$10774_storage","typeString":"struct WizardNFT.Wizard storage ref"}},"id":10357,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"metadata","nodeType":"MemberAccess","referencedDeclaration":10773,"src":"15776:31:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":10359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15819:1:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15811:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":"bytes32"},"id":10360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15811:10:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"15776:45:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4d6574616461746120616c726561647920736574","id":10362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15823:22:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_23ef84155d1d3473670b76d15927584602e2ac3078fa22037a5ec5e16f18d5b4","typeString":"literal_string \"Metadata already set\""},"value":"Metadata already set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_23ef84155d1d3473670b76d15927584602e2ac3078fa22037a5ec5e16f18d5b4","typeString":"literal_string \"Metadata already set\""}],"id":10353,"name":"require","nodeType":"Identifier","overloadedDeclarations":[14622,14623],"referencedDeclaration":14623,"src":"15768:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15768:78:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10364,"nodeType":"ExpressionStatement","src":"15768:78:21"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":10370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":10366,"name":"currentMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10333,"src":"15869:15:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":10368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15896:1:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15888:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":"bytes32"},"id":10369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15888:10:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"15869:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"496e76616c6964206d65746164617461","id":10371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15900:18:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_1e56872077dc089431c04b9564f0488390927653a16be57eb9528d9433d96726","typeString":"literal_string \"Invalid metadata\""},"value":"Invalid metadata"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e56872077dc089431c04b9564f0488390927653a16be57eb9528d9433d96726","typeString":"literal_string \"Invalid metadata\""}],"id":10365,"name":"require","nodeType":"Identifier","overloadedDeclarations":[14622,14623],"referencedDeclaration":14623,"src":"15861:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15861:58:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10373,"nodeType":"ExpressionStatement","src":"15861:58:21"},{"expression":{"argumentTypes":null,"id":10379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":10374,"name":"wizardsById","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10778,"src":"15934:11:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Wizard_$10774_storage_$","typeString":"mapping(uint256 => struct WizardNFT.Wizard storage ref)"}},"id":10376,"indexExpression":{"argumentTypes":null,"id":10375,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10327,"src":"15946:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15934:22:21","typeDescriptions":{"typeIdentifier":"t_struct$_Wizard_$10774_storage","typeString":"struct WizardNFT.Wizard storage ref"}},"id":10377,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"metadata","nodeType":"MemberAccess","referencedDeclaration":10773,"src":"15934:31:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":10378,"name":"currentMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10333,"src":"15968:15:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"15934:49:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":10380,"nodeType":"ExpressionStatement","src":"15934:49:21"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10382,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10327,"src":"16015:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":10383,"name":"currentMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10333,"src":"16026:15:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":10381,"name":"MetadataSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9896,"src":"16003:11:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (uint256,bytes32)"}},"id":10384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16003:39:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10385,"nodeType":"EmitStatement","src":"15998:44:21"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":10319,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10316,"src":"15506:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10320,"name":"wizardIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10285,"src":"15510:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":10321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"15510:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15506:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10387,"initializationExpression":{"assignments":[10316],"declarations":[{"constant":false,"id":10316,"name":"i","nodeType":"VariableDeclaration","scope":10387,"src":"15491:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10315,"name":"uint256","nodeType":"ElementaryTypeName","src":"15491:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":10318,"initialValue":{"argumentTypes":null,"hexValue":"30","id":10317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15503:1:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"15491:13:21"},"loopExpression":{"expression":{"argumentTypes":null,"id":10324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15528:3:21","subExpression":{"argumentTypes":null,"id":10323,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10316,"src":"15528:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10325,"nodeType":"ExpressionStatement","src":"15528:3:21"},"nodeType":"ForStatement","src":"15486:567:21"}]},"documentation":"@notice Sets the metadata values for a list of Wizards. The metadata for a Wizard can only be set once,\n         can only be set by the COO or Minter, and can only be set while the Series is still open. Once\n         a Series is closed, the metadata is locked forever!\n @param wizardIds the ID values of the Wizards to apply metadata changes to.\n @param metadata the raw metadata values for each Wizard. This contract does not define how metadata\n         should be interpreted, but it is likely to be a 256-bit hash of a complete metadata package\n         accessible via IPFS or similar.","id":10389,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":10291,"modifierName":{"argumentTypes":null,"id":10290,"name":"duringSeries","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9949,"src":"15262:12:21","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"15262:12:21"}],"name":"setMetadata","nodeType":"FunctionDefinition","parameters":{"id":10289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10285,"name":"wizardIds","nodeType":"VariableDeclaration","scope":10389,"src":"15194:28:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10283,"name":"uint256","nodeType":"ElementaryTypeName","src":"15194:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10284,"length":null,"nodeType":"ArrayTypeName","src":"15194:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":10288,"name":"metadata","nodeType":"VariableDeclaration","scope":10389,"src":"15224:27:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":10286,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15224:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":10287,"length":null,"nodeType":"ArrayTypeName","src":"15224:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"15193:59:21"},"returnParameters":{"id":10292,"nodeType":"ParameterList","parameters":[],"src":"15275:0:21"},"scope":10607,"src":"15173:886:21","stateMutability":"nonpayable","superFunction":10675,"visibility":"external"},{"body":{"id":10438,"nodeType":"Block","src":"16806:457:21","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":10399,"name":"wizardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10391,"src":"16825:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"argumentTypes":null,"id":10400,"name":"seriesMask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9913,"src":"16836:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16825:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10402,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16824:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10404,"name":"seriesIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9898,"src":"16860:11:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":10403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16852:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":"uint256"},"id":10405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16852:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"argumentTypes":null,"id":10406,"name":"seriesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9905,"src":"16876:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16852:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10408,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16851:38:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16824:65:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"57697a617264206e6f7420696e2063757272656e7420736572696573","id":10410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16891:30:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_1a3100850cc4cf5f61ac15657176b50886b533acd52240992562198d9374dce1","typeString":"literal_string \"Wizard not in current series\""},"value":"Wizard not in current series"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1a3100850cc4cf5f61ac15657176b50886b533acd52240992562198d9374dce1","typeString":"literal_string \"Wizard not in current series\""}],"id":10398,"name":"require","nodeType":"Identifier","overloadedDeclarations":[14622,14623],"referencedDeclaration":14623,"src":"16816:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16816:106:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10412,"nodeType":"ExpressionStatement","src":"16816:106:21"},{"assignments":[10414],"declarations":[{"constant":false,"id":10414,"name":"wizard","nodeType":"VariableDeclaration","scope":10438,"src":"16933:21:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Wizard_$10774_storage_ptr","typeString":"struct WizardNFT.Wizard"},"typeName":{"contractScope":null,"id":10413,"name":"Wizard","nodeType":"UserDefinedTypeName","referencedDeclaration":10774,"src":"16933:6:21","typeDescriptions":{"typeIdentifier":"t_struct$_Wizard_$10774_storage_ptr","typeString":"struct WizardNFT.Wizard"}},"value":null,"visibility":"internal"}],"id":10418,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":10415,"name":"wizardsById","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10778,"src":"16957:11:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Wizard_$10774_storage_$","typeString":"mapping(uint256 => struct WizardNFT.Wizard storage ref)"}},"id":10417,"indexExpression":{"argumentTypes":null,"id":10416,"name":"wizardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10391,"src":"16969:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16957:21:21","typeDescriptions":{"typeIdentifier":"t_struct$_Wizard_$10774_storage","typeString":"struct WizardNFT.Wizard storage ref"}},"nodeType":"VariableDeclarationStatement","src":"16933:45:21"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":10423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10420,"name":"wizard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10414,"src":"16997:6:21","typeDescriptions":{"typeIdentifier":"t_struct$_Wizard_$10774_storage_ptr","typeString":"struct WizardNFT.Wizard storage pointer"}},"id":10421,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"affinity","nodeType":"MemberAccess","referencedDeclaration":10767,"src":"16997:15:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":10422,"name":"ELEMENT_NOTSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9848,"src":"17016:14:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16997:33:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"416666696e6974792063616e206f6e6c792062652063686f73656e206f6e6365","id":10424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17032:34:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_bf4e40d93bec1de5d21f4603c610e48b09ddf79869ada25e46283a162adcec9a","typeString":"literal_string \"Affinity can only be chosen once\""},"value":"Affinity can only be chosen once"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bf4e40d93bec1de5d21f4603c610e48b09ddf79869ada25e46283a162adcec9a","typeString":"literal_string \"Affinity can only be chosen once\""}],"id":10419,"name":"require","nodeType":"Identifier","overloadedDeclarations":[14622,14623],"referencedDeclaration":14623,"src":"16989:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16989:78:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10426,"nodeType":"ExpressionStatement","src":"16989:78:21"},{"expression":{"argumentTypes":null,"id":10431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":10427,"name":"wizard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10414,"src":"17106:6:21","typeDescriptions":{"typeIdentifier":"t_struct$_Wizard_$10774_storage_ptr","typeString":"struct WizardNFT.Wizard storage pointer"}},"id":10429,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"affinity","nodeType":"MemberAccess","referencedDeclaration":10767,"src":"17106:15:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":10430,"name":"newAffinity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10393,"src":"17124:11:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17106:29:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":10432,"nodeType":"ExpressionStatement","src":"17106:29:21"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10434,"name":"wizardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10391,"src":"17234:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":10435,"name":"newAffinity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10393,"src":"17244:11:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":10433,"name":"WizardAffinityAssigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10762,"src":"17211:22:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint8_$returns$__$","typeString":"function (uint256,uint8)"}},"id":10436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17211:45:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10437,"nodeType":"EmitStatement","src":"17206:50:21"}]},"documentation":"@notice Sets the affinity for a Wizard that doesn't already have its elemental affinity chosen.\n         Only usable for Exclusive Wizards (all non-Exclusives must have their affinity chosen when\n         conjured.) Even Exclusives can't change their affinity once it's been chosen.\n\n    ///         NOTE: This function can only be called by the Series minter, and (therefore) only while the\n         Series is open. A Wizard that has no affinity when a Series is closed will NEVER have an Affinity.\n @param wizardId The ID of the Wizard to update affinity of.\n @param newAffinity The new affinity of the Wizard.","id":10439,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":10396,"modifierName":{"argumentTypes":null,"id":10395,"name":"onlyMinter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9961,"src":"16795:10:21","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"16795:10:21"}],"name":"setAffinity","nodeType":"FunctionDefinition","parameters":{"id":10394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10391,"name":"wizardId","nodeType":"VariableDeclaration","scope":10439,"src":"16749:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10390,"name":"uint256","nodeType":"ElementaryTypeName","src":"16749:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":10393,"name":"newAffinity","nodeType":"VariableDeclaration","scope":10439,"src":"16767:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":10392,"name":"uint8","nodeType":"ElementaryTypeName","src":"16767:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":null,"visibility":"internal"}],"src":"16748:37:21"},"returnParameters":{"id":10397,"nodeType":"ParameterList","parameters":[],"src":"16806:0:21"},"scope":10607,"src":"16728:535:21","stateMutability":"nonpayable","superFunction":10638,"visibility":"external"},{"body":{"id":10453,"nodeType":"Block","src":"17567:60:21","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10449,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10441,"src":"17603:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":10450,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10443,"src":"17612:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10448,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11104,"src":"17584:18:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":10451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17584:36:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10447,"id":10452,"nodeType":"Return","src":"17577:43:21"}]},"documentation":"@notice Returns true if the given \"spender\" address is allowed to manipulate the given token\n         (either because it is the owner of that token, has been given approval to manage that token)","id":10454,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedOrOwner","nodeType":"FunctionDefinition","parameters":{"id":10444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10441,"name":"spender","nodeType":"VariableDeclaration","scope":10454,"src":"17506:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10440,"name":"address","nodeType":"ElementaryTypeName","src":"17506:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":10443,"name":"tokenId","nodeType":"VariableDeclaration","scope":10454,"src":"17523:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10442,"name":"uint256","nodeType":"ElementaryTypeName","src":"17523:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"17505:34:21"},"returnParameters":{"id":10447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10446,"name":"","nodeType":"VariableDeclaration","scope":10454,"src":"17561:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10445,"name":"bool","nodeType":"ElementaryTypeName","src":"17561:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"17560:6:21"},"scope":10607,"src":"17479:148:21","stateMutability":"view","superFunction":10684,"visibility":"public"},{"body":{"id":10495,"nodeType":"Block","src":"19124:475:21","statements":[{"assignments":[10464],"declarations":[{"constant":false,"id":10464,"name":"owner","nodeType":"VariableDeclaration","scope":10495,"src":"19216:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10463,"name":"address","nodeType":"ElementaryTypeName","src":"19216:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"id":10468,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10466,"name":"wizardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10456,"src":"19240:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10465,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[10860],"referencedDeclaration":10860,"src":"19232:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":10467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19232:17:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"19216:33:21"},{"condition":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10470,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10464,"src":"19290:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":10471,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10458,"src":"19297:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":10472,"name":"sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10460,"src":"19303:3:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10469,"name":"_validSignatureForAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10606,"src":"19264:25:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,bytes32,bytes memory) view returns (bool)"}},"id":10473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19264:43:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":10476,"nodeType":"IfStatement","src":"19260:80:21","trueBody":{"id":10475,"nodeType":"Block","src":"19309:31:21","statements":[{"expression":null,"functionReturnParameters":10462,"id":10474,"nodeType":"Return","src":"19323:7:21"}]}},{"assignments":[10478],"declarations":[{"constant":false,"id":10478,"name":"approved","nodeType":"VariableDeclaration","scope":10495,"src":"19421:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10477,"name":"address","nodeType":"ElementaryTypeName","src":"19421:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"id":10482,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10480,"name":"wizardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10456,"src":"19452:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10479,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[10926],"referencedDeclaration":10926,"src":"19440:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":10481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19440:21:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"19421:40:21"},{"condition":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10484,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10478,"src":"19502:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":10485,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10458,"src":"19512:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":10486,"name":"sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10460,"src":"19518:3:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10483,"name":"_validSignatureForAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10606,"src":"19476:25:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,bytes32,bytes memory) view returns (bool)"}},"id":10487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19476:46:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":10490,"nodeType":"IfStatement","src":"19472:83:21","trueBody":{"id":10489,"nodeType":"Block","src":"19524:31:21","statements":[{"expression":null,"functionReturnParameters":10462,"id":10488,"nodeType":"Return","src":"19538:7:21"}]}},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"496e76616c6964207369676e6174757265","id":10492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19572:19:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""},"value":"Invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""}],"id":10491,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[14624,14625],"referencedDeclaration":14625,"src":"19565:6:21","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":10493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19565:27:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10494,"nodeType":"ExpressionStatement","src":"19565:27:21"}]},"documentation":"@notice Verifies that a given signature represents authority to control the given Wizard ID,\n         reverting otherwise. It handles three cases:\n             - The simplest case: The signature was signed with the private key associated with\n               an external address that is the owner of this Wizard.\n             - The signature was generated with the private key associated with an external address\n               that is \"approved\" for working with this Wizard ID. (See the Wizard Guild and/or\n               the ERC-721 spec for more information on \"approval\".)\n             - The owner or approval address (as in cases one or two) is a smart contract\n               that conforms to ERC-1654, and accepts the given signature as being valid\n               using its own internal logic.\n\n    ///        NOTE: This function DOES NOT accept a signature created by an address that was given \"operator\n               status\" (as granted by ERC-721's setApprovalForAll() functionality). Doing so is\n               considered an extreme edge case that can be worked around where necessary.\n @param wizardId The Wizard ID whose control is in question\n @param hash The message hash we are authenticating against\n @param sig the signature data; can be longer than 65 bytes for ERC-1654","id":10496,"implemented":true,"kind":"function","modifiers":[],"name":"verifySignature","nodeType":"FunctionDefinition","parameters":{"id":10461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10456,"name":"wizardId","nodeType":"VariableDeclaration","scope":10496,"src":"19062:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10455,"name":"uint256","nodeType":"ElementaryTypeName","src":"19062:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":10458,"name":"hash","nodeType":"VariableDeclaration","scope":10496,"src":"19080:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10457,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19080:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":10460,"name":"sig","nodeType":"VariableDeclaration","scope":10496,"src":"19094:16:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10459,"name":"bytes","nodeType":"ElementaryTypeName","src":"19094:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"19061:50:21"},"returnParameters":{"id":10462,"nodeType":"ParameterList","parameters":[],"src":"19124:0:21"},"scope":10607,"src":"19037:562:21","stateMutability":"view","superFunction":10693,"visibility":"public"},{"body":{"id":10523,"nodeType":"Block","src":"20665:105:21","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10512,"name":"wizardId1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10498,"src":"20691:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":10513,"name":"hash1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10502,"src":"20702:5:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":10514,"name":"sig1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10506,"src":"20709:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":10511,"name":"verifySignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10496,"src":"20675:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint256,bytes32,bytes memory) view"}},"id":10515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20675:39:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10516,"nodeType":"ExpressionStatement","src":"20675:39:21"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10518,"name":"wizardId2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10500,"src":"20740:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":10519,"name":"hash2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10504,"src":"20751:5:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":10520,"name":"sig2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10508,"src":"20758:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":10517,"name":"verifySignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10496,"src":"20724:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint256,bytes32,bytes memory) view"}},"id":10521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20724:39:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10522,"nodeType":"ExpressionStatement","src":"20724:39:21"}]},"documentation":"@notice Convienence function that verifies signatures for two wizards using equivalent logic to\n         verifySignature(). Included to save on cross-contract calls in the common case where we\n         are verifying the signatures of two Wizards who wish to enter into a Duel.\n @param wizardId1 The first Wizard ID whose control is in question\n @param wizardId2 The second Wizard ID whose control is in question\n @param hash1 The message hash we are authenticating against for the first Wizard\n @param hash2 The message hash we are authenticating against for the first Wizard\n @param sig1 the signature data corresponding to the first Wizard; can be longer than 65 bytes for ERC-1654\n @param sig2 the signature data corresponding to the second Wizard; can be longer than 65 bytes for ERC-1654","id":10524,"implemented":true,"kind":"function","modifiers":[],"name":"verifySignatures","nodeType":"FunctionDefinition","parameters":{"id":10509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10498,"name":"wizardId1","nodeType":"VariableDeclaration","scope":10524,"src":"20497:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10497,"name":"uint256","nodeType":"ElementaryTypeName","src":"20497:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":10500,"name":"wizardId2","nodeType":"VariableDeclaration","scope":10524,"src":"20524:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10499,"name":"uint256","nodeType":"ElementaryTypeName","src":"20524:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":10502,"name":"hash1","nodeType":"VariableDeclaration","scope":10524,"src":"20551:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10501,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20551:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":10504,"name":"hash2","nodeType":"VariableDeclaration","scope":10524,"src":"20574:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10503,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20574:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":10506,"name":"sig1","nodeType":"VariableDeclaration","scope":10524,"src":"20597:19:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":10505,"name":"bytes","nodeType":"ElementaryTypeName","src":"20597:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":10508,"name":"sig2","nodeType":"VariableDeclaration","scope":10524,"src":"20626:19:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":10507,"name":"bytes","nodeType":"ElementaryTypeName","src":"20626:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"20487:159:21"},"returnParameters":{"id":10510,"nodeType":"ParameterList","parameters":[],"src":"20665:0:21"},"scope":10607,"src":"20462:308:21","stateMutability":"view","superFunction":10708,"visibility":"external"},{"body":{"id":10605,"nodeType":"Block","src":"21276:1338:21","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":10535,"name":"possibleSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10526,"src":"21290:14:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":10537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21316:1:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21308:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":10538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21308:10:21","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"21290:28:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10545,"name":"possibleSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10526,"src":"21474:14:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":10543,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"21455:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$204_$","typeString":"type(contract Address)"}},"id":10544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":203,"src":"21455:18:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":10546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21455:34:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":10602,"nodeType":"Block","src":"22226:382:21","statements":[{"assignments":[10578,10580,10582],"declarations":[{"constant":false,"id":10578,"name":"r","nodeType":"VariableDeclaration","scope":10602,"src":"22318:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10577,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22318:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":10580,"name":"s","nodeType":"VariableDeclaration","scope":10602,"src":"22329:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10579,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22329:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":10582,"name":"v","nodeType":"VariableDeclaration","scope":10602,"src":"22340:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":10581,"name":"uint8","nodeType":"ElementaryTypeName","src":"22340:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":null,"visibility":"internal"}],"id":10587,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10585,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10530,"src":"22376:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":10583,"name":"SigTools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4457,"src":"22351:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SigTools_$4457_$","typeString":"type(library SigTools)"}},"id":10584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_splitSignature","nodeType":"MemberAccess","referencedDeclaration":4456,"src":"22351:24:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$_t_bytes32_$_t_uint8_$","typeString":"function (bytes memory) pure returns (bytes32,bytes32,uint8)"}},"id":10586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22351:35:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes32_$_t_uint8_$","typeString":"tuple(bytes32,bytes32,uint8)"}},"nodeType":"VariableDeclarationStatement","src":"22317:69:21"},{"assignments":[10589],"declarations":[{"constant":false,"id":10589,"name":"signer","nodeType":"VariableDeclaration","scope":10602,"src":"22400:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10588,"name":"address","nodeType":"ElementaryTypeName","src":"22400:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"id":10596,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10591,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10528,"src":"22427:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":10592,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10582,"src":"22433:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"argumentTypes":null,"id":10593,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10578,"src":"22436:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":10594,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10580,"src":"22439:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":10590,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14611,"src":"22417:9:21","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":10595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22417:24:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"22400:41:21"},{"expression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":10597,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10589,"src":"22572:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":10598,"name":"possibleSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10526,"src":"22582:14:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"22572:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":10600,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22571:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10534,"id":10601,"nodeType":"Return","src":"22564:33:21"}]},"id":10603,"nodeType":"IfStatement","src":"21451:1157:21","trueBody":{"id":10576,"nodeType":"Block","src":"21491:729:21","statements":[{"condition":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10548,"name":"possibleSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10526,"src":"21859:14:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":10549,"name":"ERC1654_VALIDSIGNATURE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9924,"src":"21875:22:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10547,"name":"doesContractImplementInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"21828:30:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":10550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21828:70:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":10573,"nodeType":"IfStatement","src":"21824:359:21","trueBody":{"id":10572,"nodeType":"Block","src":"21900:283:21","statements":[{"assignments":[10552],"declarations":[{"constant":false,"id":10552,"name":"tso","nodeType":"VariableDeclaration","scope":10572,"src":"21953:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC1654_$3448","typeString":"contract ERC1654"},"typeName":{"contractScope":null,"id":10551,"name":"ERC1654","nodeType":"UserDefinedTypeName","referencedDeclaration":3448,"src":"21953:7:21","typeDescriptions":{"typeIdentifier":"t_contract$_ERC1654_$3448","typeString":"contract ERC1654"}},"value":null,"visibility":"internal"}],"id":10556,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10554,"name":"possibleSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10526,"src":"21975:14:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10553,"name":"ERC1654","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"21967:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1654_$3448_$","typeString":"type(contract ERC1654)"}},"id":10555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21967:23:21","typeDescriptions":{"typeIdentifier":"t_contract$_ERC1654_$3448","typeString":"contract ERC1654"}},"nodeType":"VariableDeclarationStatement","src":"21953:37:21"},{"assignments":[10558],"declarations":[{"constant":false,"id":10558,"name":"result","nodeType":"VariableDeclaration","scope":10572,"src":"22008:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":10557,"name":"bytes4","nodeType":"ElementaryTypeName","src":"22008:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":null,"visibility":"internal"}],"id":10564,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":10561,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10528,"src":"22045:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":10562,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10530,"src":"22051:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":10559,"name":"tso","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10552,"src":"22024:3:21","typeDescriptions":{"typeIdentifier":"t_contract$_ERC1654_$3448","typeString":"contract ERC1654"}},"id":10560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isValidSignature","nodeType":"MemberAccess","referencedDeclaration":3447,"src":"22024:20:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (bytes32,bytes memory) view external returns (bytes4)"}},"id":10563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22024:37:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"22008:53:21"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":10567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":10565,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10558,"src":"22083:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":10566,"name":"ERC1654_VALIDSIGNATURE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9924,"src":"22093:22:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"22083:32:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":10571,"nodeType":"IfStatement","src":"22079:90:21","trueBody":{"id":10570,"nodeType":"Block","src":"22117:52:21","statements":[{"expression":{"argumentTypes":null,"hexValue":"74727565","id":10568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22146:4:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":10534,"id":10569,"nodeType":"Return","src":"22139:11:21"}]}}]}},{"expression":{"argumentTypes":null,"hexValue":"66616c7365","id":10574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22204:5:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":10534,"id":10575,"nodeType":"Return","src":"22197:12:21"}]}},"id":10604,"nodeType":"IfStatement","src":"21286:1322:21","trueBody":{"id":10542,"nodeType":"Block","src":"21320:125:21","statements":[{"expression":{"argumentTypes":null,"hexValue":"66616c7365","id":10540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21429:5:21","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":10534,"id":10541,"nodeType":"Return","src":"21422:12:21"}]}}]},"documentation":"@notice An internal function that checks if a given signature is a valid signature for a\n         specific address on a particular hash value. Checks for ERC-1654 compatibilty\n         first (where the possibleSigner is a smart contract that implements its own\n         signature validation), and falls back to ecrecover() otherwise.","id":10606,"implemented":true,"kind":"function","modifiers":[],"name":"_validSignatureForAddress","nodeType":"FunctionDefinition","parameters":{"id":10531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10526,"name":"possibleSigner","nodeType":"VariableDeclaration","scope":10606,"src":"21174:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10525,"name":"address","nodeType":"ElementaryTypeName","src":"21174:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":10528,"name":"hash","nodeType":"VariableDeclaration","scope":10606,"src":"21198:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10527,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21198:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":10530,"name":"signature","nodeType":"VariableDeclaration","scope":10606,"src":"21212:22:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10529,"name":"bytes","nodeType":"ElementaryTypeName","src":"21212:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"21173:62:21"},"returnParameters":{"id":10534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10533,"name":"","nodeType":"VariableDeclaration","scope":10606,"src":"21266:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10532,"name":"bool","nodeType":"ElementaryTypeName","src":"21266:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"21265:6:21"},"scope":10607,"src":"21139:1475:21","stateMutability":"view","superFunction":null,"visibility":"internal"}],"scope":10608,"src":"311:22306:21"}],"src":"0:22618:21"},"compiler":{"name":"solc","version":"0.5.8+commit.23d335f2.Emscripten.clang"},"networks":{},"schemaVersion":"3.0.9","updatedAt":"2019-07-10T20:27:57.641Z","devdoc":{"methods":{"approve(address,uint256)":{"params":{"to":"address to be approved for the given Wizard","wizardId":"ID of the Wizard to be approved"}},"balanceOf(address)":{"params":{"owner":"Address to query the balance of."},"return":"uint256 representing the amount of Wizards owned by the address."},"constructor":{"params":{"_cooAddress":"The COO has the ability to create new Series and to update         the metadata on the currently open Series (if any). It has no other special         abilities, and (in particular), ALL Wizards in a closed series can never be         modified or deleted. If the CEO and COO values are ever set to invalid addresses        (such as address(1)), then no new Series can ever be created, either."}},"getApproved(uint256)":{"params":{"wizardId":"ID of the Wizard to query the approval of"},"return":"address currently approved for the given Wizard"},"isApprovedForAll(address,address)":{"params":{"operator":"operator address which you want to query the approval of","owner":"owner address which you want to query the approval of"},"return":"bool whether the given operator is approved by the given owner"},"mintReservedWizards(uint256[],uint88[],uint8[],address)":{"details":"This function DOES NOT CALL onERC721Received() as required by the ERC-721 standard. It is         REQUIRED that the Minter calls onERC721Received() after calling this function. See the note         above on mintWizards() for more info.","params":{"affinities":"the Elements of the Wizards to create.","owner":"the address that will own the newly created Wizards.","powers":"the power level of each Wizard.","wizardIds":"the ID values to use for each Wizard, must be in the reserved range of the current Series."}},"mintWizards(uint88[],uint8[],address)":{"details":"This function DOES NOT CALL onERC721Received() as required by the ERC-721 standard. It is         REQUIRED that the Minter calls onERC721Received() after calling this function. The following         code snippet should suffice:                 // Ensure the Wizard is being assigned to an ERC-721 aware address (either an external address,                 // or a smart contract that implements onERC721Received()). We must call onERC721Recieved for                 // each token created because it's allowed for an ERC-721 receiving contract to reject the                 // transfer based on the properties of the token.                 if (isContract(owner)) {                     for (uint256 i = 0; i < wizardIds.length; i++) {                         bytes4 retval = IERC721Receiver(owner).onERC721Received(owner, address(0), wizardIds[i], \"\");                         require(retval == _ERC721_RECEIVED, \"Contract owner didn't accept ERC721 transfer\");                     }                 }        Although it would be convenient for mintWizards to call onERC721Recieved, it opens us up to potential        reentrancy attacks if the Minter needs to do more state updates after mintWizards() returns.","params":{"affinities":"the Elements of the wizards to create","owner":"the address that will own the newly created Wizards","powers":"the power level of each wizard"}},"openSeries(address,uint256)":{"params":{"minter":"The address which is allowed to mint Wizards in this series. This contract does not         assume that the minter is a smart contract, but it will presumably be in the vast majority         of the cases. A minter has absolute control over the creation of new Wizards in an open         Series, but CAN NOT manipulate a Series after it has been close, and CAN NOT mainpulate         any Wizards that don't belong to its own Series. (Even if the same minting address is used         for multiple Series, the Minter only has power over the currently open Series.)","reservedIds":"The number of IDs (from 1 to reservedIds, inclusive) that are reserved for minting         reserved Wizards. (We use the term \"reserved\" here, instead of Exclusive, because there         are times -- such as during the importation of the PreSale -- when we need to reserve a         block of IDs for Wizards that aren't what a user would think of as \"exclusive\". In Series         0, the reserved IDs will include all Exclusive Wizards and Presale Wizards. In other Series         it might also be the case that the set of \"reserved IDs\" doesn't exactly match the set of         \"exclusive\" IDs.)"}},"ownerOf(uint256)":{"params":{"wizardId":"ID of the Wizard to query the owner of"},"return":"address currently marked as the owner of the given Wizard"},"safeTransferFrom(address,address,uint256)":{"params":{"from":"current owner of the Wizard.","to":"address to receive the ownership of the given Wizard.","wizardId":"ID of the Wizard to be transferred."}},"safeTransferFrom(address,address,uint256,bytes)":{"params":{"_data":"bytes data to send along with a safe transfer check","from":"current owner of the Wizard.","to":"address to receive the ownership of the given Wizard.","wizardId":"ID of the Wizard to be transferred."}},"setAffinity(uint256,uint8)":{"params":{"newAffinity":"The new affinity of the Wizard.","wizardId":"The ID of the Wizard to update affinity of."}},"setApprovalForAll(address,bool)":{"params":{"approved":"representing the status of the approval to be set","to":"operator address to set the approval"}},"setCeo(address)":{"params":{"newCeo":"The address of the new CEO"}},"setCfo(address)":{"params":{"newCfo":"The address of the new CFO"}},"setCoo(address)":{"params":{"newCoo":"The address of the new COO"}},"setMetadata(uint256[],bytes32[])":{"params":{"metadata":"the raw metadata values for each Wizard. This contract does not define how metadata         should be interpreted, but it is likely to be a 256-bit hash of a complete metadata package         accessible via IPFS or similar.","wizardIds":"the ID values of the Wizards to apply metadata changes to."}},"transferFrom(address,address,uint256)":{"params":{"from":"current owner of the Wizard.","to":"address to receive the ownership of the given Wizard.","wizardId":"ID of the Wizard to be transferred."}},"verifySignature(uint256,bytes32,bytes)":{"params":{"hash":"The message hash we are authenticating against","sig":"the signature data; can be longer than 65 bytes for ERC-1654","wizardId":"The Wizard ID whose control is in question"}},"verifySignatures(uint256,uint256,bytes32,bytes32,bytes,bytes)":{"params":{"hash1":"The message hash we are authenticating against for the first Wizard","hash2":"The message hash we are authenticating against for the first Wizard","sig1":"the signature data corresponding to the first Wizard; can be longer than 65 bytes for ERC-1654","sig2":"the signature data corresponding to the second Wizard; can be longer than 65 bytes for ERC-1654","wizardId1":"The first Wizard ID whose control is in question","wizardId2":"The second Wizard ID whose control is in question"}}},"title":"The master organization behind all Cheeze Wizardry. The source of all them Wiz."},"userdoc":{"methods":{"approve(address,uint256)":{"notice":"Approves another address to transfer the given Wizard The zero address indicates there is no approved address. There can only be one approved address per Wizard at a given time. Can only be called by the Wizard owner or an approved operator."},"balanceOf(address)":{"notice":"Gets the number of Wizards owned by the specified address."},"closeSeries()":{"notice":"Closes the current Wizard Series. Once a Series has been closed, it is forever sealed and         no more Wizards in that Series can ever be minted! Can only be called by the COO when a Series         is open.     ///    NOTE: A series can be closed by the COO or the Minter. (It's assumed that some minters will          know when they are done, and others will need to be shut off manually by the COO.)"},"constructor":"The Guild constructor.","getApproved(uint256)":{"notice":"Gets the approved address for a Wizard, or zero if no address set Reverts if the Wizard does not exist."},"getWizard(uint256)":{"notice":"Returns the information associated with the given Wizard         owner - The address that owns this Wizard         innatePower - The innate power level of this Wizard, set when minted and entirely               immutable         affinity - The Elemental Affinity of this Wizard. For most Wizards, this is set               when they are minted, but some exclusive Wizards are minted with an affinity               of 0 (ELEMENT_NOTSET). A Wizard with an NOTSET affinity should NOT be able               to participate in Tournaments. Once the affinity of a Wizard is set to a non-zero               value, it can never be changed again.         metadata - A 256-bit hash of the Wizard's metadata, which is stored off chain. This               contract doesn't specify format of this hash, nor the off-chain storage mechanism               but, let's be honest, it's probably an IPFS SHA-256 hash.     ///         NOTE: Series zero Wizards have one of four Affinities:  Neutral (1), Fire (2), Water (3)               or Air (4, sometimes called \"Wind\" in the code). Future Wizard Series may have               additional Affinities, and clients of this API should be prepared for that               eventuality."},"isApprovedForAll(address,address)":{"notice":"Tells whether an operator is approved by a given owner."},"isApprovedOrOwner(address,uint256)":{"notice":"Returns true if the given \"spender\" address is allowed to manipulate the given token         (either because it is the owner of that token, has been given approval to manage that token)"},"mintReservedWizards(uint256[],uint88[],uint8[],address)":{"notice":"A function to be called that mints a Series of Wizards in the reserved ID range, can only         be called by the Minter for this Series."},"mintWizards(uint88[],uint8[],address)":{"notice":"A function to be called that conjures a whole bunch of Wizards at once! You know how         there's \"a pride of lions\", \"a murder of crows\", and \"a parliament of owls\"? Well, with this         here function you can conjure yourself \"a stench of Cheeze Wizards\"!     ///         Unsurprisingly, this method can only be called by the registered minter for a Series."},"openSeries(address,uint256)":{"notice":"Open a new Series of Cheeze Wizards! Can only be called by the COO when no Series is open."},"ownerOf(uint256)":{"notice":"Gets the owner of the specified Wizard"},"safeTransferFrom(address,address,uint256)":{"notice":"Safely transfers the ownership of a given Wizard to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator."},"safeTransferFrom(address,address,uint256,bytes)":{"notice":"Safely transfers the ownership of a given Wizard to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator"},"setAffinity(uint256,uint8)":{"notice":"Sets the affinity for a Wizard that doesn't already have its elemental affinity chosen.         Only usable for Exclusive Wizards (all non-Exclusives must have their affinity chosen when         conjured.) Even Exclusives can't change their affinity once it's been chosen.     ///         NOTE: This function can only be called by the Series minter, and (therefore) only while the         Series is open. A Wizard that has no affinity when a Series is closed will NEVER have an Affinity."},"setApprovalForAll(address,bool)":{"notice":"Sets or unsets the approval of a given operator. An operator is allowed to transfer all Wizards of the sender on their behalf."},"setCeo(address)":{"notice":"Assigns a new address to act as the CEO. Only available to the current CEO."},"setCfo(address)":{"notice":"Assigns a new address to act as the CFO. Only available to the current CEO."},"setCoo(address)":{"notice":"Assigns a new address to act as the COO. Only available to the current CEO."},"setMetadata(uint256[],bytes32[])":{"notice":"Sets the metadata values for a list of Wizards. The metadata for a Wizard can only be set once,         can only be set by the COO or Minter, and can only be set while the Series is still open. Once         a Series is closed, the metadata is locked forever!"},"supportsInterface(bytes4)":{"notice":"ERC-165 Query Function."},"transferFrom(address,address,uint256)":{"notice":"Transfers the ownership of a given Wizard to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator."},"verifySignature(uint256,bytes32,bytes)":{"notice":"Verifies that a given signature represents authority to control the given Wizard ID,         reverting otherwise. It handles three cases:             - The simplest case: The signature was signed with the private key associated with               an external address that is the owner of this Wizard.             - The signature was generated with the private key associated with an external address               that is \"approved\" for working with this Wizard ID. (See the Wizard Guild and/or               the ERC-721 spec for more information on \"approval\".)             - The owner or approval address (as in cases one or two) is a smart contract               that conforms to ERC-1654, and accepts the given signature as being valid               using its own internal logic.     ///        NOTE: This function DOES NOT accept a signature created by an address that was given \"operator               status\" (as granted by ERC-721's setApprovalForAll() functionality). Doing so is               considered an extreme edge case that can be worked around where necessary."},"verifySignatures(uint256,uint256,bytes32,bytes32,bytes,bytes)":{"notice":"Convienence function that verifies signatures for two wizards using equivalent logic to         verifySignature(). Included to save on cross-contract calls in the common case where we         are verifying the signatures of two Wizards who wish to enter into a Duel."}}}}